!function(){function e(e,t,n,i){Object.defineProperty(e,t,{get:n,set:i,enumerable:!0,configurable:!0})}function t(e){return e&&e.__esModule?e.default:e}var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},i={},r={},a=n.parcelRequire94c2;function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function l(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e}
/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function u(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function c(e,t,n,i,r,a,o){try{var s=e[a](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(i,r)}function h(e){return function(){var t=this,n=arguments;return new Promise((function(i,r){var a=e.apply(t,n);function o(e){c(a,i,r,o,s,"next",e)}function s(e){c(a,i,r,o,s,"throw",e)}o(void 0)}))}}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}function p(e){return f(e)}function m(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function v(e,t,n){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var i=m(e,t);if(i){var r=Object.getOwnPropertyDescriptor(i,t);return r.get?r.get.call(n||e):r.value}},v(e,t,n)}function g(e,t,n){return v(e,t,n)}function _(e,t){return _=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},_(e,t)}function y(e,t){return _(e,t)}function x(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}function b(e){if(Array.isArray(e))return e}function w(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function M(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function S(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function T(e,t){if(e){if("string"==typeof e)return S(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?S(e,t):void 0}}function A(e,t){return b(e)||w(e)||T(e,t)||M()}function E(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function k(e,t,n){return k=E()?Reflect.construct:function(e,t,n){var i=[null];i.push.apply(i,t);var r=new(Function.bind.apply(e,i));return n&&y(r,n.prototype),r},k.apply(null,arguments)}function C(e,t,n){return k.apply(null,arguments)}function L(e){var t="function"==typeof Map?new Map:void 0;return L=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,i)}function i(){return C(e,arguments,p(this).constructor)}return i.prototype=Object.create(e.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),y(i,e)},L(e)}function P(e){return L(e)}function D(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function R(e){return e&&e.constructor===Symbol?"symbol":typeof e}function I(e,t){return!t||"object"!==R(t)&&"function"!=typeof t?u(e):t}function O(e){var t=D();return function(){var n,i=p(e);if(t){var r=p(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return I(this,n)}}null==a&&((a=function(e){if(e in i)return i[e].exports;if(e in r){var t=r[e];delete r[e];var n={id:e,exports:{}};return i[e]=n,t.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){r[e]=t},n.parcelRequire94c2=a),a.register("gdwRx",(function(t,n){var i,r;e(t.exports,"register",(function(){return i}),(function(e){return i=e})),e(t.exports,"resolve",(function(){return r}),(function(e){return r=e}));var a={};i=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)a[t[n]]=e[t[n]]},r=function(e){var t=a[e];if(null==t)throw new Error("Could not resolve bundle with id "+e);return t}})),a.register("icxnm",(function(t,n){var i;e(t.exports,"getBundleURL",(function(){return i}),(function(e){return i=e}));var r={};function a(e){return(""+e).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/.+)\/[^/]+$/,"$1")+"/"}i=function(e){var t=r[e];return t||(t=function(){try{throw new Error}catch(t){var e=(""+t.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^)\n]+/g);if(e)return a(e[2])}return"/"}(),r[e]=t),t}})),a("gdwRx").register(JSON.parse('{"3LtfI":"app.js","469Ve":"riot.9527c7fe.png"}'));function N(e,t){var n,i,r,a,o=function(e){return function(t){return s([e,t])}},s=function(o){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,o[0]&&(l=0)),l;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,i=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!(r=l.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){l=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){l.label=o[1];break}if(6===o[0]&&l.label<r[1]){l.label=r[1],r=o;break}if(r&&l.label<r[2]){l.label=r[2],l.ops.push(o);break}r[2]&&l.ops.pop(),l.trys.pop();continue}o=t.call(e,l)}catch(e){o=[6,e],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}},l={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a}Object.create;Object.create;var z="147",U=100,F=301,B=302,V=303,H=304,G=306,W=1e3,j=1001,X=1002,q=1003,Y=1004,$=1005,Z=1006,J=1008,K=1009,Q=1012,ee=1014,te=1015,ne=1016,ie=1020,re=1023,ae=1026,oe=1027,se=33776,le=33777,ue=33778,ce=33779,he=35840,de=35841,fe=35842,pe=35843,me=37492,ve=37496,ge=37808,_e=37809,ye=37810,xe=37811,be=37812,we=37813,Me=37814,Se=37815,Te=37816,Ae=37817,Ee=37818,ke=37819,Ce=37820,Le=37821,Pe=36492,De=2300,Re=2301,Ie=2302,Oe=2400,Ne=2401,ze=2402,Ue=3e3,Fe=3001,Be="srgb",Ve="srgb-linear",He=7680,Ge=35044,We="300 es",je=1035,Xe=function(){"use strict";function e(){o(this,e)}return l(e,[{key:"addEventListener",value:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}},{key:"hasEventListener",value:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}},{key:"removeEventListener",value:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){var i=n.indexOf(t);-1!==i&&n.splice(i,1)}}}},{key:"dispatchEvent",value:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=t.slice(0),i=0,r=n.length;i<r;i++)n[i].call(this,e);e.target=null}}}}]),e}(),qe=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Ye=Math.PI/180,$e=180/Math.PI;function Ze(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(qe[255&e]+qe[e>>8&255]+qe[e>>16&255]+qe[e>>24&255]+"-"+qe[255&t]+qe[t>>8&255]+"-"+qe[t>>16&15|64]+qe[t>>24&255]+"-"+qe[63&n|128]+qe[n>>8&255]+"-"+qe[n>>16&255]+qe[n>>24&255]+qe[255&i]+qe[i>>8&255]+qe[i>>16&255]+qe[i>>24&255]).toLowerCase()}function Je(e,t,n){return Math.max(t,Math.min(n,e))}function Ke(e,t){return(e%t+t)%t}function Qe(e,t,n){return(1-n)*e+n*t}function et(e){return 0==(e&e-1)&&0!==e}function tt(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function nt(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function it(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}var rt=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;o(this,e),e.prototype.isVector2=!0,this.x=t,this.y=n}return l(e,[{key:"width",get:function(){return this.x},set:function(e){this.x=e}},{key:"height",get:function(){return this.y},set:function(e){this.y=e}},{key:"set",value:function(e,t){return this.x=e,this.y=t,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"applyMatrix3",value:function(e){var t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y}},{key:"cross",value:function(e){return this.x*e.y-this.y*e.x}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"angle",value:function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e}},{key:"fromBufferAttribute",value:function(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}},{key:"rotateAround",value:function(e,t){var n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this}},{key:Symbol.iterator,value:function(){return N(this,(function(e){switch(e.label){case 0:return[4,this.x];case 1:return e.sent(),[4,this.y];case 2:return e.sent(),[2]}}))}}]),e}(),at=function(){"use strict";function e(){o(this,e),e.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}return l(e,[{key:"set",value:function(e,t,n,i,r,a,o,s,l){var u=this.elements;return u[0]=e,u[1]=i,u[2]=o,u[3]=t,u[4]=r,u[5]=s,u[6]=n,u[7]=a,u[8]=l,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}},{key:"extractBasis",value:function(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}},{key:"setFromMatrix4",value:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],u=n[4],c=n[7],h=n[2],d=n[5],f=n[8],p=i[0],m=i[3],v=i[6],g=i[1],_=i[4],y=i[7],x=i[2],b=i[5],w=i[8];return r[0]=a*p+o*g+s*x,r[3]=a*m+o*_+s*b,r[6]=a*v+o*y+s*w,r[1]=l*p+u*g+c*x,r[4]=l*m+u*_+c*b,r[7]=l*v+u*y+c*w,r[2]=h*p+d*g+f*x,r[5]=h*m+d*_+f*b,r[8]=h*v+d*y+f*w,this}},{key:"multiplyScalar",value:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}},{key:"determinant",value:function(){var e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8];return t*a*u-t*o*l-n*r*u+n*o*s+i*r*l-i*a*s}},{key:"invert",value:function(){var e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c=u*a-o*l,h=o*s-u*r,d=l*r-a*s,f=t*c+n*h+i*d;if(0===f)return this.set(0,0,0,0,0,0,0,0,0);var p=1/f;return e[0]=c*p,e[1]=(i*l-u*n)*p,e[2]=(o*n-i*a)*p,e[3]=h*p,e[4]=(u*t-i*s)*p,e[5]=(i*r-o*t)*p,e[6]=d*p,e[7]=(n*s-l*t)*p,e[8]=(a*t-n*r)*p,this}},{key:"transpose",value:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}},{key:"getNormalMatrix",value:function(e){return this.setFromMatrix4(e).invert().transpose()}},{key:"transposeIntoArray",value:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},{key:"setUvTransform",value:function(e,t,n,i,r,a,o){var s=Math.cos(r),l=Math.sin(r);return this.set(n*s,n*l,-n*(s*a+l*o)+a+e,-i*l,i*s,-i*(-l*a+s*o)+o+t,0,0,1),this}},{key:"scale",value:function(e,t){return this.premultiply(ot.makeScale(e,t)),this}},{key:"rotate",value:function(e){return this.premultiply(ot.makeRotation(-e)),this}},{key:"translate",value:function(e,t){return this.premultiply(ot.makeTranslation(e,t)),this}},{key:"makeTranslation",value:function(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}},{key:"makeRotation",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}},{key:"makeScale",value:function(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}},{key:"equals",value:function(e){for(var t=this.elements,n=e.elements,i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<9;n++)this.elements[n]=e[n+t];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}}]),e}(),ot=new at;function st(e){for(var t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}var lt;Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function ut(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function ct(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function ht(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}var dt=(d(lt={},Be,d({},Ve,ct)),d(lt,Ve,d({},Be,ht)),lt),ft={legacyMode:!0,get workingColorSpace(){return Ve},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(this.legacyMode||t===n||!t||!n)return e;if(dt[t]&&void 0!==dt[t][n]){var i=dt[t][n];return e.r=i(e.r),e.g=i(e.g),e.b=i(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},pt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},mt={r:0,g:0,b:0},vt={h:0,s:0,l:0},gt={h:0,s:0,l:0};function _t(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function yt(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}var xt,bt=function(){"use strict";function e(t,n,i){return o(this,e),this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===n&&void 0===i?this.set(t):this.setRGB(t,n,i)}return l(e,[{key:"set",value:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}},{key:"setScalar",value:function(e){return this.r=e,this.g=e,this.b=e,this}},{key:"setHex",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Be;return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,ft.toWorkingColorSpace(this,t),this}},{key:"setRGB",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ft.workingColorSpace;return this.r=e,this.g=t,this.b=n,ft.toWorkingColorSpace(this,i),this}},{key:"setHSL",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ft.workingColorSpace;if(e=Ke(e,1),t=Je(t,0,1),n=Je(n,0,1),0===t)this.r=this.g=this.b=n;else{var r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=_t(a,r,e+1/3),this.g=_t(a,r,e),this.b=_t(a,r,e-1/3)}return ft.toWorkingColorSpace(this,i),this}},{key:"setStyle",value:function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Be,i=function(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")};if(t=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){var r,a=t[1],o=t[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,ft.toWorkingColorSpace(this,n),i(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,ft.toWorkingColorSpace(this,n),i(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){var s=parseFloat(r[1])/360,l=parseFloat(r[2])/100,u=parseFloat(r[3])/100;return i(r[4]),this.setHSL(s,l,u,n)}}}else if(t=/^\#([A-Fa-f\d]+)$/.exec(e)){var c=t[1],h=c.length;if(3===h)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,ft.toWorkingColorSpace(this,n),this;if(6===h)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,ft.toWorkingColorSpace(this,n),this}return e&&e.length>0?this.setColorName(e,n):this}},{key:"setColorName",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Be,n=pt[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}},{key:"clone",value:function(){return new this.constructor(this.r,this.g,this.b)}},{key:"copy",value:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}},{key:"copySRGBToLinear",value:function(e){return this.r=ct(e.r),this.g=ct(e.g),this.b=ct(e.b),this}},{key:"copyLinearToSRGB",value:function(e){return this.r=ht(e.r),this.g=ht(e.g),this.b=ht(e.b),this}},{key:"convertSRGBToLinear",value:function(){return this.copySRGBToLinear(this),this}},{key:"convertLinearToSRGB",value:function(){return this.copyLinearToSRGB(this),this}},{key:"getHex",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Be;return ft.fromWorkingColorSpace(yt(this,mt),e),Je(255*mt.r,0,255)<<16^Je(255*mt.g,0,255)<<8^Je(255*mt.b,0,255)<<0}},{key:"getHexString",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Be;return("000000"+this.getHex(e).toString(16)).slice(-6)}},{key:"getHSL",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ft.workingColorSpace;ft.fromWorkingColorSpace(yt(this,mt),t);var n,i,r=mt.r,a=mt.g,o=mt.b,s=Math.max(r,a,o),l=Math.min(r,a,o),u=(l+s)/2;if(l===s)n=0,i=0;else{var c=s-l;switch(i=u<=.5?c/(s+l):c/(2-s-l),s){case r:n=(a-o)/c+(a<o?6:0);break;case a:n=(o-r)/c+2;break;case o:n=(r-a)/c+4}n/=6}return e.h=n,e.s=i,e.l=u,e}},{key:"getRGB",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ft.workingColorSpace;return ft.fromWorkingColorSpace(yt(this,mt),t),e.r=mt.r,e.g=mt.g,e.b=mt.b,e}},{key:"getStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Be;return ft.fromWorkingColorSpace(yt(this,mt),e),e!==Be?"color(".concat(e," ").concat(mt.r," ").concat(mt.g," ").concat(mt.b,")"):"rgb(".concat(255*mt.r|0,",").concat(255*mt.g|0,",").concat(255*mt.b|0,")")}},{key:"offsetHSL",value:function(e,t,n){return this.getHSL(vt),vt.h+=e,vt.s+=t,vt.l+=n,this.setHSL(vt.h,vt.s,vt.l),this}},{key:"add",value:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}},{key:"addColors",value:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}},{key:"addScalar",value:function(e){return this.r+=e,this.g+=e,this.b+=e,this}},{key:"sub",value:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}},{key:"multiply",value:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}},{key:"multiplyScalar",value:function(e){return this.r*=e,this.g*=e,this.b*=e,this}},{key:"lerp",value:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}},{key:"lerpColors",value:function(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}},{key:"lerpHSL",value:function(e,t){this.getHSL(vt),e.getHSL(gt);var n=Qe(vt.h,gt.h,t),i=Qe(vt.s,gt.s,t),r=Qe(vt.l,gt.l,t);return this.setHSL(n,i,r),this}},{key:"equals",value:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},{key:"fromBufferAttribute",value:function(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}},{key:"toJSON",value:function(){return this.getHex()}},{key:Symbol.iterator,value:function(){return N(this,(function(e){switch(e.label){case 0:return[4,this.r];case 1:return e.sent(),[4,this.g];case 2:return e.sent(),[4,this.b];case 3:return e.sent(),[2]}}))}}]),e}();bt.NAMES=pt;var wt=function(){"use strict";function e(){o(this,e)}return l(e,null,[{key:"getDataURL",value:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;var t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===xt&&(xt=ut("canvas")),xt.width=e.width,xt.height=e.height;var n=xt.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=xt}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}},{key:"sRGBToLinear",value:function(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){var t=ut("canvas");t.width=e.width,t.height=e.height;var n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);for(var i=n.getImageData(0,0,e.width,e.height),r=i.data,a=0;a<r.length;a++)r[a]=255*ct(r[a]/255);return n.putImageData(i,0,0),t}if(e.data){for(var o=e.data.slice(0),s=0;s<o.length;s++)o instanceof Uint8Array||o instanceof Uint8ClampedArray?o[s]=Math.floor(255*ct(o[s]/255)):o[s]=ct(o[s]);return{data:o,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}]),e}(),Mt=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;o(this,e),this.isSource=!0,this.uuid=Ze(),this.data=t,this.version=0}return l(e,[{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"toJSON",value:function(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];var n={uuid:this.uuid,url:""},i=this.data;if(null!==i){var r;if(Array.isArray(i)){r=[];for(var a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(St(i[a].image)):r.push(St(i[a]))}else r=St(i);n.url=r}return t||(e.images[this.uuid]=n),n}}]),e}();function St(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?wt.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var Tt=0,At=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.DEFAULT_IMAGE,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.DEFAULT_MAPPING,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:j,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:j,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Z,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:J,h=arguments.length>6&&void 0!==arguments[6]?arguments[6]:re,d=arguments.length>7&&void 0!==arguments[7]?arguments[7]:K,f=arguments.length>8&&void 0!==arguments[8]?arguments[8]:n.DEFAULT_ANISOTROPY,p=arguments.length>9&&void 0!==arguments[9]?arguments[9]:Ue;return o(this,n),(e=t.call(this)).isTexture=!0,Object.defineProperty(u(e),"id",{value:Tt++}),e.uuid=Ze(),e.name="",e.source=new Mt(i),e.mipmaps=[],e.mapping=r,e.wrapS=a,e.wrapT=s,e.magFilter=l,e.minFilter=c,e.anisotropy=f,e.format=h,e.internalFormat=null,e.type=d,e.offset=new rt(0,0),e.repeat=new rt(1,1),e.center=new rt(0,0),e.rotation=0,e.matrixAutoUpdate=!0,e.matrix=new at,e.generateMipmaps=!0,e.premultiplyAlpha=!1,e.flipY=!0,e.unpackAlignment=4,e.encoding=p,e.userData={},e.version=0,e.onUpdate=null,e.isRenderTargetTexture=!1,e.needsPMREMUpdate=!1,e}return l(n,[{key:"image",get:function(){return this.source.data},set:function(e){this.source.data=e}},{key:"updateMatrix",value:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}},{key:"toJSON",value:function(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"transformUv",value:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case W:e.x=e.x-Math.floor(e.x);break;case j:e.x=e.x<0?0:1;break;case X:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case W:e.y=e.y-Math.floor(e.y);break;case j:e.y=e.y<0?0:1;break;case X:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}},{key:"needsUpdate",set:function(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}]),n}(Xe);At.DEFAULT_IMAGE=null,At.DEFAULT_MAPPING=300,At.DEFAULT_ANISOTROPY=1;var Et=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;o(this,e),e.prototype.isVector4=!0,this.x=t,this.y=n,this.z=i,this.w=r}return l(e,[{key:"width",get:function(){return this.z},set:function(e){this.z=e}},{key:"height",get:function(){return this.w},set:function(e){this.w=e}},{key:"set",value:function(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setW",value:function(e){return this.w=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}},{key:"applyMatrix4",value:function(e){var t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"setAxisAngleFromQuaternion",value:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}},{key:"setAxisAngleFromRotationMatrix",value:function(e){var t,n,i,r,a=.01,o=.1,s=e.elements,l=s[0],u=s[4],c=s[8],h=s[1],d=s[5],f=s[9],p=s[2],m=s[6],v=s[10];if(Math.abs(u-h)<a&&Math.abs(c-p)<a&&Math.abs(f-m)<a){if(Math.abs(u+h)<o&&Math.abs(c+p)<o&&Math.abs(f+m)<o&&Math.abs(l+d+v-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var g=(l+1)/2,_=(d+1)/2,y=(v+1)/2,x=(u+h)/4,b=(c+p)/4,w=(f+m)/4;return g>_&&g>y?g<a?(n=0,i=.707106781,r=.707106781):(i=x/(n=Math.sqrt(g)),r=b/n):_>y?_<a?(n=.707106781,i=0,r=.707106781):(n=x/(i=Math.sqrt(_)),r=w/i):y<a?(n=.707106781,i=.707106781,r=0):(n=b/(r=Math.sqrt(y)),i=w/r),this.set(n,i,r,t),this}var M=Math.sqrt((m-f)*(m-f)+(c-p)*(c-p)+(h-u)*(h-u));return Math.abs(M)<.001&&(M=1),this.x=(m-f)/M,this.y=(c-p)/M,this.z=(h-u)/M,this.w=Math.acos((l+d+v-1)/2),this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}},{key:"fromBufferAttribute",value:function(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}},{key:Symbol.iterator,value:function(){return N(this,(function(e){switch(e.label){case 0:return[4,this.x];case 1:return e.sent(),[4,this.y];case 2:return e.sent(),[4,this.z];case 3:return e.sent(),[4,this.w];case 4:return e.sent(),[2]}}))}}]),e}(),kt=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};o(this,n),(e=t.call(this)).isWebGLRenderTarget=!0,e.width=i,e.height=r,e.depth=1,e.scissor=new Et(0,0,i,r),e.scissorTest=!1,e.viewport=new Et(0,0,i,r);var s={width:i,height:r,depth:1};return e.texture=new At(s,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),e.texture.isRenderTargetTexture=!0,e.texture.flipY=!1,e.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,e.texture.internalFormat=void 0!==a.internalFormat?a.internalFormat:null,e.texture.minFilter=void 0!==a.minFilter?a.minFilter:Z,e.depthBuffer=void 0===a.depthBuffer||a.depthBuffer,e.stencilBuffer=void 0!==a.stencilBuffer&&a.stencilBuffer,e.depthTexture=void 0!==a.depthTexture?a.depthTexture:null,e.samples=void 0!==a.samples?a.samples:0,e}return l(n,[{key:"setSize",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;var t=Object.assign({},e.texture.image);return this.texture.source=new Mt(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(Xe),Ct=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return o(this,n),(e=t.call(this,null)).isDataArrayTexture=!0,e.image={data:i,width:r,height:a,depth:s},e.magFilter=q,e.minFilter=q,e.wrapR=j,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return n}(At),Lt=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return o(this,n),(e=t.call(this,null)).isData3DTexture=!0,e.image={data:i,width:r,height:a,depth:s},e.magFilter=q,e.minFilter=q,e.wrapR=j,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return n}(At),Pt=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;o(this,e),this.isQuaternion=!0,this._x=t,this._y=n,this._z=i,this._w=r}return l(e,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"w",get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}},{key:"set",value:function(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._w)}},{key:"copy",value:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}},{key:"setFromEuler",value:function(e,t){var n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,s=Math.sin,l=o(n/2),u=o(i/2),c=o(r/2),h=s(n/2),d=s(i/2),f=s(r/2);switch(a){case"XYZ":this._x=h*u*c+l*d*f,this._y=l*d*c-h*u*f,this._z=l*u*f+h*d*c,this._w=l*u*c-h*d*f;break;case"YXZ":this._x=h*u*c+l*d*f,this._y=l*d*c-h*u*f,this._z=l*u*f-h*d*c,this._w=l*u*c+h*d*f;break;case"ZXY":this._x=h*u*c-l*d*f,this._y=l*d*c+h*u*f,this._z=l*u*f+h*d*c,this._w=l*u*c-h*d*f;break;case"ZYX":this._x=h*u*c-l*d*f,this._y=l*d*c+h*u*f,this._z=l*u*f-h*d*c,this._w=l*u*c+h*d*f;break;case"YZX":this._x=h*u*c+l*d*f,this._y=l*d*c+h*u*f,this._z=l*u*f-h*d*c,this._w=l*u*c-h*d*f;break;case"XZY":this._x=h*u*c-l*d*f,this._y=l*d*c-h*u*f,this._z=l*u*f+h*d*c,this._w=l*u*c+h*d*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}},{key:"setFromAxisAngle",value:function(e,t){var n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],s=t[9],l=t[2],u=t[6],c=t[10],h=n+o+c;if(h>0){var d=.5/Math.sqrt(h+1);this._w=.25/d,this._x=(u-s)*d,this._y=(r-l)*d,this._z=(a-i)*d}else if(n>o&&n>c){var f=2*Math.sqrt(1+n-o-c);this._w=(u-s)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(r+l)/f}else if(o>c){var p=2*Math.sqrt(1+o-n-c);this._w=(r-l)/p,this._x=(i+a)/p,this._y=.25*p,this._z=(s+u)/p}else{var m=2*Math.sqrt(1+c-n-o);this._w=(a-i)/m,this._x=(r+l)/m,this._y=(s+u)/m,this._z=.25*m}return this._onChangeCallback(),this}},{key:"setFromUnitVectors",value:function(e,t){var n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}},{key:"angleTo",value:function(e){return 2*Math.acos(Math.abs(Je(this.dot(e),-1,1)))}},{key:"rotateTowards",value:function(e,t){var n=this.angleTo(e);if(0===n)return this;var i=Math.min(1,t/n);return this.slerp(e,i),this}},{key:"identity",value:function(){return this.set(0,0,0,1)}},{key:"invert",value:function(){return this.conjugate()}},{key:"conjugate",value:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}},{key:"dot",value:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}},{key:"lengthSq",value:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}},{key:"length",value:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}},{key:"normalize",value:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}},{key:"multiply",value:function(e){return this.multiplyQuaternions(this,e)}},{key:"premultiply",value:function(e){return this.multiplyQuaternions(e,this)}},{key:"multiplyQuaternions",value:function(e,t){var n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,s=t._y,l=t._z,u=t._w;return this._x=n*u+a*o+i*l-r*s,this._y=i*u+a*s+r*o-n*l,this._z=r*u+a*l+n*s-i*o,this._w=a*u-n*o-i*s-r*l,this._onChangeCallback(),this}},{key:"slerp",value:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,i=this._y,r=this._z,a=this._w,o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;var s=1-o*o;if(s<=Number.EPSILON){var l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*i+t*this._y,this._z=l*r+t*this._z,this.normalize(),this._onChangeCallback(),this}var u=Math.sqrt(s),c=Math.atan2(u,o),h=Math.sin((1-t)*c)/u,d=Math.sin(t*c)/u;return this._w=a*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}},{key:"slerpQuaternions",value:function(e,t,n){return this.copy(e).slerp(t,n)}},{key:"random",value:function(){var e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}},{key:"fromBufferAttribute",value:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}},{key:Symbol.iterator,value:function(){return N(this,(function(e){switch(e.label){case 0:return[4,this._x];case 1:return e.sent(),[4,this._y];case 2:return e.sent(),[4,this._z];case 3:return e.sent(),[4,this._w];case 4:return e.sent(),[2]}}))}}],[{key:"slerpFlat",value:function(e,t,n,i,r,a,o){var s=n[i+0],l=n[i+1],u=n[i+2],c=n[i+3],h=r[a+0],d=r[a+1],f=r[a+2],p=r[a+3];if(0===o)return e[t+0]=s,e[t+1]=l,e[t+2]=u,void(e[t+3]=c);if(1===o)return e[t+0]=h,e[t+1]=d,e[t+2]=f,void(e[t+3]=p);if(c!==p||s!==h||l!==d||u!==f){var m=1-o,v=s*h+l*d+u*f+c*p,g=v>=0?1:-1,_=1-v*v;if(_>Number.EPSILON){var y=Math.sqrt(_),x=Math.atan2(y,v*g);m=Math.sin(m*x)/y,o=Math.sin(o*x)/y}var b=o*g;if(s=s*m+h*b,l=l*m+d*b,u=u*m+f*b,c=c*m+p*b,m===1-o){var w=1/Math.sqrt(s*s+l*l+u*u+c*c);s*=w,l*=w,u*=w,c*=w}}e[t]=s,e[t+1]=l,e[t+2]=u,e[t+3]=c}},{key:"multiplyQuaternionsFlat",value:function(e,t,n,i,r,a){var o=n[i],s=n[i+1],l=n[i+2],u=n[i+3],c=r[a],h=r[a+1],d=r[a+2],f=r[a+3];return e[t]=o*f+u*c+s*d-l*h,e[t+1]=s*f+u*h+l*c-o*d,e[t+2]=l*f+u*d+o*h-s*c,e[t+3]=u*f-o*c-s*h-l*d,e}}]),e}(),Dt=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;o(this,e),e.prototype.isVector3=!0,this.x=t,this.y=n,this.z=i}return l(e,[{key:"set",value:function(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this}},{key:"multiplyVectors",value:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}},{key:"applyEuler",value:function(e){return this.applyQuaternion(It.setFromEuler(e))}},{key:"applyAxisAngle",value:function(e,t){return this.applyQuaternion(It.setFromAxisAngle(e,t))}},{key:"applyMatrix3",value:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}},{key:"applyNormalMatrix",value:function(e){return this.applyMatrix3(e).normalize()}},{key:"applyMatrix4",value:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}},{key:"applyQuaternion",value:function(e){var t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*i-o*n,u=s*n+o*t-r*i,c=s*i+r*n-a*t,h=-r*t-a*n-o*i;return this.x=l*s+h*-r+u*-o-c*-a,this.y=u*s+h*-a+c*-r-l*-o,this.z=c*s+h*-o+l*-a-u*-r,this}},{key:"project",value:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}},{key:"unproject",value:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}},{key:"transformDirection",value:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}},{key:"cross",value:function(e){return this.crossVectors(this,e)}},{key:"crossVectors",value:function(e,t){var n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,s=t.z;return this.x=i*s-r*o,this.y=r*a-n*s,this.z=n*o-i*a,this}},{key:"projectOnVector",value:function(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);var n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}},{key:"projectOnPlane",value:function(e){return Rt.copy(this).projectOnVector(e),this.sub(Rt)}},{key:"reflect",value:function(e){return this.sub(Rt.copy(e).multiplyScalar(2*this.dot(e)))}},{key:"angleTo",value:function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;var n=this.dot(e)/t;return Math.acos(Je(n,-1,1))}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}},{key:"setFromSpherical",value:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}},{key:"setFromSphericalCoords",value:function(e,t,n){var i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}},{key:"setFromCylindrical",value:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}},{key:"setFromCylindricalCoords",value:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}},{key:"setFromMatrixPosition",value:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}},{key:"setFromMatrixScale",value:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}},{key:"setFromMatrixColumn",value:function(e,t){return this.fromArray(e.elements,4*t)}},{key:"setFromMatrix3Column",value:function(e,t){return this.fromArray(e.elements,3*t)}},{key:"setFromEuler",value:function(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}},{key:"fromBufferAttribute",value:function(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}},{key:"randomDirection",value:function(){var e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-Math.pow(e,2));return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}},{key:Symbol.iterator,value:function(){return N(this,(function(e){switch(e.label){case 0:return[4,this.x];case 1:return e.sent(),[4,this.y];case 2:return e.sent(),[4,this.z];case 3:return e.sent(),[2]}}))}}]),e}(),Rt=new Dt,It=new Pt,Ot=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Dt(1/0,1/0,1/0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Dt(-1/0,-1/0,-1/0);o(this,e),this.isBox3=!0,this.min=t,this.max=n}return l(e,[{key:"set",value:function(e,t){return this.min.copy(e),this.max.copy(t),this}},{key:"setFromArray",value:function(e){for(var t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,l=e.length;s<l;s+=3){var u=e[s],c=e[s+1],h=e[s+2];u<t&&(t=u),c<n&&(n=c),h<i&&(i=h),u>r&&(r=u),c>a&&(a=c),h>o&&(o=h)}return this.min.set(t,n,i),this.max.set(r,a,o),this}},{key:"setFromBufferAttribute",value:function(e){for(var t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,l=e.count;s<l;s++){var u=e.getX(s),c=e.getY(s),h=e.getZ(s);u<t&&(t=u),c<n&&(n=c),h<i&&(i=h),u>r&&(r=u),c>a&&(a=c),h>o&&(o=h)}return this.min.set(t,n,i),this.max.set(r,a,o),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}},{key:"setFromCenterAndSize",value:function(e,t){var n=zt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}},{key:"setFromObject",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.makeEmpty(),this.expandByObject(e,t)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"expandByObject",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];e.updateWorldMatrix(!1,!1);var n=e.geometry;if(void 0!==n)if(t&&null!=n.attributes&&void 0!==n.attributes.position)for(var i=n.attributes.position,r=0,a=i.count;r<a;r++)zt.fromBufferAttribute(i,r).applyMatrix4(e.matrixWorld),this.expandByPoint(zt);else null===n.boundingBox&&n.computeBoundingBox(),Ut.copy(n.boundingBox),Ut.applyMatrix4(e.matrixWorld),this.union(Ut);for(var o=e.children,s=0,l=o.length;s<l;s++)this.expandByObject(o[s],t);return this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}},{key:"getParameter",value:function(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}},{key:"intersectsSphere",value:function(e){return this.clampPoint(e.center,zt),zt.distanceToSquared(e.center)<=e.radius*e.radius}},{key:"intersectsPlane",value:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}},{key:"intersectsTriangle",value:function(e){if(this.isEmpty())return!1;this.getCenter(jt),Xt.subVectors(this.max,jt),Ft.subVectors(e.a,jt),Bt.subVectors(e.b,jt),Vt.subVectors(e.c,jt),Ht.subVectors(Bt,Ft),Gt.subVectors(Vt,Bt),Wt.subVectors(Ft,Vt);var t=[0,-Ht.z,Ht.y,0,-Gt.z,Gt.y,0,-Wt.z,Wt.y,Ht.z,0,-Ht.x,Gt.z,0,-Gt.x,Wt.z,0,-Wt.x,-Ht.y,Ht.x,0,-Gt.y,Gt.x,0,-Wt.y,Wt.x,0];return!!$t(t,Ft,Bt,Vt,Xt)&&(!!$t(t=[1,0,0,0,1,0,0,0,1],Ft,Bt,Vt,Xt)&&(qt.crossVectors(Ht,Gt),$t(t=[qt.x,qt.y,qt.z],Ft,Bt,Vt,Xt)))}},{key:"clampPoint",value:function(e,t){return t.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return zt.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"getBoundingSphere",value:function(e){return this.getCenter(e.center),e.radius=.5*this.getSize(zt).length(),e}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"applyMatrix4",value:function(e){return this.isEmpty()||(Nt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Nt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Nt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Nt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Nt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Nt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Nt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Nt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Nt)),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),Nt=[new Dt,new Dt,new Dt,new Dt,new Dt,new Dt,new Dt,new Dt],zt=new Dt,Ut=new Ot,Ft=new Dt,Bt=new Dt,Vt=new Dt,Ht=new Dt,Gt=new Dt,Wt=new Dt,jt=new Dt,Xt=new Dt,qt=new Dt,Yt=new Dt;function $t(e,t,n,i,r){for(var a=0,o=e.length-3;a<=o;a+=3){Yt.fromArray(e,a);var s=r.x*Math.abs(Yt.x)+r.y*Math.abs(Yt.y)+r.z*Math.abs(Yt.z),l=t.dot(Yt),u=n.dot(Yt),c=i.dot(Yt);if(Math.max(-Math.max(l,u,c),Math.min(l,u,c))>s)return!1}return!0}var Zt=new Ot,Jt=new Dt,Kt=new Dt,Qt=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Dt,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;o(this,e),this.center=t,this.radius=n}return l(e,[{key:"set",value:function(e,t){return this.center.copy(e),this.radius=t,this}},{key:"setFromPoints",value:function(e,t){var n=this.center;void 0!==t?n.copy(t):Zt.setFromPoints(e).getCenter(n);for(var i=0,r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}},{key:"copy",value:function(e){return this.center.copy(e.center),this.radius=e.radius,this}},{key:"isEmpty",value:function(){return this.radius<0}},{key:"makeEmpty",value:function(){return this.center.set(0,0,0),this.radius=-1,this}},{key:"containsPoint",value:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"distanceToPoint",value:function(e){return e.distanceTo(this.center)-this.radius}},{key:"intersectsSphere",value:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}},{key:"intersectsBox",value:function(e){return e.intersectsSphere(this)}},{key:"intersectsPlane",value:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}},{key:"clampPoint",value:function(e,t){var n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}},{key:"getBoundingBox",value:function(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}},{key:"applyMatrix4",value:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}},{key:"translate",value:function(e){return this.center.add(e),this}},{key:"expandByPoint",value:function(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Jt.subVectors(e,this.center);var t=Jt.lengthSq();if(t>this.radius*this.radius){var n=Math.sqrt(t),i=.5*(n-this.radius);this.center.addScaledVector(Jt,i/n),this.radius+=i}return this}},{key:"union",value:function(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(Kt.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Jt.copy(e.center).add(Kt)),this.expandByPoint(Jt.copy(e.center).sub(Kt))),this)}},{key:"equals",value:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),en=new Dt,tn=new Dt,nn=new Dt,rn=new Dt,an=new Dt,on=new Dt,sn=new Dt,ln=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Dt,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Dt(0,0,-1);o(this,e),this.origin=t,this.direction=n}return l(e,[{key:"set",value:function(e,t){return this.origin.copy(e),this.direction.copy(t),this}},{key:"copy",value:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}},{key:"at",value:function(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}},{key:"lookAt",value:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this}},{key:"recast",value:function(e){return this.origin.copy(this.at(e,en)),this}},{key:"closestPointToPoint",value:function(e,t){t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}},{key:"distanceToPoint",value:function(e){return Math.sqrt(this.distanceSqToPoint(e))}},{key:"distanceSqToPoint",value:function(e){var t=en.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(en.copy(this.direction).multiplyScalar(t).add(this.origin),en.distanceToSquared(e))}},{key:"distanceSqToSegment",value:function(e,t,n,i){tn.copy(e).add(t).multiplyScalar(.5),nn.copy(t).sub(e).normalize(),rn.copy(this.origin).sub(tn);var r,a,o,s,l=.5*e.distanceTo(t),u=-this.direction.dot(nn),c=rn.dot(this.direction),h=-rn.dot(nn),d=rn.lengthSq(),f=Math.abs(1-u*u);if(f>0)if(a=u*c-h,s=l*f,(r=u*h-c)>=0)if(a>=-s)if(a<=s){var p=1/f;o=(r*=p)*(r+u*(a*=p)+2*c)+a*(u*r+a+2*h)+d}else a=l,o=-(r=Math.max(0,-(u*a+c)))*r+a*(a+2*h)+d;else a=-l,o=-(r=Math.max(0,-(u*a+c)))*r+a*(a+2*h)+d;else a<=-s?o=-(r=Math.max(0,-(-u*l+c)))*r+(a=r>0?-l:Math.min(Math.max(-l,-h),l))*(a+2*h)+d:a<=s?(r=0,o=(a=Math.min(Math.max(-l,-h),l))*(a+2*h)+d):o=-(r=Math.max(0,-(u*l+c)))*r+(a=r>0?l:Math.min(Math.max(-l,-h),l))*(a+2*h)+d;else a=u>0?-l:l,o=-(r=Math.max(0,-(u*a+c)))*r+a*(a+2*h)+d;return n&&n.copy(this.direction).multiplyScalar(r).add(this.origin),i&&i.copy(nn).multiplyScalar(a).add(tn),o}},{key:"intersectSphere",value:function(e,t){en.subVectors(e.center,this.origin);var n=en.dot(this.direction),i=en.dot(en)-n*n,r=e.radius*e.radius;if(i>r)return null;var a=Math.sqrt(r-i),o=n-a,s=n+a;return o<0&&s<0?null:o<0?this.at(s,t):this.at(o,t)}},{key:"intersectsSphere",value:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}},{key:"distanceToPlane",value:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}},{key:"intersectPlane",value:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}},{key:"intersectsPlane",value:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}},{key:"intersectBox",value:function(e,t){var n,i,r,a,o,s,l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,i=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,i=(e.min.x-h.x)*l),u>=0?(r=(e.min.y-h.y)*u,a=(e.max.y-h.y)*u):(r=(e.max.y-h.y)*u,a=(e.min.y-h.y)*u),n>a||r>i?null:((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),c>=0?(o=(e.min.z-h.z)*c,s=(e.max.z-h.z)*c):(o=(e.max.z-h.z)*c,s=(e.min.z-h.z)*c),n>s||o>i?null:((o>n||n!=n)&&(n=o),(s<i||i!=i)&&(i=s),i<0?null:this.at(n>=0?n:i,t)))}},{key:"intersectsBox",value:function(e){return null!==this.intersectBox(e,en)}},{key:"intersectTriangle",value:function(e,t,n,i,r){an.subVectors(t,e),on.subVectors(n,e),sn.crossVectors(an,on);var a,o=this.direction.dot(sn);if(o>0){if(i)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}rn.subVectors(this.origin,e);var s=a*this.direction.dot(on.crossVectors(rn,on));if(s<0)return null;var l=a*this.direction.dot(an.cross(rn));if(l<0)return null;if(s+l>o)return null;var u=-a*rn.dot(sn);return u<0?null:this.at(u/o,r)}},{key:"applyMatrix4",value:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}},{key:"equals",value:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),un=function(){"use strict";function e(){o(this,e),e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}return l(e,[{key:"set",value:function(e,t,n,i,r,a,o,s,l,u,c,h,d,f,p,m){var v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=r,v[5]=a,v[9]=o,v[13]=s,v[2]=l,v[6]=u,v[10]=c,v[14]=h,v[3]=d,v[7]=f,v[11]=p,v[15]=m,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"clone",value:function(){return(new e).fromArray(this.elements)}},{key:"copy",value:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}},{key:"copyPosition",value:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}},{key:"setFromMatrix3",value:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}},{key:"extractBasis",value:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(e){var t=this.elements,n=e.elements,i=1/cn.setFromMatrixColumn(e,0).length(),r=1/cn.setFromMatrixColumn(e,1).length(),a=1/cn.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}},{key:"makeRotationFromEuler",value:function(e){var t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(i),l=Math.sin(i),u=Math.cos(r),c=Math.sin(r);if("XYZ"===e.order){var h=a*u,d=a*c,f=o*u,p=o*c;t[0]=s*u,t[4]=-s*c,t[8]=l,t[1]=d+f*l,t[5]=h-p*l,t[9]=-o*s,t[2]=p-h*l,t[6]=f+d*l,t[10]=a*s}else if("YXZ"===e.order){var m=s*u,v=s*c,g=l*u,_=l*c;t[0]=m+_*o,t[4]=g*o-v,t[8]=a*l,t[1]=a*c,t[5]=a*u,t[9]=-o,t[2]=v*o-g,t[6]=_+m*o,t[10]=a*s}else if("ZXY"===e.order){var y=s*u,x=s*c,b=l*u,w=l*c;t[0]=y-w*o,t[4]=-a*c,t[8]=b+x*o,t[1]=x+b*o,t[5]=a*u,t[9]=w-y*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){var M=a*u,S=a*c,T=o*u,A=o*c;t[0]=s*u,t[4]=T*l-S,t[8]=M*l+A,t[1]=s*c,t[5]=A*l+M,t[9]=S*l-T,t[2]=-l,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){var E=a*s,k=a*l,C=o*s,L=o*l;t[0]=s*u,t[4]=L-E*c,t[8]=C*c+k,t[1]=c,t[5]=a*u,t[9]=-o*u,t[2]=-l*u,t[6]=k*c+C,t[10]=E-L*c}else if("XZY"===e.order){var P=a*s,D=a*l,R=o*s,I=o*l;t[0]=s*u,t[4]=-c,t[8]=l*u,t[1]=P*c+I,t[5]=a*u,t[9]=D*c-R,t[2]=R*c-D,t[6]=o*u,t[10]=I*c+P}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(e){return this.compose(dn,e,fn)}},{key:"lookAt",value:function(e,t,n){var i=this.elements;return vn.subVectors(e,t),0===vn.lengthSq()&&(vn.z=1),vn.normalize(),pn.crossVectors(n,vn),0===pn.lengthSq()&&(1===Math.abs(n.z)?vn.x+=1e-4:vn.z+=1e-4,vn.normalize(),pn.crossVectors(n,vn)),pn.normalize(),mn.crossVectors(vn,pn),i[0]=pn.x,i[4]=mn.x,i[8]=vn.x,i[1]=pn.y,i[5]=mn.y,i[9]=vn.y,i[2]=pn.z,i[6]=mn.z,i[10]=vn.z,this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],f=n[2],p=n[6],m=n[10],v=n[14],g=n[3],_=n[7],y=n[11],x=n[15],b=i[0],w=i[4],M=i[8],S=i[12],T=i[1],A=i[5],E=i[9],k=i[13],C=i[2],L=i[6],P=i[10],D=i[14],R=i[3],I=i[7],O=i[11],N=i[15];return r[0]=a*b+o*T+s*C+l*R,r[4]=a*w+o*A+s*L+l*I,r[8]=a*M+o*E+s*P+l*O,r[12]=a*S+o*k+s*D+l*N,r[1]=u*b+c*T+h*C+d*R,r[5]=u*w+c*A+h*L+d*I,r[9]=u*M+c*E+h*P+d*O,r[13]=u*S+c*k+h*D+d*N,r[2]=f*b+p*T+m*C+v*R,r[6]=f*w+p*A+m*L+v*I,r[10]=f*M+p*E+m*P+v*O,r[14]=f*S+p*k+m*D+v*N,r[3]=g*b+_*T+y*C+x*R,r[7]=g*w+_*A+y*L+x*I,r[11]=g*M+_*E+y*P+x*O,r[15]=g*S+_*k+y*D+x*N,this}},{key:"multiplyScalar",value:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}},{key:"determinant",value:function(){var e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],s=e[9],l=e[13],u=e[2],c=e[6],h=e[10],d=e[14];return e[3]*(+r*s*c-i*l*c-r*o*h+n*l*h+i*o*d-n*s*d)+e[7]*(+t*s*d-t*l*h+r*a*h-i*a*d+i*l*u-r*s*u)+e[11]*(+t*l*c-t*o*d-r*a*c+n*a*d+r*o*u-n*l*u)+e[15]*(-i*o*u-t*s*c+t*o*h+i*a*c-n*a*h+n*s*u)}},{key:"transpose",value:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}},{key:"setPosition",value:function(e,t,n){var i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}},{key:"invert",value:function(){var e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c=e[9],h=e[10],d=e[11],f=e[12],p=e[13],m=e[14],v=e[15],g=c*m*l-p*h*l+p*s*d-o*m*d-c*s*v+o*h*v,_=f*h*l-u*m*l-f*s*d+a*m*d+u*s*v-a*h*v,y=u*p*l-f*c*l+f*o*d-a*p*d-u*o*v+a*c*v,x=f*c*s-u*p*s-f*o*h+a*p*h+u*o*m-a*c*m,b=t*g+n*_+i*y+r*x;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var w=1/b;return e[0]=g*w,e[1]=(p*h*r-c*m*r-p*i*d+n*m*d+c*i*v-n*h*v)*w,e[2]=(o*m*r-p*s*r+p*i*l-n*m*l-o*i*v+n*s*v)*w,e[3]=(c*s*r-o*h*r-c*i*l+n*h*l+o*i*d-n*s*d)*w,e[4]=_*w,e[5]=(u*m*r-f*h*r+f*i*d-t*m*d-u*i*v+t*h*v)*w,e[6]=(f*s*r-a*m*r-f*i*l+t*m*l+a*i*v-t*s*v)*w,e[7]=(a*h*r-u*s*r+u*i*l-t*h*l-a*i*d+t*s*d)*w,e[8]=y*w,e[9]=(f*c*r-u*p*r-f*n*d+t*p*d+u*n*v-t*c*v)*w,e[10]=(a*p*r-f*o*r+f*n*l-t*p*l-a*n*v+t*o*v)*w,e[11]=(u*o*r-a*c*r-u*n*l+t*c*l+a*n*d-t*o*d)*w,e[12]=x*w,e[13]=(u*p*i-f*c*i+f*n*h-t*p*h-u*n*m+t*c*m)*w,e[14]=(f*o*i-a*p*i-f*n*s+t*p*s+a*n*m-t*o*m)*w,e[15]=(a*c*i-u*o*i+u*n*s-t*c*s-a*n*h+t*o*h)*w,this}},{key:"scale",value:function(e){var t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}},{key:"getMaxScaleOnAxis",value:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}},{key:"makeTranslation",value:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}},{key:"makeRotationX",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}},{key:"makeRotationY",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(e,t){var n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,s=e.z,l=r*a,u=r*o;return this.set(l*a+n,l*o-i*s,l*s+i*o,0,l*o+i*s,u*o+n,u*s-i*a,0,l*s-i*o,u*s+i*a,r*s*s+n,0,0,0,0,1),this}},{key:"makeScale",value:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}},{key:"makeShear",value:function(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}},{key:"compose",value:function(e,t,n){var i=this.elements,r=t._x,a=t._y,o=t._z,s=t._w,l=r+r,u=a+a,c=o+o,h=r*l,d=r*u,f=r*c,p=a*u,m=a*c,v=o*c,g=s*l,_=s*u,y=s*c,x=n.x,b=n.y,w=n.z;return i[0]=(1-(p+v))*x,i[1]=(d+y)*x,i[2]=(f-_)*x,i[3]=0,i[4]=(d-y)*b,i[5]=(1-(h+v))*b,i[6]=(m+g)*b,i[7]=0,i[8]=(f+_)*w,i[9]=(m-g)*w,i[10]=(1-(h+p))*w,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}},{key:"decompose",value:function(e,t,n){var i=this.elements,r=cn.set(i[0],i[1],i[2]).length(),a=cn.set(i[4],i[5],i[6]).length(),o=cn.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],hn.copy(this);var s=1/r,l=1/a,u=1/o;return hn.elements[0]*=s,hn.elements[1]*=s,hn.elements[2]*=s,hn.elements[4]*=l,hn.elements[5]*=l,hn.elements[6]*=l,hn.elements[8]*=u,hn.elements[9]*=u,hn.elements[10]*=u,t.setFromRotationMatrix(hn),n.x=r,n.y=a,n.z=o,this}},{key:"makePerspective",value:function(e,t,n,i,r,a){var o=this.elements,s=2*r/(t-e),l=2*r/(n-i),u=(t+e)/(t-e),c=(n+i)/(n-i),h=-(a+r)/(a-r),d=-2*a*r/(a-r);return o[0]=s,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=l,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}},{key:"makeOrthographic",value:function(e,t,n,i,r,a){var o=this.elements,s=1/(t-e),l=1/(n-i),u=1/(a-r),c=(t+e)*s,h=(n+i)*l,d=(a+r)*u;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}},{key:"equals",value:function(e){for(var t=this.elements,n=e.elements,i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<16;n++)this.elements[n]=e[n+t];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}]),e}(),cn=new Dt,hn=new un,dn=new Dt(0,0,0),fn=new Dt(1,1,1),pn=new Dt,mn=new Dt,vn=new Dt,gn=new un,_n=new Pt,yn=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.DefaultOrder;o(this,e),this.isEuler=!0,this._x=t,this._y=n,this._z=i,this._order=r}return l(e,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"order",get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}},{key:"set",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._order;return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._order)}},{key:"copy",value:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=e.elements,r=i[0],a=i[4],o=i[8],s=i[1],l=i[5],u=i[9],c=i[2],h=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(Je(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Je(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(Je(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(s,r));break;case"ZYX":this._y=Math.asin(-Je(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(s,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(Je(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-Je(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}},{key:"setFromQuaternion",value:function(e,t,n){return gn.makeRotationFromQuaternion(e),this.setFromRotationMatrix(gn,t,n)}},{key:"setFromVector3",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order;return this.set(e.x,e.y,e.z,t)}},{key:"reorder",value:function(e){return _n.setFromEuler(this),this.setFromQuaternion(_n,e)}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}},{key:"fromArray",value:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}},{key:Symbol.iterator,value:function(){return N(this,(function(e){switch(e.label){case 0:return[4,this._x];case 1:return e.sent(),[4,this._y];case 2:return e.sent(),[4,this._z];case 3:return e.sent(),[4,this._order];case 4:return e.sent(),[2]}}))}},{key:"toVector3",value:function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}]),e}();yn.DefaultOrder="XYZ",yn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var xn=function(){"use strict";function e(){o(this,e),this.mask=1}return l(e,[{key:"set",value:function(e){this.mask=(1<<e|0)>>>0}},{key:"enable",value:function(e){this.mask|=1<<e|0}},{key:"enableAll",value:function(){this.mask=-1}},{key:"toggle",value:function(e){this.mask^=1<<e|0}},{key:"disable",value:function(e){this.mask&=~(1<<e|0)}},{key:"disableAll",value:function(){this.mask=0}},{key:"test",value:function(e){return 0!=(this.mask&e.mask)}},{key:"isEnabled",value:function(e){return 0!=(this.mask&(1<<e|0))}}]),e}(),bn=0,wn=new Dt,Mn=new Pt,Sn=new un,Tn=new Dt,An=new Dt,En=new Dt,kn=new Pt,Cn=new Dt(1,0,0),Ln=new Dt(0,1,0),Pn=new Dt(0,0,1),Dn={type:"added"},Rn={type:"removed"},In=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;o(this,n);(e=t.call(this)).isObject3D=!0,Object.defineProperty(u(e),"id",{value:bn++}),e.uuid=Ze(),e.name="",e.type="Object3D",e.parent=null,e.children=[],e.up=n.DefaultUp.clone();var i=new Dt,r=new yn,a=new Pt,s=new Dt(1,1,1);return r._onChange((function(){a.setFromEuler(r,!1)})),a._onChange((function(){r.setFromQuaternion(a,void 0,!1)})),Object.defineProperties(u(e),{position:{configurable:!0,enumerable:!0,value:i},rotation:{configurable:!0,enumerable:!0,value:r},quaternion:{configurable:!0,enumerable:!0,value:a},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new un},normalMatrix:{value:new at}}),e.matrix=new un,e.matrixWorld=new un,e.matrixAutoUpdate=n.DefaultMatrixAutoUpdate,e.matrixWorldNeedsUpdate=!1,e.matrixWorldAutoUpdate=n.DefaultMatrixWorldAutoUpdate,e.layers=new xn,e.visible=!0,e.castShadow=!1,e.receiveShadow=!1,e.frustumCulled=!0,e.renderOrder=0,e.animations=[],e.userData={},e}return l(n,[{key:"onBeforeRender",value:function(){}},{key:"onAfterRender",value:function(){}},{key:"applyMatrix4",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}},{key:"applyQuaternion",value:function(e){return this.quaternion.premultiply(e),this}},{key:"setRotationFromAxisAngle",value:function(e,t){this.quaternion.setFromAxisAngle(e,t)}},{key:"setRotationFromEuler",value:function(e){this.quaternion.setFromEuler(e,!0)}},{key:"setRotationFromMatrix",value:function(e){this.quaternion.setFromRotationMatrix(e)}},{key:"setRotationFromQuaternion",value:function(e){this.quaternion.copy(e)}},{key:"rotateOnAxis",value:function(e,t){return Mn.setFromAxisAngle(e,t),this.quaternion.multiply(Mn),this}},{key:"rotateOnWorldAxis",value:function(e,t){return Mn.setFromAxisAngle(e,t),this.quaternion.premultiply(Mn),this}},{key:"rotateX",value:function(e){return this.rotateOnAxis(Cn,e)}},{key:"rotateY",value:function(e){return this.rotateOnAxis(Ln,e)}},{key:"rotateZ",value:function(e){return this.rotateOnAxis(Pn,e)}},{key:"translateOnAxis",value:function(e,t){return wn.copy(e).applyQuaternion(this.quaternion),this.position.add(wn.multiplyScalar(t)),this}},{key:"translateX",value:function(e){return this.translateOnAxis(Cn,e)}},{key:"translateY",value:function(e){return this.translateOnAxis(Ln,e)}},{key:"translateZ",value:function(e){return this.translateOnAxis(Pn,e)}},{key:"localToWorld",value:function(e){return e.applyMatrix4(this.matrixWorld)}},{key:"worldToLocal",value:function(e){return e.applyMatrix4(Sn.copy(this.matrixWorld).invert())}},{key:"lookAt",value:function(e,t,n){e.isVector3?Tn.copy(e):Tn.set(e,t,n);var i=this.parent;this.updateWorldMatrix(!0,!1),An.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Sn.lookAt(An,Tn,this.up):Sn.lookAt(Tn,An,this.up),this.quaternion.setFromRotationMatrix(Sn),i&&(Sn.extractRotation(i.matrixWorld),Mn.setFromRotationMatrix(Sn),this.quaternion.premultiply(Mn.invert()))}},{key:"add",value:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Dn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}},{key:"remove",value:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var n=this.children.indexOf(e);return-1!==n&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(Rn)),this}},{key:"removeFromParent",value:function(){var e=this.parent;return null!==e&&e.remove(this),this}},{key:"clear",value:function(){for(var e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null,t.dispatchEvent(Rn)}return this.children.length=0,this}},{key:"attach",value:function(e){return this.updateWorldMatrix(!0,!1),Sn.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Sn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Sn),this.add(e),e.updateWorldMatrix(!1,!0),this}},{key:"getObjectById",value:function(e){return this.getObjectByProperty("id",e)}},{key:"getObjectByName",value:function(e){return this.getObjectByProperty("name",e)}},{key:"getObjectByProperty",value:function(e,t){if(this[e]===t)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}},{key:"getWorldPosition",value:function(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}},{key:"getWorldQuaternion",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(An,e,En),e}},{key:"getWorldScale",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(An,kn,e),e}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}},{key:"raycast",value:function(){}},{key:"traverse",value:function(e){e(this);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].traverse(e)}},{key:"traverseVisible",value:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}}},{key:"traverseAncestors",value:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}},{key:"updateMatrix",value:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}},{key:"updateMatrixWorld",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,i=t.length;n<i;n++){var r=t[n];!0!==r.matrixWorldAutoUpdate&&!0!==e||r.updateMatrixWorld(e)}}},{key:"updateWorldMatrix",value:function(e,t){var n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t)for(var i=this.children,r=0,a=i.length;r<a;r++){var o=i[r];!0===o.matrixWorldAutoUpdate&&o.updateWorldMatrix(!1,!0)}}},{key:"toJSON",value:function(e){var t=function(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid},n=function(e){var t=[];for(var n in e){var i=e[n];delete i.metadata,t.push(i)}return t},i=void 0===e||"string"==typeof e,r={};i&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(a.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(a.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=t(e.geometries,this.geometry);var o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){var s=o.shapes;if(Array.isArray(s))for(var l=0,u=s.length;l<u;l++){var c=s[l];t(e.shapes,c)}else t(e.shapes,s)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(t(e.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){for(var h=[],d=0,f=this.material.length;d<f;d++)h.push(t(e.materials,this.material[d]));a.material=h}else a.material=t(e.materials,this.material);if(this.children.length>0){a.children=[];for(var p=0;p<this.children.length;p++)a.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){a.animations=[];for(var m=0;m<this.animations.length;m++){var v=this.animations[m];a.animations.push(t(e.animations,v))}}if(i){var g=n(e.geometries),_=n(e.materials),y=n(e.textures),x=n(e.images),b=n(e.shapes),w=n(e.skeletons),M=n(e.animations),S=n(e.nodes);g.length>0&&(r.geometries=g),_.length>0&&(r.materials=_),y.length>0&&(r.textures=y),x.length>0&&(r.images=x),b.length>0&&(r.shapes=b),w.length>0&&(r.skeletons=w),M.length>0&&(r.animations=M),S.length>0&&(r.nodes=S)}return r.object=a,r}},{key:"clone",value:function(e){return(new this.constructor).copy(this,e)}},{key:"copy",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var i=e.children[n];this.add(i.clone())}return this}}]),n}(Xe);In.DefaultUp=new Dt(0,1,0),In.DefaultMatrixAutoUpdate=!0,In.DefaultMatrixWorldAutoUpdate=!0;var On=new Dt,Nn=new Dt,zn=new Dt,Un=new Dt,Fn=new Dt,Bn=new Dt,Vn=new Dt,Hn=new Dt,Gn=new Dt,Wn=new Dt,jn=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Dt,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Dt,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Dt;o(this,e),this.a=t,this.b=n,this.c=i}return l(e,[{key:"set",value:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}},{key:"setFromPointsAndIndices",value:function(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}},{key:"setFromAttributeAndIndices",value:function(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}},{key:"getArea",value:function(){return On.subVectors(this.c,this.b),Nn.subVectors(this.a,this.b),.5*On.cross(Nn).length()}},{key:"getMidpoint",value:function(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}},{key:"getNormal",value:function(t){return e.getNormal(this.a,this.b,this.c,t)}},{key:"getPlane",value:function(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}},{key:"getBarycoord",value:function(t,n){return e.getBarycoord(t,this.a,this.b,this.c,n)}},{key:"getUV",value:function(t,n,i,r,a){return e.getUV(t,this.a,this.b,this.c,n,i,r,a)}},{key:"containsPoint",value:function(t){return e.containsPoint(t,this.a,this.b,this.c)}},{key:"isFrontFacing",value:function(t){return e.isFrontFacing(this.a,this.b,this.c,t)}},{key:"intersectsBox",value:function(e){return e.intersectsTriangle(this)}},{key:"closestPointToPoint",value:function(e,t){var n,i,r=this.a,a=this.b,o=this.c;Fn.subVectors(a,r),Bn.subVectors(o,r),Hn.subVectors(e,r);var s=Fn.dot(Hn),l=Bn.dot(Hn);if(s<=0&&l<=0)return t.copy(r);Gn.subVectors(e,a);var u=Fn.dot(Gn),c=Bn.dot(Gn);if(u>=0&&c<=u)return t.copy(a);var h=s*c-u*l;if(h<=0&&s>=0&&u<=0)return n=s/(s-u),t.copy(r).addScaledVector(Fn,n);Wn.subVectors(e,o);var d=Fn.dot(Wn),f=Bn.dot(Wn);if(f>=0&&d<=f)return t.copy(o);var p=d*l-s*f;if(p<=0&&l>=0&&f<=0)return i=l/(l-f),t.copy(r).addScaledVector(Bn,i);var m=u*f-d*c;if(m<=0&&c-u>=0&&d-f>=0)return Vn.subVectors(o,a),i=(c-u)/(c-u+(d-f)),t.copy(a).addScaledVector(Vn,i);var v=1/(m+p+h);return n=p*v,i=h*v,t.copy(r).addScaledVector(Fn,n).addScaledVector(Bn,i)}},{key:"equals",value:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}],[{key:"getNormal",value:function(e,t,n,i){i.subVectors(n,t),On.subVectors(e,t),i.cross(On);var r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}},{key:"getBarycoord",value:function(e,t,n,i,r){On.subVectors(i,t),Nn.subVectors(n,t),zn.subVectors(e,t);var a=On.dot(On),o=On.dot(Nn),s=On.dot(zn),l=Nn.dot(Nn),u=Nn.dot(zn),c=a*l-o*o;if(0===c)return r.set(-2,-1,-1);var h=1/c,d=(l*s-o*u)*h,f=(a*u-o*s)*h;return r.set(1-d-f,f,d)}},{key:"containsPoint",value:function(e,t,n,i){return this.getBarycoord(e,t,n,i,Un),Un.x>=0&&Un.y>=0&&Un.x+Un.y<=1}},{key:"getUV",value:function(e,t,n,i,r,a,o,s){return this.getBarycoord(e,t,n,i,Un),s.set(0,0),s.addScaledVector(r,Un.x),s.addScaledVector(a,Un.y),s.addScaledVector(o,Un.z),s}},{key:"isFrontFacing",value:function(e,t,n,i){return On.subVectors(n,t),Nn.subVectors(e,t),On.cross(Nn).dot(i)<0}}]),e}(),Xn=0,qn=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;return o(this,n),(e=t.call(this)).isMaterial=!0,Object.defineProperty(u(e),"id",{value:Xn++}),e.uuid=Ze(),e.name="",e.type="Material",e.blending=1,e.side=0,e.vertexColors=!1,e.opacity=1,e.transparent=!1,e.blendSrc=204,e.blendDst=205,e.blendEquation=U,e.blendSrcAlpha=null,e.blendDstAlpha=null,e.blendEquationAlpha=null,e.depthFunc=3,e.depthTest=!0,e.depthWrite=!0,e.stencilWriteMask=255,e.stencilFunc=519,e.stencilRef=0,e.stencilFuncMask=255,e.stencilFail=He,e.stencilZFail=He,e.stencilZPass=He,e.stencilWrite=!1,e.clippingPlanes=null,e.clipIntersection=!1,e.clipShadows=!1,e.shadowSide=null,e.colorWrite=!0,e.precision=null,e.polygonOffset=!1,e.polygonOffsetFactor=0,e.polygonOffsetUnits=0,e.dithering=!1,e.alphaToCoverage=!1,e.premultipliedAlpha=!1,e.visible=!0,e.toneMapped=!0,e.userData={},e.version=0,e._alphaTest=0,e}return l(n,[{key:"alphaTest",get:function(){return this._alphaTest},set:function(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}},{key:"onBuild",value:function(){}},{key:"onBeforeRender",value:function(){}},{key:"onBeforeCompile",value:function(){}},{key:"customProgramCacheKey",value:function(){return this.onBeforeCompile.toString()}},{key:"setValues",value:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n){var i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}}},{key:"toJSON",value:function(e){var t=function(e){var t=[];for(var n in e){var i=e[n];delete i.metadata,t.push(i)}return t},n=void 0===e||"string"==typeof e;n&&(e={textures:{},images:{}});var i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),n){var r=t(e.textures),a=t(e.images);r.length>0&&(i.textures=r),a.length>0&&(i.images=a)}return i}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes,n=null;if(null!==t){var i=t.length;n=new Array(i);for(var r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}}]),n}(Xe),Yn=function(e){"use strict";x(n,e);var t=O(n);function n(e){var i;return o(this,n),(i=t.call(this)).isMeshBasicMaterial=!0,i.type="MeshBasicMaterial",i.color=new bt(16777215),i.map=null,i.lightMap=null,i.lightMapIntensity=1,i.aoMap=null,i.aoMapIntensity=1,i.specularMap=null,i.alphaMap=null,i.envMap=null,i.combine=0,i.reflectivity=1,i.refractionRatio=.98,i.wireframe=!1,i.wireframeLinewidth=1,i.wireframeLinecap="round",i.wireframeLinejoin="round",i.fog=!0,i.setValues(e),i}return l(n,[{key:"copy",value:function(e){return g(p(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}]),n}(qn),$n=new Dt,Zn=new rt,Jn=function(){"use strict";function e(t,n,i){if(o(this,e),Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=n,this.count=void 0!==t?t.length/n:0,this.normalized=!0===i,this.usage=Ge,this.updateRange={offset:0,count:-1},this.version=0}return l(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}},{key:"copyAt",value:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}},{key:"copyArray",value:function(e){return this.array.set(e),this}},{key:"applyMatrix3",value:function(e){if(2===this.itemSize)for(var t=0,n=this.count;t<n;t++)Zn.fromBufferAttribute(this,t),Zn.applyMatrix3(e),this.setXY(t,Zn.x,Zn.y);else if(3===this.itemSize)for(var i=0,r=this.count;i<r;i++)$n.fromBufferAttribute(this,i),$n.applyMatrix3(e),this.setXYZ(i,$n.x,$n.y,$n.z);return this}},{key:"applyMatrix4",value:function(e){for(var t=0,n=this.count;t<n;t++)$n.fromBufferAttribute(this,t),$n.applyMatrix4(e),this.setXYZ(t,$n.x,$n.y,$n.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var t=0,n=this.count;t<n;t++)$n.fromBufferAttribute(this,t),$n.applyNormalMatrix(e),this.setXYZ(t,$n.x,$n.y,$n.z);return this}},{key:"transformDirection",value:function(e){for(var t=0,n=this.count;t<n;t++)$n.fromBufferAttribute(this,t),$n.transformDirection(e),this.setXYZ(t,$n.x,$n.y,$n.z);return this}},{key:"set",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,t),this}},{key:"getX",value:function(e){var t=this.array[e*this.itemSize];return this.normalized&&(t=nt(t,this.array)),t}},{key:"setX",value:function(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize]=t,this}},{key:"getY",value:function(e){var t=this.array[e*this.itemSize+1];return this.normalized&&(t=nt(t,this.array)),t}},{key:"setY",value:function(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+1]=t,this}},{key:"getZ",value:function(e){var t=this.array[e*this.itemSize+2];return this.normalized&&(t=nt(t,this.array)),t}},{key:"setZ",value:function(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+2]=t,this}},{key:"getW",value:function(e){var t=this.array[e*this.itemSize+3];return this.normalized&&(t=nt(t,this.array)),t}},{key:"setW",value:function(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+3]=t,this}},{key:"setXY",value:function(e,t,n){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),n=it(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}},{key:"setXYZ",value:function(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),n=it(n,this.array),i=it(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}},{key:"setXYZW",value:function(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),n=it(n,this.array),i=it(i,this.array),r=it(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"clone",value:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},{key:"toJSON",value:function(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Ge&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}},{key:"copyColorsArray",value:function(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}},{key:"copyVector2sArray",value:function(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}},{key:"copyVector3sArray",value:function(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}},{key:"copyVector4sArray",value:function(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}]),e}(),Kn=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r){return o(this,n),t.call(this,new Uint16Array(e),i,r)}return n}(Jn),Qn=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r){return o(this,n),t.call(this,new Uint32Array(e),i,r)}return n}(Jn),ei=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r){return o(this,n),t.call(this,new Float32Array(e),i,r)}return n}(Jn),ti=0,ni=new un,ii=new In,ri=new Dt,ai=new Ot,oi=new Ot,si=new Dt,li=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;return o(this,n),(e=t.call(this)).isBufferGeometry=!0,Object.defineProperty(u(e),"id",{value:ti++}),e.uuid=Ze(),e.name="",e.type="BufferGeometry",e.index=null,e.attributes={},e.morphAttributes={},e.morphTargetsRelative=!1,e.groups=[],e.boundingBox=null,e.boundingSphere=null,e.drawRange={start:0,count:1/0},e.userData={},e}return l(n,[{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(e){return Array.isArray(e)?this.index=new(st(e)?Qn:Kn)(e,1):this.index=e,this}},{key:"getAttribute",value:function(e){return this.attributes[e]}},{key:"setAttribute",value:function(e,t){return this.attributes[e]=t,this}},{key:"deleteAttribute",value:function(e){return delete this.attributes[e],this}},{key:"hasAttribute",value:function(e){return void 0!==this.attributes[e]}},{key:"addGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.groups.push({start:e,count:t,materialIndex:n})}},{key:"clearGroups",value:function(){this.groups=[]}},{key:"setDrawRange",value:function(e,t){this.drawRange.start=e,this.drawRange.count=t}},{key:"applyMatrix4",value:function(e){var t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){var i=(new at).getNormalMatrix(e);n.applyNormalMatrix(i),n.needsUpdate=!0}var r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}},{key:"applyQuaternion",value:function(e){return ni.makeRotationFromQuaternion(e),this.applyMatrix4(ni),this}},{key:"rotateX",value:function(e){return ni.makeRotationX(e),this.applyMatrix4(ni),this}},{key:"rotateY",value:function(e){return ni.makeRotationY(e),this.applyMatrix4(ni),this}},{key:"rotateZ",value:function(e){return ni.makeRotationZ(e),this.applyMatrix4(ni),this}},{key:"translate",value:function(e,t,n){return ni.makeTranslation(e,t,n),this.applyMatrix4(ni),this}},{key:"scale",value:function(e,t,n){return ni.makeScale(e,t,n),this.applyMatrix4(ni),this}},{key:"lookAt",value:function(e){return ii.lookAt(e),ii.updateMatrix(),this.applyMatrix4(ii.matrix),this}},{key:"center",value:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ri).negate(),this.translate(ri.x,ri.y,ri.z),this}},{key:"setFromPoints",value:function(e){for(var t=[],n=0,i=e.length;n<i;n++){var r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ei(t,3)),this}},{key:"computeBoundingBox",value:function(){null===this.boundingBox&&(this.boundingBox=new Ot);var e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Dt(-1/0,-1/0,-1/0),new Dt(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(var n=0,i=t.length;n<i;n++){var r=t[n];ai.setFromBufferAttribute(r),this.morphTargetsRelative?(si.addVectors(this.boundingBox.min,ai.min),this.boundingBox.expandByPoint(si),si.addVectors(this.boundingBox.max,ai.max),this.boundingBox.expandByPoint(si)):(this.boundingBox.expandByPoint(ai.min),this.boundingBox.expandByPoint(ai.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},{key:"computeBoundingSphere",value:function(){null===this.boundingSphere&&(this.boundingSphere=new Qt);var e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Dt,1/0);if(e){var n=this.boundingSphere.center;if(ai.setFromBufferAttribute(e),t)for(var i=0,r=t.length;i<r;i++){var a=t[i];oi.setFromBufferAttribute(a),this.morphTargetsRelative?(si.addVectors(ai.min,oi.min),ai.expandByPoint(si),si.addVectors(ai.max,oi.max),ai.expandByPoint(si)):(ai.expandByPoint(oi.min),ai.expandByPoint(oi.max))}ai.getCenter(n);for(var o=0,s=0,l=e.count;s<l;s++)si.fromBufferAttribute(e,s),o=Math.max(o,n.distanceToSquared(si));if(t)for(var u=0,c=t.length;u<c;u++)for(var h=t[u],d=this.morphTargetsRelative,f=0,p=h.count;f<p;f++)si.fromBufferAttribute(h,f),d&&(ri.fromBufferAttribute(e,f),si.add(ri)),o=Math.max(o,n.distanceToSquared(si));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}},{key:"computeTangents",value:function(){var e=function(e,t,n){f.fromArray(a,3*e),p.fromArray(a,3*t),m.fromArray(a,3*n),v.fromArray(s,2*e),g.fromArray(s,2*t),_.fromArray(s,2*n),p.sub(f),m.sub(f),g.sub(v),_.sub(v);var i=1/(g.x*_.y-_.x*g.y);isFinite(i)&&(y.copy(p).multiplyScalar(_.y).addScaledVector(m,-g.y).multiplyScalar(i),x.copy(m).multiplyScalar(g.x).addScaledVector(p,-_.x).multiplyScalar(i),c[e].add(y),c[t].add(y),c[n].add(y),h[e].add(x),h[t].add(x),h[n].add(x))},t=function(e){L.fromArray(o,3*e),P.copy(L);var t=c[e];k.copy(t),k.sub(L.multiplyScalar(L.dot(t))).normalize(),C.crossVectors(P,t);var n=C.dot(h[e])<0?-1:1;u[4*e]=k.x,u[4*e+1]=k.y,u[4*e+2]=k.z,u[4*e+3]=n},n=this.index,i=this.attributes;if(null!==n&&void 0!==i.position&&void 0!==i.normal&&void 0!==i.uv){var r=n.array,a=i.position.array,o=i.normal.array,s=i.uv.array,l=a.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Jn(new Float32Array(4*l),4));for(var u=this.getAttribute("tangent").array,c=[],h=[],d=0;d<l;d++)c[d]=new Dt,h[d]=new Dt;var f=new Dt,p=new Dt,m=new Dt,v=new rt,g=new rt,_=new rt,y=new Dt,x=new Dt,b=this.groups;0===b.length&&(b=[{start:0,count:r.length}]);for(var w=0,M=b.length;w<M;++w)for(var S=b[w],T=S.start,A=T,E=T+S.count;A<E;A+=3)e(r[A+0],r[A+1],r[A+2]);for(var k=new Dt,C=new Dt,L=new Dt,P=new Dt,D=0,R=b.length;D<R;++D)for(var I=b[D],O=I.start,N=O,z=O+I.count;N<z;N+=3)t(r[N+0]),t(r[N+1]),t(r[N+2])}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)")}},{key:"computeVertexNormals",value:function(){var e=this.index,t=this.getAttribute("position");if(void 0!==t){var n=this.getAttribute("normal");if(void 0===n)n=new Jn(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(var i=0,r=n.count;i<r;i++)n.setXYZ(i,0,0,0);var a=new Dt,o=new Dt,s=new Dt,l=new Dt,u=new Dt,c=new Dt,h=new Dt,d=new Dt;if(e)for(var f=0,p=e.count;f<p;f+=3){var m=e.getX(f+0),v=e.getX(f+1),g=e.getX(f+2);a.fromBufferAttribute(t,m),o.fromBufferAttribute(t,v),s.fromBufferAttribute(t,g),h.subVectors(s,o),d.subVectors(a,o),h.cross(d),l.fromBufferAttribute(n,m),u.fromBufferAttribute(n,v),c.fromBufferAttribute(n,g),l.add(h),u.add(h),c.add(h),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(v,u.x,u.y,u.z),n.setXYZ(g,c.x,c.y,c.z)}else for(var _=0,y=t.count;_<y;_+=3)a.fromBufferAttribute(t,_+0),o.fromBufferAttribute(t,_+1),s.fromBufferAttribute(t,_+2),h.subVectors(s,o),d.subVectors(a,o),h.cross(d),n.setXYZ(_+0,h.x,h.y,h.z),n.setXYZ(_+1,h.x,h.y,h.z),n.setXYZ(_+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}},{key:"merge",value:function(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}},{key:"normalizeNormals",value:function(){for(var e=this.attributes.normal,t=0,n=e.count;t<n;t++)si.fromBufferAttribute(e,t),si.normalize(),e.setXYZ(t,si.x,si.y,si.z)}},{key:"toNonIndexed",value:function(){var e=function(e,t){for(var n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i),o=0,s=0,l=0,u=t.length;l<u;l++){o=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*i;for(var c=0;c<i;c++)a[s++]=n[o++]}return new Jn(a,i,r)};if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var t=new n,i=this.index.array,r=this.attributes;for(var a in r){var o=e(r[a],i);t.setAttribute(a,o)}var s=this.morphAttributes;for(var l in s){for(var u=[],c=s[l],h=0,d=c.length;h<d;h++){var f=e(c[h],i);u.push(f)}t.morphAttributes[l]=u}t.morphTargetsRelative=this.morphTargetsRelative;for(var p=this.groups,m=0,v=p.length;m<v;m++){var g=p[m];t.addGroup(g.start,g.count,g.materialIndex)}return t}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var i=this.index;null!==i&&(e.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});var r=this.attributes;for(var a in r){var o=r[a];e.data.attributes[a]=o.toJSON(e.data)}var s={},l=!1;for(var u in this.morphAttributes){for(var c=this.morphAttributes[u],h=[],d=0,f=c.length;d<f;d++){var p=c[d];h.push(p.toJSON(e.data))}h.length>0&&(s[u]=h,l=!0)}l&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);var m=this.groups;m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m)));var v=this.boundingSphere;return null!==v&&(e.data.boundingSphere={center:v.center.toArray(),radius:v.radius}),e}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var t={};this.name=e.name;var n=e.index;null!==n&&this.setIndex(n.clone(t));var i=e.attributes;for(var r in i){var a=i[r];this.setAttribute(r,a.clone(t))}var o=e.morphAttributes;for(var s in o){for(var l=[],u=o[s],c=0,h=u.length;c<h;c++)l.push(u[c].clone(t));this.morphAttributes[s]=l}this.morphTargetsRelative=e.morphTargetsRelative;for(var d=e.groups,f=0,p=d.length;f<p;f++){var m=d[f];this.addGroup(m.start,m.count,m.materialIndex)}var v=e.boundingBox;null!==v&&(this.boundingBox=v.clone());var g=e.boundingSphere;return null!==g&&(this.boundingSphere=g.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(Xe),ui=new un,ci=new ln,hi=new Qt,di=new Dt,fi=new Dt,pi=new Dt,mi=new Dt,vi=new Dt,gi=new Dt,_i=new Dt,yi=new Dt,xi=new Dt,bi=new rt,wi=new rt,Mi=new rt,Si=new Dt,Ti=new Dt,Ai=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new li,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Yn;return o(this,n),(e=t.call(this)).isMesh=!0,e.type="Mesh",e.geometry=i,e.material=r,e.updateMorphTargets(),e}return l(n,[{key:"copy",value:function(e,t){return g(p(n.prototype),"copy",this).call(this,e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){var n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var i=0,r=n.length;i<r;i++){var a=n[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=i}}}}},{key:"raycast",value:function(e,t){var n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i&&(null===n.boundingSphere&&n.computeBoundingSphere(),hi.copy(n.boundingSphere),hi.applyMatrix4(r),!1!==e.ray.intersectsSphere(hi)&&(ui.copy(r).invert(),ci.copy(e.ray).applyMatrix4(ui),null===n.boundingBox||!1!==ci.intersectsBox(n.boundingBox)))){var a,o=n.index,s=n.attributes.position,l=n.morphAttributes.position,u=n.morphTargetsRelative,c=n.attributes.uv,h=n.attributes.uv2,d=n.groups,f=n.drawRange;if(null!==o)if(Array.isArray(i))for(var p=0,m=d.length;p<m;p++)for(var v=d[p],g=i[v.materialIndex],_=Math.max(v.start,f.start),y=Math.min(o.count,Math.min(v.start+v.count,f.start+f.count));_<y;_+=3){var x=o.getX(_),b=o.getX(_+1),w=o.getX(_+2);(a=Ei(this,g,e,ci,s,l,u,c,h,x,b,w))&&(a.faceIndex=Math.floor(_/3),a.face.materialIndex=v.materialIndex,t.push(a))}else for(var M=Math.max(0,f.start),S=Math.min(o.count,f.start+f.count);M<S;M+=3){var T=o.getX(M),A=o.getX(M+1),E=o.getX(M+2);(a=Ei(this,i,e,ci,s,l,u,c,h,T,A,E))&&(a.faceIndex=Math.floor(M/3),t.push(a))}else if(void 0!==s)if(Array.isArray(i))for(var k=0,C=d.length;k<C;k++)for(var L=d[k],P=i[L.materialIndex],D=Math.max(L.start,f.start),R=Math.min(s.count,Math.min(L.start+L.count,f.start+f.count));D<R;D+=3){(a=Ei(this,P,e,ci,s,l,u,c,h,D,D+1,D+2))&&(a.faceIndex=Math.floor(D/3),a.face.materialIndex=L.materialIndex,t.push(a))}else for(var I=Math.max(0,f.start),O=Math.min(s.count,f.start+f.count);I<O;I+=3){(a=Ei(this,i,e,ci,s,l,u,c,h,I,I+1,I+2))&&(a.faceIndex=Math.floor(I/3),t.push(a))}}}}]),n}(In);function Ei(e,t,n,i,r,a,o,s,l,u,c,h){di.fromBufferAttribute(r,u),fi.fromBufferAttribute(r,c),pi.fromBufferAttribute(r,h);var d=e.morphTargetInfluences;if(a&&d){_i.set(0,0,0),yi.set(0,0,0),xi.set(0,0,0);for(var f=0,p=a.length;f<p;f++){var m=d[f],v=a[f];0!==m&&(mi.fromBufferAttribute(v,u),vi.fromBufferAttribute(v,c),gi.fromBufferAttribute(v,h),o?(_i.addScaledVector(mi,m),yi.addScaledVector(vi,m),xi.addScaledVector(gi,m)):(_i.addScaledVector(mi.sub(di),m),yi.addScaledVector(vi.sub(fi),m),xi.addScaledVector(gi.sub(pi),m)))}di.add(_i),fi.add(yi),pi.add(xi)}e.isSkinnedMesh&&(e.boneTransform(u,di),e.boneTransform(c,fi),e.boneTransform(h,pi));var g=function(e,t,n,i,r,a,o,s){if(null===(1===t.side?i.intersectTriangle(o,a,r,!0,s):i.intersectTriangle(r,a,o,2!==t.side,s)))return null;Ti.copy(s),Ti.applyMatrix4(e.matrixWorld);var l=n.ray.origin.distanceTo(Ti);return l<n.near||l>n.far?null:{distance:l,point:Ti.clone(),object:e}}(e,t,n,i,di,fi,pi,Si);if(g){s&&(bi.fromBufferAttribute(s,u),wi.fromBufferAttribute(s,c),Mi.fromBufferAttribute(s,h),g.uv=jn.getUV(Si,di,fi,pi,bi,wi,Mi,new rt)),l&&(bi.fromBufferAttribute(l,u),wi.fromBufferAttribute(l,c),Mi.fromBufferAttribute(l,h),g.uv2=jn.getUV(Si,di,fi,pi,bi,wi,Mi,new rt));var _={a:u,b:c,c:h,normal:new Dt,materialIndex:0};jn.getNormal(di,fi,pi,_.normal),g.face=_}return g}var ki=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;o(this,n);var h=function(e,t,n,i,r,a,o,s,l,u,c){for(var h=a/l,y=o/u,x=a/2,b=o/2,w=s/2,M=l+1,S=u+1,T=0,A=0,E=new Dt,k=0;k<S;k++)for(var C=k*y-b,L=0;L<M;L++){var P=L*h-x;E[e]=P*i,E[t]=C*r,E[n]=w,p.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[n]=s>0?1:-1,m.push(E.x,E.y,E.z),v.push(L/l),v.push(1-k/u),T+=1}for(var D=0;D<u;D++)for(var R=0;R<l;R++){var I=g+R+M*D,O=g+R+M*(D+1),N=g+(R+1)+M*(D+1),z=g+(R+1)+M*D;f.push(I,O,z),f.push(O,N,z),A+=6}d.addGroup(_,A,c),_+=A,g+=T};(e=t.call(this)).type="BoxGeometry",e.parameters={width:i,height:r,depth:a,widthSegments:s,heightSegments:l,depthSegments:c};var d=u(e);s=Math.floor(s),l=Math.floor(l),c=Math.floor(c);var f=[],p=[],m=[],v=[],g=0,_=0;return h("z","y","x",-1,-1,a,r,i,c,l,0),h("z","y","x",1,-1,a,r,-i,c,l,1),h("x","z","y",1,1,i,a,r,s,c,2),h("x","z","y",1,-1,i,a,-r,s,c,3),h("x","y","z",1,-1,i,r,a,s,l,4),h("x","y","z",-1,-1,i,r,-a,s,l,5),e.setIndex(f),e.setAttribute("position",new ei(p,3)),e.setAttribute("normal",new ei(m,3)),e.setAttribute("uv",new ei(v,2)),e}return l(n,null,[{key:"fromJSON",value:function(e){return new n(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}]),n}(li);function Ci(e){var t={};for(var n in e)for(var i in t[n]={},e[n]){var r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}return t}function Li(e){for(var t={},n=0;n<e.length;n++){var i=Ci(e[n]);for(var r in i)t[r]=i[r]}return t}function Pi(e){return null===e.getRenderTarget()&&e.outputEncoding===Fe?Be:Ve}var Di={clone:Ci,merge:Li},Ri=function(e){"use strict";x(n,e);var t=O(n);function n(e){var i;return o(this,n),(i=t.call(this)).isShaderMaterial=!0,i.type="ShaderMaterial",i.defines={},i.uniforms={},i.uniformsGroups=[],i.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",i.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",i.linewidth=1,i.wireframe=!1,i.wireframeLinewidth=1,i.fog=!1,i.lights=!1,i.clipping=!1,i.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},i.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},i.index0AttributeName=void 0,i.uniformsNeedUpdate=!1,i.glslVersion=null,void 0!==e&&i.setValues(e),i}return l(n,[{key:"copy",value:function(e){return g(p(n.prototype),"copy",this).call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ci(e.uniforms),this.uniformsGroups=function(e){for(var t=[],n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}},{key:"toJSON",value:function(e){var t=g(p(n.prototype),"toJSON",this).call(this,e);for(var i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){var r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var a={};for(var o in this.extensions)!0===this.extensions[o]&&(a[o]=!0);return Object.keys(a).length>0&&(t.extensions=a),t}}]),n}(qn),Ii=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;return o(this,n),(e=t.call(this)).isCamera=!0,e.type="Camera",e.matrixWorldInverse=new un,e.projectionMatrix=new un,e.projectionMatrixInverse=new un,e}return l(n,[{key:"copy",value:function(e,t){return g(p(n.prototype),"copy",this).call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}},{key:"updateMatrixWorld",value:function(e){g(p(n.prototype),"updateMatrixWorld",this).call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"updateWorldMatrix",value:function(e,t){g(p(n.prototype),"updateWorldMatrix",this).call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),n}(In),Oi=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2e3;return o(this,n),(e=t.call(this)).isPerspectiveCamera=!0,e.type="PerspectiveCamera",e.fov=i,e.zoom=1,e.near=a,e.far=s,e.focus=10,e.aspect=r,e.view=null,e.filmGauge=35,e.filmOffset=0,e.updateProjectionMatrix(),e}return l(n,[{key:"copy",value:function(e,t){return g(p(n.prototype),"copy",this).call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}},{key:"setFocalLength",value:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*$e*Math.atan(t),this.updateProjectionMatrix()}},{key:"getFocalLength",value:function(){var e=Math.tan(.5*Ye*this.fov);return.5*this.getFilmHeight()/e}},{key:"getEffectiveFOV",value:function(){return 2*$e*Math.atan(Math.tan(.5*Ye*this.fov)/this.zoom)}},{key:"getFilmWidth",value:function(){return this.filmGauge*Math.min(this.aspect,1)}},{key:"getFilmHeight",value:function(){return this.filmGauge/Math.max(this.aspect,1)}},{key:"setViewOffset",value:function(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=this.near,t=e*Math.tan(.5*Ye*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/o,t-=a.offsetY*n/s,i*=a.width/o,n*=a.height/s}var l=this.filmOffset;0!==l&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var t=g(p(n.prototype),"toJSON",this).call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}]),n}(Ii),Ni=-90,zi=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r){var a;o(this,n),(a=t.call(this)).type="CubeCamera",a.renderTarget=r;var s=new Oi(Ni,1,e,i);s.layers=a.layers,s.up.set(0,1,0),s.lookAt(1,0,0),a.add(s);var l=new Oi(Ni,1,e,i);l.layers=a.layers,l.up.set(0,1,0),l.lookAt(-1,0,0),a.add(l);var u=new Oi(Ni,1,e,i);u.layers=a.layers,u.up.set(0,0,-1),u.lookAt(0,1,0),a.add(u);var c=new Oi(Ni,1,e,i);c.layers=a.layers,c.up.set(0,0,1),c.lookAt(0,-1,0),a.add(c);var h=new Oi(Ni,1,e,i);h.layers=a.layers,h.up.set(0,1,0),h.lookAt(0,0,1),a.add(h);var d=new Oi(Ni,1,e,i);return d.layers=a.layers,d.up.set(0,1,0),d.lookAt(0,0,-1),a.add(d),a}return l(n,[{key:"update",value:function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,i=A(this.children,6),r=i[0],a=i[1],o=i[2],s=i[3],l=i[4],u=i[5],c=e.getRenderTarget(),h=e.toneMapping,d=e.xr.enabled;e.toneMapping=0,e.xr.enabled=!1;var f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,a),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=f,e.setRenderTarget(n,5),e.render(t,u),e.setRenderTarget(c),e.toneMapping=h,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}]),n}(In),Ui=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a,s,l,u,c,h,d){var f;return o(this,n),e=void 0!==e?e:[],i=void 0!==i?i:F,(f=t.call(this,e,i,r,a,s,l,u,c,h,d)).isCubeTexture=!0,f.flipY=!1,f}return l(n,[{key:"images",get:function(){return this.image},set:function(e){this.image=e}}]),n}(At),Fi=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};o(this,n),(e=t.call(this,i,i,r)).isWebGLCubeRenderTarget=!0;var a={width:i,height:i,depth:1},s=[a,a,a,a,a,a];return e.texture=new Ui(s,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),e.texture.isRenderTargetTexture=!0,e.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,e.texture.minFilter=void 0!==r.minFilter?r.minFilter:Z,e}return l(n,[{key:"fromEquirectangularTexture",value:function(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new ki(5,5,5),o=new Ri({name:"CubemapFromEquirect",uniforms:Ci(n),vertexShader:i,fragmentShader:r,side:1,blending:0});o.uniforms.tEquirect.value=t;var s=new Ai(a,o),l=t.minFilter;return t.minFilter===J&&(t.minFilter=Z),new zi(1,10,this).update(e,s),t.minFilter=l,s.geometry.dispose(),s.material.dispose(),this}},{key:"clear",value:function(e,t,n,i){for(var r=e.getRenderTarget(),a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}]),n}(kt),Bi=new Dt,Vi=new Dt,Hi=new at,Gi=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Dt(1,0,0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;o(this,e),this.isPlane=!0,this.normal=t,this.constant=n}return l(e,[{key:"set",value:function(e,t){return this.normal.copy(e),this.constant=t,this}},{key:"setComponents",value:function(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}},{key:"setFromNormalAndCoplanarPoint",value:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(e,t,n){var i=Bi.subVectors(n,t).cross(Vi.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}},{key:"copy",value:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this}},{key:"normalize",value:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}},{key:"negate",value:function(){return this.constant*=-1,this.normal.negate(),this}},{key:"distanceToPoint",value:function(e){return this.normal.dot(e)+this.constant}},{key:"distanceToSphere",value:function(e){return this.distanceToPoint(e.center)-e.radius}},{key:"projectPoint",value:function(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}},{key:"intersectLine",value:function(e,t){var n=e.delta(Bi),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;var r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}},{key:"intersectsLine",value:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}},{key:"intersectsBox",value:function(e){return e.intersectsPlane(this)}},{key:"intersectsSphere",value:function(e){return e.intersectsPlane(this)}},{key:"coplanarPoint",value:function(e){return e.copy(this.normal).multiplyScalar(-this.constant)}},{key:"applyMatrix4",value:function(e,t){var n=t||Hi.getNormalMatrix(e),i=this.coplanarPoint(Bi).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}},{key:"translate",value:function(e){return this.constant-=e.dot(this.normal),this}},{key:"equals",value:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Wi=new Qt,ji=new Dt,Xi=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Gi,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Gi,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Gi,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Gi,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Gi,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new Gi;o(this,e),this.planes=[t,n,i,r,a,s]}return l(e,[{key:"set",value:function(e,t,n,i,r,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}},{key:"copy",value:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this}},{key:"setFromProjectionMatrix",value:function(e){var t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],o=n[3],s=n[4],l=n[5],u=n[6],c=n[7],h=n[8],d=n[9],f=n[10],p=n[11],m=n[12],v=n[13],g=n[14],_=n[15];return t[0].setComponents(o-i,c-s,p-h,_-m).normalize(),t[1].setComponents(o+i,c+s,p+h,_+m).normalize(),t[2].setComponents(o+r,c+l,p+d,_+v).normalize(),t[3].setComponents(o-r,c-l,p-d,_-v).normalize(),t[4].setComponents(o-a,c-u,p-f,_-g).normalize(),t[5].setComponents(o+a,c+u,p+f,_+g).normalize(),this}},{key:"intersectsObject",value:function(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Wi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Wi)}},{key:"intersectsSprite",value:function(e){return Wi.center.set(0,0,0),Wi.radius=.7071067811865476,Wi.applyMatrix4(e.matrixWorld),this.intersectsSphere(Wi)}},{key:"intersectsSphere",value:function(e){for(var t=this.planes,n=e.center,i=-e.radius,r=0;r<6;r++){if(t[r].distanceToPoint(n)<i)return!1}return!0}},{key:"intersectsBox",value:function(e){for(var t=this.planes,n=0;n<6;n++){var i=t[n];if(ji.x=i.normal.x>0?e.max.x:e.min.x,ji.y=i.normal.y>0?e.max.y:e.min.y,ji.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ji)<0)return!1}return!0}},{key:"containsPoint",value:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();function qi(){var e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Yi(e,t){var n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);var n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){var a=i.get(t);(!a||a.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version})}else{t.isInterleavedBufferAttribute&&(t=t.data);var o=i.get(t);void 0===o?i.set(t,function(t,i){var r,a=t.array,o=t.usage,s=e.createBuffer();if(e.bindBuffer(i,s),e.bufferData(i,a,o),t.onUploadCallback(),a instanceof Float32Array)r=5126;else if(a instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");r=5131}else r=5123;else if(a instanceof Int16Array)r=5122;else if(a instanceof Uint32Array)r=5125;else if(a instanceof Int32Array)r=5124;else if(a instanceof Int8Array)r=5120;else if(a instanceof Uint8Array)r=5121;else{if(!(a instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+a);r=5121}return{buffer:s,type:r,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}(t,r)):o.version<t.version&&(!function(t,i,r){var a=i.array,o=i.updateRange;e.bindBuffer(r,t),-1===o.count?e.bufferSubData(r,0,a):(n?e.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1),i.onUploadCallback()}(o.buffer,t,r),o.version=t.version)}}}}var $i=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;o(this,n),(e=t.call(this)).type="PlaneGeometry",e.parameters={width:i,height:r,widthSegments:a,heightSegments:s};for(var l=i/2,u=r/2,c=Math.floor(a),h=Math.floor(s),d=c+1,f=h+1,p=i/c,m=r/h,v=[],g=[],_=[],y=[],x=0;x<f;x++)for(var b=x*m-u,w=0;w<d;w++){var M=w*p-l;g.push(M,-b,0),_.push(0,0,1),y.push(w/c),y.push(1-x/h)}for(var S=0;S<h;S++)for(var T=0;T<c;T++){var A=T+d*S,E=T+d*(S+1),k=T+1+d*(S+1),C=T+1+d*S;v.push(A,E,C),v.push(E,k,C)}return e.setIndex(v),e.setAttribute("position",new ei(g,3)),e.setAttribute("normal",new ei(_,3)),e.setAttribute("uv",new ei(y,2)),e}return l(n,null,[{key:"fromJSON",value:function(e){return new n(e.width,e.height,e.widthSegments,e.heightSegments)}}]),n}(li),Zi={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Ji={common:{diffuse:{value:new bt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new at},uv2Transform:{value:new at},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new rt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new bt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new bt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new at}},sprite:{diffuse:{value:new bt(16777215)},opacity:{value:1},center:{value:new rt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new at}}},Ki={basic:{uniforms:Li([Ji.common,Ji.specularmap,Ji.envmap,Ji.aomap,Ji.lightmap,Ji.fog]),vertexShader:Zi.meshbasic_vert,fragmentShader:Zi.meshbasic_frag},lambert:{uniforms:Li([Ji.common,Ji.specularmap,Ji.envmap,Ji.aomap,Ji.lightmap,Ji.emissivemap,Ji.bumpmap,Ji.normalmap,Ji.displacementmap,Ji.fog,Ji.lights,{emissive:{value:new bt(0)}}]),vertexShader:Zi.meshlambert_vert,fragmentShader:Zi.meshlambert_frag},phong:{uniforms:Li([Ji.common,Ji.specularmap,Ji.envmap,Ji.aomap,Ji.lightmap,Ji.emissivemap,Ji.bumpmap,Ji.normalmap,Ji.displacementmap,Ji.fog,Ji.lights,{emissive:{value:new bt(0)},specular:{value:new bt(1118481)},shininess:{value:30}}]),vertexShader:Zi.meshphong_vert,fragmentShader:Zi.meshphong_frag},standard:{uniforms:Li([Ji.common,Ji.envmap,Ji.aomap,Ji.lightmap,Ji.emissivemap,Ji.bumpmap,Ji.normalmap,Ji.displacementmap,Ji.roughnessmap,Ji.metalnessmap,Ji.fog,Ji.lights,{emissive:{value:new bt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Zi.meshphysical_vert,fragmentShader:Zi.meshphysical_frag},toon:{uniforms:Li([Ji.common,Ji.aomap,Ji.lightmap,Ji.emissivemap,Ji.bumpmap,Ji.normalmap,Ji.displacementmap,Ji.gradientmap,Ji.fog,Ji.lights,{emissive:{value:new bt(0)}}]),vertexShader:Zi.meshtoon_vert,fragmentShader:Zi.meshtoon_frag},matcap:{uniforms:Li([Ji.common,Ji.bumpmap,Ji.normalmap,Ji.displacementmap,Ji.fog,{matcap:{value:null}}]),vertexShader:Zi.meshmatcap_vert,fragmentShader:Zi.meshmatcap_frag},points:{uniforms:Li([Ji.points,Ji.fog]),vertexShader:Zi.points_vert,fragmentShader:Zi.points_frag},dashed:{uniforms:Li([Ji.common,Ji.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Zi.linedashed_vert,fragmentShader:Zi.linedashed_frag},depth:{uniforms:Li([Ji.common,Ji.displacementmap]),vertexShader:Zi.depth_vert,fragmentShader:Zi.depth_frag},normal:{uniforms:Li([Ji.common,Ji.bumpmap,Ji.normalmap,Ji.displacementmap,{opacity:{value:1}}]),vertexShader:Zi.meshnormal_vert,fragmentShader:Zi.meshnormal_frag},sprite:{uniforms:Li([Ji.sprite,Ji.fog]),vertexShader:Zi.sprite_vert,fragmentShader:Zi.sprite_frag},background:{uniforms:{uvTransform:{value:new at},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Zi.background_vert,fragmentShader:Zi.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Zi.backgroundCube_vert,fragmentShader:Zi.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Zi.cube_vert,fragmentShader:Zi.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Zi.equirect_vert,fragmentShader:Zi.equirect_frag},distanceRGBA:{uniforms:Li([Ji.common,Ji.displacementmap,{referencePosition:{value:new Dt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Zi.distanceRGBA_vert,fragmentShader:Zi.distanceRGBA_frag},shadow:{uniforms:Li([Ji.lights,Ji.fog,{color:{value:new bt(0)},opacity:{value:1}}]),vertexShader:Zi.shadow_vert,fragmentShader:Zi.shadow_frag}};Ki.physical={uniforms:Li([Ki.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new rt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new bt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new rt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new bt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new bt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Zi.meshphysical_vert,fragmentShader:Zi.meshphysical_frag};var Qi={r:0,b:0,g:0};function er(e,t,n,i,r,a,o){var s,l,u=function(t,n){t.getRGB(Qi,Pi(e)),i.buffers.color.setClear(Qi.r,Qi.g,Qi.b,n,o)},c=new bt(0),h=!0===a?0:1,d=null,f=0,p=null;return{getClearColor:function(){return c},setClearColor:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;c.set(e),u(c,h=t)},getClearAlpha:function(){return h},setClearAlpha:function(e){u(c,h=e)},render:function(i,a){var o=!1,m=!0===a.isScene?a.background:null;m&&m.isTexture&&(m=(a.backgroundBlurriness>0?n:t).get(m));var v=e.xr,g=v.getSession&&v.getSession();g&&"additive"===g.environmentBlendMode&&(m=null),null===m?u(c,h):m&&m.isColor&&(u(m,1),o=!0),(e.autoClear||o)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.mapping===G)?(void 0===l&&((l=new Ai(new ki(1,1,1),new Ri({name:"BackgroundCubeMaterial",uniforms:Ci(Ki.backgroundCube.uniforms),vertexShader:Ki.backgroundCube.vertexShader,fragmentShader:Ki.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1,l.material.uniforms.backgroundBlurriness.value=a.backgroundBlurriness,l.material.uniforms.backgroundIntensity.value=a.backgroundIntensity,d===m&&f===m.version&&p===e.toneMapping||(l.material.needsUpdate=!0,d=m,f=m.version,p=e.toneMapping),l.layers.enableAll(),i.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(void 0===s&&((s=new Ai(new $i(2,2),new Ri({name:"BackgroundMaterial",uniforms:Ci(Ki.background.uniforms),vertexShader:Ki.background.vertexShader,fragmentShader:Ki.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(s)),s.material.uniforms.t2D.value=m,s.material.uniforms.backgroundIntensity.value=a.backgroundIntensity,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),d===m&&f===m.version&&p===e.toneMapping||(s.material.needsUpdate=!0,d=m,f=m.version,p=e.toneMapping),s.layers.enableAll(),i.unshift(s,s.geometry,s.material,0,0,null))}}}function tr(e,t,n,i){var r=function(t){return i.isWebGL2?e.bindVertexArray(t):y.bindVertexArrayOES(t)},a=function(t){return i.isWebGL2?e.deleteVertexArray(t):y.deleteVertexArrayOES(t)},o=function(t,n,r){var a=!0===r.wireframe,o=b[t.id];void 0===o&&(o={},b[t.id]=o);var l=o[n.id];void 0===l&&(l={},o[n.id]=l);var u=l[a];return void 0===u&&(u=s(i.isWebGL2?e.createVertexArray():y.createVertexArrayOES()),l[a]=u),u},s=function(e){for(var t=[],n=[],i=[],r=0;r<_;r++)t[r]=0,n[r]=0,i[r]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}},l=function(e,t,n,i){var r=M.attributes,a=t.attributes,o=0,s=n.getAttributes();for(var l in s){if(s[l].location>=0){var u=r[l],c=a[l];if(void 0===c&&("instanceMatrix"===l&&e.instanceMatrix&&(c=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(c=e.instanceColor)),void 0===u)return!0;if(u.attribute!==c)return!0;if(c&&u.data!==c.data)return!0;o++}}return M.attributesNum!==o||M.index!==i},u=function(e,t,n,i){var r={},a=t.attributes,o=0,s=n.getAttributes();for(var l in s){if(s[l].location>=0){var u=a[l];void 0===u&&("instanceMatrix"===l&&e.instanceMatrix&&(u=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(u=e.instanceColor));var c={};c.attribute=u,u&&u.data&&(c.data=u.data),r[l]=c,o++}}M.attributes=r,M.attributesNum=o,M.index=i},c=function(){for(var e=M.newAttributes,t=0,n=e.length;t<n;t++)e[t]=0},h=function(e){d(e,0)},d=function(n,r){var a=M.newAttributes,o=M.enabledAttributes,s=M.attributeDivisors;(a[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),s[n]!==r)&&((i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),s[n]=r)},f=function(){for(var t=M.newAttributes,n=M.enabledAttributes,i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)},p=function(t,n,r,a,o,s){!0!==i.isWebGL2||5124!==r&&5125!==r?e.vertexAttribPointer(t,n,r,a,o,s):e.vertexAttribIPointer(t,n,r,o,s)},m=function(r,a,o,s){if(!1!==i.isWebGL2||!r.isInstancedMesh&&!s.isInstancedBufferGeometry||null!==t.get("ANGLE_instanced_arrays")){c();var l=s.attributes,u=o.getAttributes(),m=a.defaultAttributeValues;for(var v in u){var g=u[v];if(g.location>=0){var _=l[v];if(void 0===_&&("instanceMatrix"===v&&r.instanceMatrix&&(_=r.instanceMatrix),"instanceColor"===v&&r.instanceColor&&(_=r.instanceColor)),void 0!==_){var y=_.normalized,x=_.itemSize,b=n.get(_);if(void 0===b)continue;var w=b.buffer,M=b.type,S=b.bytesPerElement;if(_.isInterleavedBufferAttribute){var T=_.data,A=T.stride,E=_.offset;if(T.isInstancedInterleavedBuffer){for(var k=0;k<g.locationSize;k++)d(g.location+k,T.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=T.meshPerAttribute*T.count)}else for(var C=0;C<g.locationSize;C++)h(g.location+C);e.bindBuffer(34962,w);for(var L=0;L<g.locationSize;L++)p(g.location+L,x/g.locationSize,M,y,A*S,(E+x/g.locationSize*L)*S)}else{if(_.isInstancedBufferAttribute){for(var P=0;P<g.locationSize;P++)d(g.location+P,_.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=_.meshPerAttribute*_.count)}else for(var D=0;D<g.locationSize;D++)h(g.location+D);e.bindBuffer(34962,w);for(var R=0;R<g.locationSize;R++)p(g.location+R,x/g.locationSize,M,y,x*S,x/g.locationSize*R*S)}}else if(void 0!==m){var I=m[v];if(void 0!==I)switch(I.length){case 2:e.vertexAttrib2fv(g.location,I);break;case 3:e.vertexAttrib3fv(g.location,I);break;case 4:e.vertexAttrib4fv(g.location,I);break;default:e.vertexAttrib1fv(g.location,I)}}}}f()}},v=function(){g(),S=!0,M!==w&&r((M=w).object)},g=function(){w.geometry=null,w.program=null,w.wireframe=!1},_=e.getParameter(34921),y=i.isWebGL2?null:t.get("OES_vertex_array_object"),x=i.isWebGL2||null!==y,b={},w=s(null),M=w,S=!1;return{setup:function(t,i,a,s,c){var h=!1;if(x){var d=o(s,a,i);M!==d&&r((M=d).object),(h=l(t,s,a,c))&&u(t,s,a,c)}else{var f=!0===i.wireframe;M.geometry===s.id&&M.program===a.id&&M.wireframe===f||(M.geometry=s.id,M.program=a.id,M.wireframe=f,h=!0)}null!==c&&n.update(c,34963),(h||S)&&(S=!1,m(t,i,a,s),null!==c&&e.bindBuffer(34963,n.get(c).buffer))},reset:v,resetDefaultState:g,dispose:function(){for(var e in v(),b){var t=b[e];for(var n in t){var i=t[n];for(var r in i)a(i[r].object),delete i[r];delete t[n]}delete b[e]}},releaseStatesOfGeometry:function(e){if(void 0!==b[e.id]){var t=b[e.id];for(var n in t){var i=t[n];for(var r in i)a(i[r].object),delete i[r];delete t[n]}delete b[e.id]}},releaseStatesOfProgram:function(e){for(var t in b){var n=b[t];if(void 0!==n[e.id]){var i=n[e.id];for(var r in i)a(i[r].object),delete i[r];delete n[e.id]}}},initAttributes:c,enableAttribute:h,disableUnusedAttributes:f}}function nr(e,t,n,i){var r,a=i.isWebGL2;this.setMode=function(e){r=e},this.render=function(t,i){e.drawArrays(r,t,i),n.update(i,r,1)},this.renderInstances=function(i,o,s){if(0!==s){var l,u;if(a)l=e,u="drawArraysInstanced";else if(u="drawArraysInstancedANGLE",null===(l=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](r,i,o,s),n.update(o,r,s)}}}function ir(e,t,n){var i,r=function(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"},a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,o=void 0!==n.precision?n.precision:"highp",s=r(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var l=a||t.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),d=e.getParameter(3379),f=e.getParameter(34076),p=e.getParameter(34921),m=e.getParameter(36347),v=e.getParameter(36348),g=e.getParameter(36349),_=h>0,y=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){var n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:o,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:f,maxAttributes:p,maxVertexUniforms:m,maxVaryings:v,maxFragmentUniforms:g,vertexTextures:_,floatFragmentTextures:y,floatVertexTextures:_&&y,maxSamples:a?e.getParameter(36183):0}}function rr(e){var t=function(){c.value!==r&&(c.value=r,c.needsUpdate=a>0),i.numPlanes=a,i.numIntersection=0},n=function(e,t,n,r){var a=null!==e?e.length:0,o=null;if(0!==a){if(o=c.value,!0!==r||null===o){var s=n+4*a,h=t.matrixWorldInverse;u.getNormalMatrix(h),(null===o||o.length<s)&&(o=new Float32Array(s));for(var d=0,f=n;d!==a;++d,f+=4)l.copy(e[d]).applyMatrix4(h,u),l.normal.toArray(o,f),o[f+3]=l.constant}c.value=o,c.needsUpdate=!0}return i.numPlanes=a,i.numIntersection=0,o},i=this,r=null,a=0,o=!1,s=!1,l=new Gi,u=new at,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,i){var s=0!==e.length||t||0!==a||o;return o=t,r=n(e,i,0),a=e.length,s},this.beginShadows=function(){s=!0,n(null)},this.endShadows=function(){s=!1,t()},this.setState=function(i,l,u){var h=i.clippingPlanes,d=i.clipIntersection,f=i.clipShadows,p=e.get(i);if(!o||null===h||0===h.length||s&&!f)s?n(null):t();else{var m=s?0:a,v=4*m,g=p.clippingState||null;c.value=g,g=n(h,l,v,u);for(var _=0;_!==v;++_)g[_]=r[_];p.clippingState=g,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=m}}}function ar(e){var t=function(e,t){return t===V?e.mapping=F:t===H&&(e.mapping=B),e},n=new WeakMap;function i(e){var t=e.target;t.removeEventListener("dispose",i);var r=n.get(t);void 0!==r&&(n.delete(t),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){var a=r.mapping;if(a===V||a===H){if(n.has(r)){var o=n.get(r).texture;return t(o,r.mapping)}var s=r.image;if(s&&s.height>0){var l=new Fi(s.height/2);return l.fromEquirectangularTexture(e,r),n.set(r,l),r.addEventListener("dispose",i),t(l.texture,r.mapping)}return null}}return r},dispose:function(){n=new WeakMap}}}var or=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2e3;return o(this,n),(e=t.call(this)).isOrthographicCamera=!0,e.type="OrthographicCamera",e.zoom=1,e.view=null,e.left=i,e.right=r,e.top=a,e.bottom=s,e.near=l,e.far=u,e.updateProjectionMatrix(),e}return l(n,[{key:"copy",value:function(e,t){return g(p(n.prototype),"copy",this).call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}},{key:"setViewOffset",value:function(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,r=n-e,a=n+e,o=i+t,s=i-t;if(null!==this.view&&this.view.enabled){var l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a=(r+=l*this.view.offsetX)+l*this.view.width,s=(o-=u*this.view.offsetY)-u*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var t=g(p(n.prototype),"toJSON",this).call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}]),n}(Ii),sr=[.125,.215,.35,.446,.526,.582],lr=20,ur=new or,cr=new bt,hr=null,dr=(1+Math.sqrt(5))/2,fr=1/dr,pr=[new Dt(1,1,1),new Dt(-1,1,1),new Dt(1,1,-1),new Dt(-1,1,-1),new Dt(0,dr,fr),new Dt(0,dr,-fr),new Dt(fr,0,dr),new Dt(-fr,0,dr),new Dt(dr,fr,0),new Dt(-dr,fr,0)],mr=function(){"use strict";function e(t){o(this,e),this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}return l(e,[{key:"fromScene",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;hr=this._renderer.getRenderTarget(),this._setSize(256);var r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}},{key:"fromEquirectangular",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,t)}},{key:"fromCubemap",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,t)}},{key:"compileCubemapShader",value:function(){null===this._cubemapMaterial&&(this._cubemapMaterial=yr(),this._compileMaterial(this._cubemapMaterial))}},{key:"compileEquirectangularShader",value:function(){null===this._equirectMaterial&&(this._equirectMaterial=_r(),this._compileMaterial(this._equirectMaterial))}},{key:"dispose",value:function(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}},{key:"_setSize",value:function(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}},{key:"_dispose",value:function(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(var e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}},{key:"_cleanup",value:function(e){this._renderer.setRenderTarget(hr),e.scissorTest=!1,gr(e,0,0,e.width,e.height)}},{key:"_fromTexture",value:function(e,t){e.mapping===F||e.mapping===B?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),hr=this._renderer.getRenderTarget();var n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}},{key:"_allocateTargets",value:function(){var e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Z,minFilter:Z,generateMipmaps:!1,type:ne,format:re,encoding:Ue,depthBuffer:!1},i=vr(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=vr(e,t,n);var r,a=this._lodMax;r=function(e){for(var t=[],n=[],i=[],r=e,a=e-4+1+sr.length,o=0;o<a;o++){var s=Math.pow(2,r);n.push(s);var l=1/s;o>e-4?l=sr[o-e+4-1]:0===o&&(l=0),i.push(l);for(var u=1/(s-2),c=-u,h=1+u,d=[c,c,h,c,h,h,c,c,h,h,c,h],f=6,p=6,m=3,v=2,g=1,_=new Float32Array(m*p*f),y=new Float32Array(v*p*f),x=new Float32Array(g*p*f),b=0;b<f;b++){var w=b%3*2/3-1,M=b>2?0:-1,S=[w,M,0,w+2/3,M,0,w+2/3,M+1,0,w,M,0,w+2/3,M+1,0,w,M+1,0];_.set(S,m*p*b),y.set(d,v*p*b);var T=[b,b,b,b,b,b];x.set(T,g*p*b)}var A=new li;A.setAttribute("position",new Jn(_,m)),A.setAttribute("uv",new Jn(y,v)),A.setAttribute("faceIndex",new Jn(x,g)),t.push(A),r>4&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}(a),this._sizeLods=r.sizeLods,this._lodPlanes=r.lodPlanes,this._sigmas=r.sigmas,this._blurMaterial=function(e,t,n){var i=new Float32Array(lr),r=new Dt(0,1,0),a=new Ri({name:"SphericalGaussianBlur",defines:{n:lr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:"".concat(e,".0")},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return a}(a,e,t)}return i}},{key:"_compileMaterial",value:function(e){var t=new Ai(this._lodPlanes[0],e);this._renderer.compile(t,ur)}},{key:"_sceneToCubeUV",value:function(e,t,n,i){var r=new Oi(90,1,t,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,u=s.toneMapping;s.getClearColor(cr),s.toneMapping=0,s.autoClear=!1;var c=new Yn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new Ai(new ki,c),d=!1,f=e.background;f?f.isColor&&(c.color.copy(f),e.background=null,d=!0):(c.color.copy(cr),d=!0);for(var p=0;p<6;p++){var m=p%3;0===m?(r.up.set(0,a[p],0),r.lookAt(o[p],0,0)):1===m?(r.up.set(0,0,a[p]),r.lookAt(0,o[p],0)):(r.up.set(0,a[p],0),r.lookAt(0,0,o[p]));var v=this._cubeSize;gr(i,m*v,p>2?v:0,v,v),s.setRenderTarget(i),d&&s.render(h,r),s.render(e,r)}h.geometry.dispose(),h.material.dispose(),s.toneMapping=u,s.autoClear=l,e.background=f}},{key:"_textureToCubeUV",value:function(e,t){var n=this._renderer,i=e.mapping===F||e.mapping===B;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=yr()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=_r());var r=i?this._cubemapMaterial:this._equirectMaterial,a=new Ai(this._lodPlanes[0],r);r.uniforms.envMap.value=e;var o=this._cubeSize;gr(t,0,0,3*o,2*o),n.setRenderTarget(t),n.render(a,ur)}},{key:"_applyPMREM",value:function(e){var t=this._renderer,n=t.autoClear;t.autoClear=!1;for(var i=1;i<this._lodPlanes.length;i++){var r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=pr[(i-1)%pr.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}},{key:"_blur",value:function(e,t,n,i,r){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}},{key:"_halfBlur",value:function(e,t,n,i,r,a,o){var s=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");var u=new Ai(this._lodPlanes[i],l),c=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(r)?Math.PI/(2*h):2*Math.PI/39,f=r/d,p=isFinite(r)?1+Math.floor(3*f):lr;p>lr&&console.warn("sigmaRadians, ".concat(r,", is too large and will clip, as it requested ").concat(p," samples when the maximum is set to ").concat(lr));for(var m=[],v=0,g=0;g<lr;++g){var _=g/f,y=Math.exp(-_*_/2);m.push(y),0===g?v+=y:g<p&&(v+=2*y)}for(var x=0;x<m.length;x++)m[x]=m[x]/v;c.envMap.value=e.texture,c.samples.value=p,c.weights.value=m,c.latitudinal.value="latitudinal"===a,o&&(c.poleAxis.value=o);var b=this._lodMax;c.dTheta.value=d,c.mipInt.value=b-n;var w=this._sizeLods[i];gr(t,3*w*(i>b-4?i-b+4:0),4*(this._cubeSize-w),3*w,2*w),s.setRenderTarget(t),s.render(u,ur)}}]),e}();function vr(e,t,n){var i=new kt(e,t,n);return i.texture.mapping=G,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function gr(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function _r(){return new Ri({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function yr(){return new Ri({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function xr(e){var t=function(e){for(var t=0,n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t},n=new WeakMap,i=null;function r(e){var t=e.target;t.removeEventListener("dispose",r);var i=n.get(t);void 0!==i&&(n.delete(t),i.dispose())}return{get:function(a){if(a&&a.isTexture){var o=a.mapping,s=o===V||o===H,l=o===F||o===B;if(s||l){if(a.isRenderTargetTexture&&!0===a.needsPMREMUpdate){a.needsPMREMUpdate=!1;var u=n.get(a);return null===i&&(i=new mr(e)),u=s?i.fromEquirectangular(a,u):i.fromCubemap(a,u),n.set(a,u),u.texture}if(n.has(a))return n.get(a).texture;var c=a.image;if(s&&c&&c.height>0||l&&c&&t(c)){null===i&&(i=new mr(e));var h=s?i.fromEquirectangular(a):i.fromCubemap(a);return n.set(a,h),a.addEventListener("dispose",r),h.texture}return null}}return a},dispose:function(){n=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function br(e){var t=function(t){if(void 0!==n[t])return n[t];var i;switch(t){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(t)}return n[t]=i,i},n={};return{has:function(e){return null!==t(e)},init:function(e){e.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(e){var n=t(e);return null===n&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),n}}}function wr(e,t,n,i){var r=function(e){var n=[],i=e.index,r=e.attributes.position,a=0;if(null!==i){var s=i.array;a=i.version;for(var l=0,u=s.length;l<u;l+=3){var c=s[l+0],h=s[l+1],d=s[l+2];n.push(c,h,h,d,d,c)}}else{var f=r.array;a=r.version;for(var p=0,m=f.length/3-1;p<m;p+=3){var v=p+0,g=p+1,_=p+2;n.push(v,g,g,_,_,v)}}var y=new(st(n)?Qn:Kn)(n,1);y.version=a;var x=o.get(e);x&&t.remove(x),o.set(e,y)},a={},o=new WeakMap;function s(e){var r=e.target;for(var l in null!==r.index&&t.remove(r.index),r.attributes)t.remove(r.attributes[l]);r.removeEventListener("dispose",s),delete a[r.id];var u=o.get(r);u&&(t.remove(u),o.delete(r)),i.releaseStatesOfGeometry(r),!0===r.isInstancedBufferGeometry&&delete r._maxInstanceCount,n.memory.geometries--}return{get:function(e,t){return!0===a[t.id]||(t.addEventListener("dispose",s),a[t.id]=!0,n.memory.geometries++),t},update:function(e){var n=e.attributes;for(var i in n)t.update(n[i],34962);var r=e.morphAttributes;for(var a in r)for(var o=r[a],s=0,l=o.length;s<l;s++)t.update(o[s],34962)},getWireframeAttribute:function(e){var t=o.get(e);if(t){var n=e.index;null!==n&&t.version<n.version&&r(e)}else r(e);return o.get(e)}}}function Mr(e,t,n,i){var r,a,o,s=i.isWebGL2;this.setMode=function(e){r=e},this.setIndex=function(e){a=e.type,o=e.bytesPerElement},this.render=function(t,i){e.drawElements(r,i,a,t*o),n.update(i,r,1)},this.renderInstances=function(i,l,u){if(0!==u){var c,h;if(s)c=e,h="drawElementsInstanced";else if(h="drawElementsInstancedANGLE",null===(c=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](r,l,a,i*o,u),n.update(l,r,u)}}}function Sr(e){var t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,i){switch(t.calls++,n){case 4:t.triangles+=i*(e/3);break;case 1:t.lines+=i*(e/2);break;case 3:t.lines+=i*(e-1);break;case 2:t.lines+=i*e;break;case 0:t.points+=i*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function Tr(e,t){return e[0]-t[0]}function Ar(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Er(e,t,n){for(var i={},r=new Float32Array(8),a=new WeakMap,o=new Et,s=[],l=0;l<8;l++)s[l]=[l,0];return{update:function(l,u,c,h){var d=l.morphTargetInfluences;if(!0===t.isWebGL2){var f=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,p=void 0!==f?f.length:0,m=a.get(u);if(void 0===m||m.count!==p){void 0!==m&&m.texture.dispose();var v=void 0!==u.morphAttributes.position,g=void 0!==u.morphAttributes.normal,_=void 0!==u.morphAttributes.color,y=u.morphAttributes.position||[],x=u.morphAttributes.normal||[],b=u.morphAttributes.color||[],w=0;!0===v&&(w=1),!0===g&&(w=2),!0===_&&(w=3);var M=u.attributes.position.count*w,S=1;M>t.maxTextureSize&&(S=Math.ceil(M/t.maxTextureSize),M=t.maxTextureSize);var T=new Float32Array(M*S*4*p),A=new Ct(T,M,S,p);A.type=te,A.needsUpdate=!0;for(var E=4*w,k=0;k<p;k++)for(var C=y[k],L=x[k],P=b[k],D=M*S*4*k,R=0;R<C.count;R++){var I=R*E;!0===v&&(o.fromBufferAttribute(C,R),T[D+I+0]=o.x,T[D+I+1]=o.y,T[D+I+2]=o.z,T[D+I+3]=0),!0===g&&(o.fromBufferAttribute(L,R),T[D+I+4]=o.x,T[D+I+5]=o.y,T[D+I+6]=o.z,T[D+I+7]=0),!0===_&&(o.fromBufferAttribute(P,R),T[D+I+8]=o.x,T[D+I+9]=o.y,T[D+I+10]=o.z,T[D+I+11]=4===P.itemSize?o.w:1)}m={count:p,texture:A,size:new rt(M,S)},a.set(u,m),u.addEventListener("dispose",(function e(){A.dispose(),a.delete(u),u.removeEventListener("dispose",e)}))}for(var O=0,N=0;N<d.length;N++)O+=d[N];var z=u.morphTargetsRelative?1:1-O;h.getUniforms().setValue(e,"morphTargetBaseInfluence",z),h.getUniforms().setValue(e,"morphTargetInfluences",d),h.getUniforms().setValue(e,"morphTargetsTexture",m.texture,n),h.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{var U=void 0===d?0:d.length,F=i[u.id];if(void 0===F||F.length!==U){F=[];for(var B=0;B<U;B++)F[B]=[B,0];i[u.id]=F}for(var V=0;V<U;V++){var H=F[V];H[0]=V,H[1]=d[V]}F.sort(Ar);for(var G=0;G<8;G++)G<U&&F[G][1]?(s[G][0]=F[G][0],s[G][1]=F[G][1]):(s[G][0]=Number.MAX_SAFE_INTEGER,s[G][1]=0);s.sort(Tr);for(var W=u.morphAttributes.position,j=u.morphAttributes.normal,X=0,q=0;q<8;q++){var Y=s[q],$=Y[0],Z=Y[1];$!==Number.MAX_SAFE_INTEGER&&Z?(W&&u.getAttribute("morphTarget"+q)!==W[$]&&u.setAttribute("morphTarget"+q,W[$]),j&&u.getAttribute("morphNormal"+q)!==j[$]&&u.setAttribute("morphNormal"+q,j[$]),r[q]=Z,X+=Z):(W&&!0===u.hasAttribute("morphTarget"+q)&&u.deleteAttribute("morphTarget"+q),j&&!0===u.hasAttribute("morphNormal"+q)&&u.deleteAttribute("morphNormal"+q),r[q]=0)}var J=u.morphTargetsRelative?1:1-X;h.getUniforms().setValue(e,"morphTargetBaseInfluence",J),h.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function kr(e,t,n,i){var r=new WeakMap;function a(e){var t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){var o=i.render.frame,s=e.geometry,l=t.get(e,s);return r.get(l)!==o&&(t.update(l),r.set(l,o)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}var Cr=new At,Lr=new Ct,Pr=new Lt,Dr=new Ui,Rr=[],Ir=[],Or=new Float32Array(16),Nr=new Float32Array(9),zr=new Float32Array(4);function Ur(e,t,n){var i=e[0];if(i<=0||i>0)return e;var r=t*n,a=Rr[r];if(void 0===a&&(a=new Float32Array(r),Rr[r]=a),0!==t){i.toArray(a,0);for(var o=1,s=0;o!==t;++o)s+=n,e[o].toArray(a,s)}return a}function Fr(e,t){if(e.length!==t.length)return!1;for(var n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Br(e,t){for(var n=0,i=t.length;n<i;n++)e[n]=t[n]}function Vr(e,t){var n=Ir[t];void 0===n&&(n=new Int32Array(t),Ir[t]=n);for(var i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function Hr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Gr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Fr(n,t))return;e.uniform2fv(this.addr,t),Br(n,t)}}function Wr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Fr(n,t))return;e.uniform3fv(this.addr,t),Br(n,t)}}function jr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Fr(n,t))return;e.uniform4fv(this.addr,t),Br(n,t)}}function Xr(e,t){var n=this.cache,i=t.elements;if(void 0===i){if(Fr(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Br(n,t)}else{if(Fr(n,i))return;zr.set(i),e.uniformMatrix2fv(this.addr,!1,zr),Br(n,i)}}function qr(e,t){var n=this.cache,i=t.elements;if(void 0===i){if(Fr(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Br(n,t)}else{if(Fr(n,i))return;Nr.set(i),e.uniformMatrix3fv(this.addr,!1,Nr),Br(n,i)}}function Yr(e,t){var n=this.cache,i=t.elements;if(void 0===i){if(Fr(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Br(n,t)}else{if(Fr(n,i))return;Or.set(i),e.uniformMatrix4fv(this.addr,!1,Or),Br(n,i)}}function $r(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Zr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Fr(n,t))return;e.uniform2iv(this.addr,t),Br(n,t)}}function Jr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Fr(n,t))return;e.uniform3iv(this.addr,t),Br(n,t)}}function Kr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Fr(n,t))return;e.uniform4iv(this.addr,t),Br(n,t)}}function Qr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function ea(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Fr(n,t))return;e.uniform2uiv(this.addr,t),Br(n,t)}}function ta(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Fr(n,t))return;e.uniform3uiv(this.addr,t),Br(n,t)}}function na(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Fr(n,t))return;e.uniform4uiv(this.addr,t),Br(n,t)}}function ia(e,t,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(t||Cr,r)}function ra(e,t,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||Pr,r)}function aa(e,t,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||Dr,r)}function oa(e,t,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||Lr,r)}function sa(e,t){e.uniform1fv(this.addr,t)}function la(e,t){var n=Ur(t,this.size,2);e.uniform2fv(this.addr,n)}function ua(e,t){var n=Ur(t,this.size,3);e.uniform3fv(this.addr,n)}function ca(e,t){var n=Ur(t,this.size,4);e.uniform4fv(this.addr,n)}function ha(e,t){var n=Ur(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function da(e,t){var n=Ur(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function fa(e,t){var n=Ur(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function pa(e,t){e.uniform1iv(this.addr,t)}function ma(e,t){e.uniform2iv(this.addr,t)}function va(e,t){e.uniform3iv(this.addr,t)}function ga(e,t){e.uniform4iv(this.addr,t)}function _a(e,t){e.uniform1uiv(this.addr,t)}function ya(e,t){e.uniform2uiv(this.addr,t)}function xa(e,t){e.uniform3uiv(this.addr,t)}function ba(e,t){e.uniform4uiv(this.addr,t)}function wa(e,t,n){var i=this.cache,r=t.length,a=Vr(n,r);Fr(i,a)||(e.uniform1iv(this.addr,a),Br(i,a));for(var o=0;o!==r;++o)n.setTexture2D(t[o]||Cr,a[o])}function Ma(e,t,n){var i=this.cache,r=t.length,a=Vr(n,r);Fr(i,a)||(e.uniform1iv(this.addr,a),Br(i,a));for(var o=0;o!==r;++o)n.setTexture3D(t[o]||Pr,a[o])}function Sa(e,t,n){var i=this.cache,r=t.length,a=Vr(n,r);Fr(i,a)||(e.uniform1iv(this.addr,a),Br(i,a));for(var o=0;o!==r;++o)n.setTextureCube(t[o]||Dr,a[o])}function Ta(e,t,n){var i=this.cache,r=t.length,a=Vr(n,r);Fr(i,a)||(e.uniform1iv(this.addr,a),Br(i,a));for(var o=0;o!==r;++o)n.setTexture2DArray(t[o]||Lr,a[o])}var Aa=function e(t,n,i){"use strict";o(this,e),this.id=t,this.addr=i,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Hr;case 35664:return Gr;case 35665:return Wr;case 35666:return jr;case 35674:return Xr;case 35675:return qr;case 35676:return Yr;case 5124:case 35670:return $r;case 35667:case 35671:return Zr;case 35668:case 35672:return Jr;case 35669:case 35673:return Kr;case 5125:return Qr;case 36294:return ea;case 36295:return ta;case 36296:return na;case 35678:case 36198:case 36298:case 36306:case 35682:return ia;case 35679:case 36299:case 36307:return ra;case 35680:case 36300:case 36308:case 36293:return aa;case 36289:case 36303:case 36311:case 36292:return oa}}(n.type)},Ea=function e(t,n,i){"use strict";o(this,e),this.id=t,this.addr=i,this.cache=[],this.size=n.size,this.setValue=function(e){switch(e){case 5126:return sa;case 35664:return la;case 35665:return ua;case 35666:return ca;case 35674:return ha;case 35675:return da;case 35676:return fa;case 5124:case 35670:return pa;case 35667:case 35671:return ma;case 35668:case 35672:return va;case 35669:case 35673:return ga;case 5125:return _a;case 36294:return ya;case 36295:return xa;case 36296:return ba;case 35678:case 36198:case 36298:case 36306:case 35682:return wa;case 35679:case 36299:case 36307:return Ma;case 35680:case 36300:case 36308:case 36293:return Sa;case 36289:case 36303:case 36311:case 36292:return Ta}}(n.type)},ka=function(){"use strict";function e(t){o(this,e),this.id=t,this.seq=[],this.map={}}return l(e,[{key:"setValue",value:function(e,t,n){for(var i=this.seq,r=0,a=i.length;r!==a;++r){var o=i[r];o.setValue(e,t[o.id],n)}}}]),e}(),Ca=/(\w+)(\])?(\[|\.)?/g;function La(e,t){e.seq.push(t),e.map[t.id]=t}function Pa(e,t,n){var i=e.name,r=i.length;for(Ca.lastIndex=0;;){var a=Ca.exec(i),o=Ca.lastIndex,s=a[1],l="]"===a[2],u=a[3];if(l&&(s|=0),void 0===u||"["===u&&o+2===r){La(n,void 0===u?new Aa(s,e,t):new Ea(s,e,t));break}var c=n.map[s];void 0===c&&La(n,c=new ka(s)),n=c}}var Da=function(){"use strict";function e(t,n){o(this,e),this.seq=[],this.map={};for(var i=t.getProgramParameter(n,35718),r=0;r<i;++r){var a=t.getActiveUniform(n,r);Pa(a,t.getUniformLocation(n,a.name),this)}}return l(e,[{key:"setValue",value:function(e,t,n,i){var r=this.map[t];void 0!==r&&r.setValue(e,n,i)}},{key:"setOptional",value:function(e,t,n){var i=t[n];void 0!==i&&this.setValue(e,n,i)}}],[{key:"upload",value:function(e,t,n,i){for(var r=0,a=t.length;r!==a;++r){var o=t[r],s=n[o.id];!1!==s.needsUpdate&&o.setValue(e,s.value,i)}}},{key:"seqWithValue",value:function(e,t){for(var n=[],i=0,r=e.length;i!==r;++i){var a=e[i];a.id in t&&n.push(a)}return n}}]),e}();function Ra(e,t,n){var i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}var Ia=0;function Oa(e,t,n){var i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";var a=/ERROR: 0:(\d+)/.exec(r);if(a){var o=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){for(var n=e.split("\n"),i=[],r=Math.max(t-6,0),a=Math.min(t+6,n.length),o=r;o<a;o++){var s=o+1;i.push("".concat(s===t?">":" "," ").concat(s,": ").concat(n[o]))}return i.join("\n")}(e.getShaderSource(t),o)}return r}function Na(e,t){var n=function(e){switch(e){case Ue:return["Linear","( value )"];case Fe:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function za(e,t){var n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ua(e){return""!==e}function Fa(e,t){var n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ba(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var Va=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ha(e){return e.replace(Va,Ga)}function Ga(e,t){var n=Zi[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Ha(n)}var Wa=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ja(e){return e.replace(Wa,Xa)}function Xa(e,t,n,i){for(var r="",a=parseInt(t);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function qa(e){var t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Ya(e,t,n,i){var r,a,o=e.getContext(),s=n.defines,l=n.vertexShader,u=n.fragmentShader,c=function(e){var t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),h=function(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case F:case B:t="ENVMAP_TYPE_CUBE";break;case G:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),d=function(e){var t="ENVMAP_MODE_REFLECTION";e.envMap&&e.envMapMode===B&&(t="ENVMAP_MODE_REFRACTION");return t}(n),f=function(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),p=function(e){var t=e.envMapCubeUVHeight;if(null===t)return null;var n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),m=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ua).join("\n")}(n),v=function(e){var t=[];for(var n in e){var i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(s),g=o.createProgram(),_=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((r=[v].filter(Ua).join("\n")).length>0&&(r+="\n"),(a=[m,v].filter(Ua).join("\n")).length>0&&(a+="\n")):(r=[qa(n),"#define SHADER_NAME "+n.shaderName,v,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ua).join("\n"),a=[m,qa(n),"#define SHADER_NAME "+n.shaderName,v,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.envMap?"#define "+d:"",n.envMap?"#define "+f:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Zi.tonemapping_pars_fragment:"",0!==n.toneMapping?za("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Zi.encodings_pars_fragment,Na("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ua).join("\n")),l=Ba(l=Fa(l=Ha(l),n),n),u=Ba(u=Fa(u=Ha(u),n),n),l=ja(l),u=ja(u),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(_="#version 300 es\n",r=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+r,a=["#define varying in",n.glslVersion===We?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===We?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);var y,x,b=_+a+u,w=Ra(o,35633,_+r+l),M=Ra(o,35632,b);if(o.attachShader(g,w),o.attachShader(g,M),void 0!==n.index0AttributeName?o.bindAttribLocation(g,0,n.index0AttributeName):!0===n.morphTargets&&o.bindAttribLocation(g,0,"position"),o.linkProgram(g),e.debug.checkShaderErrors){var S=o.getProgramInfoLog(g).trim(),T=o.getShaderInfoLog(w).trim(),A=o.getShaderInfoLog(M).trim(),E=!0,k=!0;if(!1===o.getProgramParameter(g,35714)){E=!1;var C=Oa(o,w,"vertex"),L=Oa(o,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(g,35715)+"\n\nProgram Info Log: "+S+"\n"+C+"\n"+L)}else""!==S?console.warn("THREE.WebGLProgram: Program Info Log:",S):""!==T&&""!==A||(k=!1);k&&(this.diagnostics={runnable:E,programLog:S,vertexShader:{log:T,prefix:r},fragmentShader:{log:A,prefix:a}})}return o.deleteShader(w),o.deleteShader(M),this.getUniforms=function(){return void 0===y&&(y=new Da(o,g)),y},this.getAttributes=function(){return void 0===x&&(x=function(e,t){for(var n={},i=e.getProgramParameter(t,35721),r=0;r<i;r++){var a=e.getActiveAttrib(t,r),o=a.name,s=1;35674===a.type&&(s=2),35675===a.type&&(s=3),35676===a.type&&(s=4),n[o]={type:a.type,location:e.getAttribLocation(t,o),locationSize:s}}return n}(o,g)),x},this.destroy=function(){i.releaseStatesOfProgram(this),o.deleteProgram(g),this.program=void 0},this.name=n.shaderName,this.id=Ia++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=M,this}var $a=0,Za=function(){"use strict";function e(){o(this,e),this.shaderCache=new Map,this.materialCache=new Map}return l(e,[{key:"update",value:function(e){var t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}},{key:"remove",value:function(e){var t=this.materialCache.get(e),n=!0,i=!1,r=void 0;try{for(var a,o=t[Symbol.iterator]();!(n=(a=o.next()).done);n=!0){var s=a.value;s.usedTimes--,0===s.usedTimes&&this.shaderCache.delete(s.code)}}catch(e){i=!0,r=e}finally{try{n||null==o.return||o.return()}finally{if(i)throw r}}return this.materialCache.delete(e),this}},{key:"getVertexShaderID",value:function(e){return this._getShaderStage(e.vertexShader).id}},{key:"getFragmentShaderID",value:function(e){return this._getShaderStage(e.fragmentShader).id}},{key:"dispose",value:function(){this.shaderCache.clear(),this.materialCache.clear()}},{key:"_getShaderCacheForMaterial",value:function(e){var t=this.materialCache,n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}},{key:"_getShaderStage",value:function(e){var t=this.shaderCache,n=t.get(e);return void 0===n&&(n=new Ja(e),t.set(e,n)),n}}]),e}(),Ja=function e(t){"use strict";o(this,e),this.id=$a++,this.code=t,this.usedTimes=0};function Ka(e,t,n,i,r,a,o){var s=function(e,t){e.push(t.precision),e.push(t.outputEncoding),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.combine),e.push(t.vertexUvs),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)},l=function(e,t){u.disableAll(),t.isWebGL2&&u.enable(0),t.supportsVertexTextures&&u.enable(1),t.instancing&&u.enable(2),t.instancingColor&&u.enable(3),t.map&&u.enable(4),t.matcap&&u.enable(5),t.envMap&&u.enable(6),t.lightMap&&u.enable(7),t.aoMap&&u.enable(8),t.emissiveMap&&u.enable(9),t.bumpMap&&u.enable(10),t.normalMap&&u.enable(11),t.objectSpaceNormalMap&&u.enable(12),t.tangentSpaceNormalMap&&u.enable(13),t.clearcoat&&u.enable(14),t.clearcoatMap&&u.enable(15),t.clearcoatRoughnessMap&&u.enable(16),t.clearcoatNormalMap&&u.enable(17),t.iridescence&&u.enable(18),t.iridescenceMap&&u.enable(19),t.iridescenceThicknessMap&&u.enable(20),t.displacementMap&&u.enable(21),t.specularMap&&u.enable(22),t.roughnessMap&&u.enable(23),t.metalnessMap&&u.enable(24),t.gradientMap&&u.enable(25),t.alphaMap&&u.enable(26),t.alphaTest&&u.enable(27),t.vertexColors&&u.enable(28),t.vertexAlphas&&u.enable(29),t.vertexUvs&&u.enable(30),t.vertexTangents&&u.enable(31),t.uvsVertexOnly&&u.enable(32),e.push(u.mask),u.disableAll(),t.fog&&u.enable(0),t.useFog&&u.enable(1),t.flatShading&&u.enable(2),t.logarithmicDepthBuffer&&u.enable(3),t.skinning&&u.enable(4),t.morphTargets&&u.enable(5),t.morphNormals&&u.enable(6),t.morphColors&&u.enable(7),t.premultipliedAlpha&&u.enable(8),t.shadowMapEnabled&&u.enable(9),t.physicallyCorrectLights&&u.enable(10),t.doubleSided&&u.enable(11),t.flipSided&&u.enable(12),t.useDepthPacking&&u.enable(13),t.dithering&&u.enable(14),t.specularIntensityMap&&u.enable(15),t.specularColorMap&&u.enable(16),t.transmission&&u.enable(17),t.transmissionMap&&u.enable(18),t.thicknessMap&&u.enable(19),t.sheen&&u.enable(20),t.sheenColorMap&&u.enable(21),t.sheenRoughnessMap&&u.enable(22),t.decodeVideoTexture&&u.enable(23),t.opaque&&u.enable(24),e.push(u.mask)},u=new xn,c=new Za,h=[],d=r.isWebGL2,f=r.logarithmicDepthBuffer,p=r.vertexTextures,m=r.precision,v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(a,s,l,u,h){var g=u.fog,_=h.geometry,y=a.isMeshStandardMaterial?u.environment:null,x=(a.isMeshStandardMaterial?n:t).get(a.envMap||y),b=x&&x.mapping===G?x.image.height:null,w=v[a.type];null!==a.precision&&(m=r.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",m,"instead.");var M,S,T,A,E=_.morphAttributes.position||_.morphAttributes.normal||_.morphAttributes.color,k=void 0!==E?E.length:0,C=0;if(void 0!==_.morphAttributes.position&&(C=1),void 0!==_.morphAttributes.normal&&(C=2),void 0!==_.morphAttributes.color&&(C=3),w){var L=Ki[w];M=L.vertexShader,S=L.fragmentShader}else M=a.vertexShader,S=a.fragmentShader,c.update(a),T=c.getVertexShaderID(a),A=c.getFragmentShaderID(a);var P=e.getRenderTarget(),D=a.alphaTest>0,R=a.clearcoat>0,I=a.iridescence>0;return{isWebGL2:d,shaderID:w,shaderName:a.type,vertexShader:M,fragmentShader:S,defines:a.defines,customVertexShaderID:T,customFragmentShaderID:A,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:m,instancing:!0===h.isInstancedMesh,instancingColor:!0===h.isInstancedMesh&&null!==h.instanceColor,supportsVertexTextures:p,outputEncoding:null===P?e.outputEncoding:!0===P.isXRRenderTarget?P.texture.encoding:Ue,map:!!a.map,matcap:!!a.matcap,envMap:!!x,envMapMode:x&&x.mapping,envMapCubeUVHeight:b,lightMap:!!a.lightMap,aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:1===a.normalMapType,tangentSpaceNormalMap:0===a.normalMapType,decodeVideoTexture:!!a.map&&!0===a.map.isVideoTexture&&a.map.encoding===Fe,clearcoat:R,clearcoatMap:R&&!!a.clearcoatMap,clearcoatRoughnessMap:R&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:R&&!!a.clearcoatNormalMap,iridescence:I,iridescenceMap:I&&!!a.iridescenceMap,iridescenceThicknessMap:I&&!!a.iridescenceThicknessMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,opaque:!1===a.transparent&&1===a.blending,alphaMap:!!a.alphaMap,alphaTest:D,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!_.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!_.attributes.color&&4===_.attributes.color.itemSize,vertexUvs:!!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatMap||a.clearcoatRoughnessMap||a.clearcoatNormalMap||a.iridescenceMap||a.iridescenceThicknessMap||a.displacementMap||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheenColorMap||a.sheenRoughnessMap),uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.iridescenceMap||a.iridescenceThicknessMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap||!a.displacementMap),fog:!!g,useFog:!0===a.fog,fogExp2:g&&g.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:f,skinning:!0===h.isSkinnedMesh,morphTargets:void 0!==_.morphAttributes.position,morphNormals:void 0!==_.morphAttributes.normal,morphColors:void 0!==_.morphAttributes.color,morphTargetsCount:k,morphTextureStride:C,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numSpotLightMaps:s.spotLightMap.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numSpotLightShadowsWithMaps:s.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&l.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:!!a.depthPacking,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||i.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){var n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(var i in t.defines)n.push(i),n.push(t.defines[i]);return!1===t.isRawShaderMaterial&&(s(n,t),l(n,t),n.push(e.outputEncoding)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){var t,n=v[e.type];if(n){var i=Ki[n];t=Di.clone(i.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,n){for(var i,r=0,o=h.length;r<o;r++){var s=h[r];if(s.cacheKey===n){++(i=s).usedTimes;break}}return void 0===i&&(i=new Ya(e,n,t,a),h.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){var t=h.indexOf(e);h[t]=h[h.length-1],h.pop(),e.destroy()}},releaseShaderCache:function(e){c.remove(e)},programs:h,dispose:function(){c.dispose()}}}function Qa(){var e=new WeakMap;return{get:function(t){var n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function eo(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function to(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function no(){var e=function(e,i,r,a,o,s){var l=t[n];return void 0===l?(l={id:e.id,object:e,geometry:i,material:r,groupOrder:a,renderOrder:e.renderOrder,z:o,group:s},t[n]=l):(l.id=e.id,l.object=e,l.geometry=i,l.material=r,l.groupOrder=a,l.renderOrder=e.renderOrder,l.z=o,l.group=s),n++,l},t=[],n=0,i=[],r=[],a=[];return{opaque:i,transmissive:r,transparent:a,init:function(){n=0,i.length=0,r.length=0,a.length=0},push:function(t,n,o,s,l,u){var c=e(t,n,o,s,l,u);o.transmission>0?r.push(c):!0===o.transparent?a.push(c):i.push(c)},unshift:function(t,n,o,s,l,u){var c=e(t,n,o,s,l,u);o.transmission>0?r.unshift(c):!0===o.transparent?a.unshift(c):i.unshift(c)},finish:function(){for(var e=n,i=t.length;e<i;e++){var r=t[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.group=null}},sort:function(e,t){i.length>1&&i.sort(e||eo),r.length>1&&r.sort(t||to),a.length>1&&a.sort(t||to)}}}function io(){var e=new WeakMap;return{get:function(t,n){var i,r=e.get(t);return void 0===r?(i=new no,e.set(t,[i])):n>=r.length?(i=new no,r.push(i)):i=r[n],i},dispose:function(){e=new WeakMap}}}function ro(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new Dt,color:new bt};break;case"SpotLight":n={position:new Dt,direction:new Dt,color:new bt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Dt,color:new bt,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Dt,skyColor:new bt,groundColor:new bt};break;case"RectAreaLight":n={color:new bt,position:new Dt,halfWidth:new Dt,halfHeight:new Dt}}return e[t.id]=n,n}}}var ao=0;function oo(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function so(e,t){for(var n,i=new ro,r=(n={},{get:function(e){if(void 0!==n[e.id])return n[e.id];var t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rt,shadowCameraNear:1,shadowCameraFar:1e3}}return n[e.id]=t,t}}),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0},o=0;o<9;o++)a.probe.push(new Dt);var s=new Dt,l=new un,u=new un;return{setup:function(n,o){for(var s=0,l=0,u=0,c=0;c<9;c++)a.probe[c].set(0,0,0);var h=0,d=0,f=0,p=0,m=0,v=0,g=0,_=0,y=0,x=0;n.sort(oo);for(var b=!0!==o?Math.PI:1,w=0,M=n.length;w<M;w++){var S=n[w],T=S.color,A=S.intensity,E=S.distance,k=S.shadow&&S.shadow.map?S.shadow.map.texture:null;if(S.isAmbientLight)s+=T.r*A*b,l+=T.g*A*b,u+=T.b*A*b;else if(S.isLightProbe)for(var C=0;C<9;C++)a.probe[C].addScaledVector(S.sh.coefficients[C],A);else if(S.isDirectionalLight){var L=i.get(S);if(L.color.copy(S.color).multiplyScalar(S.intensity*b),S.castShadow){var P=S.shadow,D=r.get(S);D.shadowBias=P.bias,D.shadowNormalBias=P.normalBias,D.shadowRadius=P.radius,D.shadowMapSize=P.mapSize,a.directionalShadow[h]=D,a.directionalShadowMap[h]=k,a.directionalShadowMatrix[h]=S.shadow.matrix,v++}a.directional[h]=L,h++}else if(S.isSpotLight){var R=i.get(S);R.position.setFromMatrixPosition(S.matrixWorld),R.color.copy(T).multiplyScalar(A*b),R.distance=E,R.coneCos=Math.cos(S.angle),R.penumbraCos=Math.cos(S.angle*(1-S.penumbra)),R.decay=S.decay,a.spot[f]=R;var I=S.shadow;if(S.map&&(a.spotLightMap[y]=S.map,y++,I.updateMatrices(S),S.castShadow&&x++),a.spotLightMatrix[f]=I.matrix,S.castShadow){var O=r.get(S);O.shadowBias=I.bias,O.shadowNormalBias=I.normalBias,O.shadowRadius=I.radius,O.shadowMapSize=I.mapSize,a.spotShadow[f]=O,a.spotShadowMap[f]=k,_++}f++}else if(S.isRectAreaLight){var N=i.get(S);N.color.copy(T).multiplyScalar(A),N.halfWidth.set(.5*S.width,0,0),N.halfHeight.set(0,.5*S.height,0),a.rectArea[p]=N,p++}else if(S.isPointLight){var z=i.get(S);if(z.color.copy(S.color).multiplyScalar(S.intensity*b),z.distance=S.distance,z.decay=S.decay,S.castShadow){var U=S.shadow,F=r.get(S);F.shadowBias=U.bias,F.shadowNormalBias=U.normalBias,F.shadowRadius=U.radius,F.shadowMapSize=U.mapSize,F.shadowCameraNear=U.camera.near,F.shadowCameraFar=U.camera.far,a.pointShadow[d]=F,a.pointShadowMap[d]=k,a.pointShadowMatrix[d]=S.shadow.matrix,g++}a.point[d]=z,d++}else if(S.isHemisphereLight){var B=i.get(S);B.skyColor.copy(S.color).multiplyScalar(A*b),B.groundColor.copy(S.groundColor).multiplyScalar(A*b),a.hemi[m]=B,m++}}p>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(a.rectAreaLTC1=Ji.LTC_FLOAT_1,a.rectAreaLTC2=Ji.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(a.rectAreaLTC1=Ji.LTC_HALF_1,a.rectAreaLTC2=Ji.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),a.ambient[0]=s,a.ambient[1]=l,a.ambient[2]=u;var V=a.hash;V.directionalLength===h&&V.pointLength===d&&V.spotLength===f&&V.rectAreaLength===p&&V.hemiLength===m&&V.numDirectionalShadows===v&&V.numPointShadows===g&&V.numSpotShadows===_&&V.numSpotMaps===y||(a.directional.length=h,a.spot.length=f,a.rectArea.length=p,a.point.length=d,a.hemi.length=m,a.directionalShadow.length=v,a.directionalShadowMap.length=v,a.pointShadow.length=g,a.pointShadowMap.length=g,a.spotShadow.length=_,a.spotShadowMap.length=_,a.directionalShadowMatrix.length=v,a.pointShadowMatrix.length=g,a.spotLightMatrix.length=_+y-x,a.spotLightMap.length=y,a.numSpotLightShadowsWithMaps=x,V.directionalLength=h,V.pointLength=d,V.spotLength=f,V.rectAreaLength=p,V.hemiLength=m,V.numDirectionalShadows=v,V.numPointShadows=g,V.numSpotShadows=_,V.numSpotMaps=y,a.version=ao++)},setupView:function(e,t){for(var n=0,i=0,r=0,o=0,c=0,h=t.matrixWorldInverse,d=0,f=e.length;d<f;d++){var p=e[d];if(p.isDirectionalLight){var m=a.directional[n];m.direction.setFromMatrixPosition(p.matrixWorld),s.setFromMatrixPosition(p.target.matrixWorld),m.direction.sub(s),m.direction.transformDirection(h),n++}else if(p.isSpotLight){var v=a.spot[r];v.position.setFromMatrixPosition(p.matrixWorld),v.position.applyMatrix4(h),v.direction.setFromMatrixPosition(p.matrixWorld),s.setFromMatrixPosition(p.target.matrixWorld),v.direction.sub(s),v.direction.transformDirection(h),r++}else if(p.isRectAreaLight){var g=a.rectArea[o];g.position.setFromMatrixPosition(p.matrixWorld),g.position.applyMatrix4(h),u.identity(),l.copy(p.matrixWorld),l.premultiply(h),u.extractRotation(l),g.halfWidth.set(.5*p.width,0,0),g.halfHeight.set(0,.5*p.height,0),g.halfWidth.applyMatrix4(u),g.halfHeight.applyMatrix4(u),o++}else if(p.isPointLight){var _=a.point[i];_.position.setFromMatrixPosition(p.matrixWorld),_.position.applyMatrix4(h),i++}else if(p.isHemisphereLight){var y=a.hemi[c];y.direction.setFromMatrixPosition(p.matrixWorld),y.direction.transformDirection(h),c++}}},state:a}}function lo(e,t){var n=new so(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(e){n.setup(i,e)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function uo(e,t){var n=new WeakMap;return{get:function(i){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=n.get(i);return void 0===o?(r=new lo(e,t),n.set(i,[r])):a>=o.length?(r=new lo(e,t),o.push(r)):r=o[a],r},dispose:function(){n=new WeakMap}}}var co=function(e){"use strict";x(n,e);var t=O(n);function n(e){var i;return o(this,n),(i=t.call(this)).isMeshDepthMaterial=!0,i.type="MeshDepthMaterial",i.depthPacking=3200,i.map=null,i.alphaMap=null,i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.wireframe=!1,i.wireframeLinewidth=1,i.setValues(e),i}return l(n,[{key:"copy",value:function(e){return g(p(n.prototype),"copy",this).call(this,e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}]),n}(qn),ho=function(e){"use strict";x(n,e);var t=O(n);function n(e){var i;return o(this,n),(i=t.call(this)).isMeshDistanceMaterial=!0,i.type="MeshDistanceMaterial",i.referencePosition=new Dt,i.nearDistance=1,i.farDistance=1e3,i.map=null,i.alphaMap=null,i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.setValues(e),i}return l(n,[{key:"copy",value:function(e){return g(p(n.prototype),"copy",this).call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}]),n}(qn);function fo(e,t,n){var i=function(n,i){var r=t.update(g);p.defines.VSM_SAMPLES!==n.blurSamples&&(p.defines.VSM_SAMPLES=n.blurSamples,m.defines.VSM_SAMPLES=n.blurSamples,p.needsUpdate=!0,m.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new kt(o.x,o.y)),p.uniforms.shadow_pass.value=n.map.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,r,p,g,null),m.uniforms.shadow_pass.value=n.mapPass.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,r,m,g,null)},r=function(t,n,i,r,a,o){var s=null,l=!0===i.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(s=void 0!==l?l:!0===i.isPointLight?c:u,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){var d=s.uuid,p=n.uuid,m=h[d];void 0===m&&(m={},h[d]=m);var v=m[p];void 0===v&&(v=s.clone(),m[p]=v),s=v}return s.visible=n.visible,s.wireframe=n.wireframe,s.side=3===o?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:f[n.side],s.alphaMap=n.alphaMap,s.alphaTest=n.alphaTest,s.map=n.map,s.clipShadows=n.clipShadows,s.clippingPlanes=n.clippingPlanes,s.clipIntersection=n.clipIntersection,s.displacementMap=n.displacementMap,s.displacementScale=n.displacementScale,s.displacementBias=n.displacementBias,s.wireframeLinewidth=n.wireframeLinewidth,s.linewidth=n.linewidth,!0===i.isPointLight&&!0===s.isMeshDistanceMaterial&&(s.referencePosition.setFromMatrixPosition(i.matrixWorld),s.nearDistance=r,s.farDistance=a),s},a=new Xi,o=new rt,s=new rt,l=new Et,u=new co({depthPacking:3201}),c=new ho,h={},d=n.maxTextureSize,f={0:1,1:0,2:2},p=new Ri({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new rt},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),m=p.clone();m.defines.HORIZONTAL_PASS=1;var v=new li;v.setAttribute("position",new Jn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var g=new Ai(v,p),_=this;function y(n,i,o,s,l){if(!1!==n.visible){if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===l)&&(!n.frustumCulled||a.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,n.matrixWorld);var u=t.update(n),c=n.material;if(Array.isArray(c))for(var h=u.groups,d=0,f=h.length;d<f;d++){var p=h[d],m=c[p.materialIndex];if(m&&m.visible){var v=r(n,m,s,o.near,o.far,l);e.renderBufferDirect(o,null,u,v,n,p)}}else if(c.visible){var g=r(n,c,s,o.near,o.far,l);e.renderBufferDirect(o,null,u,g,n,null)}}for(var _=n.children,x=0,b=_.length;x<b;x++)y(_[x],i,o,s,l)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,r){if(!1!==_.enabled&&(!1!==_.autoUpdate||!1!==_.needsUpdate)&&0!==t.length){var u=e.getRenderTarget(),c=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),f=e.state;f.setBlending(0),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(var p=0,m=t.length;p<m;p++){var v=t[p],g=v.shadow;if(void 0!==g){if(!1!==g.autoUpdate||!1!==g.needsUpdate){o.copy(g.mapSize);var x=g.getFrameExtents();if(o.multiply(x),s.copy(g.mapSize),(o.x>d||o.y>d)&&(o.x>d&&(s.x=Math.floor(d/x.x),o.x=s.x*x.x,g.mapSize.x=s.x),o.y>d&&(s.y=Math.floor(d/x.y),o.y=s.y*x.y,g.mapSize.y=s.y)),null===g.map){var b=3!==this.type?{minFilter:q,magFilter:q}:{};g.map=new kt(o.x,o.y,b),g.map.texture.name=v.name+".shadowMap",g.camera.updateProjectionMatrix()}e.setRenderTarget(g.map),e.clear();for(var w=g.getViewportCount(),M=0;M<w;M++){var S=g.getViewport(M);l.set(s.x*S.x,s.y*S.y,s.x*S.z,s.y*S.w),f.viewport(l),g.updateMatrices(v,M),a=g.getFrustum(),y(n,r,g.camera,v,this.type)}!0!==g.isPointLightShadow&&3===this.type&&i(g,r),g.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",v,"has no shadow.")}_.needsUpdate=!1,e.setRenderTarget(u,c,h)}}}function po(e,t,n){var i=function(t,n,i){var r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(var o=0;o<i;o++)e.texImage2D(n+o,0,6408,1,1,0,6408,5121,r);return a},r=function(t){!0!==g[t]&&(e.enable(t),g[t]=!0)},a=function(t){!1!==g[t]&&(e.disable(t),g[t]=!1)},o=function(t,n,i,o,s,l,u,c){if(0!==t){if(!1===w&&(r(3042),w=!0),5===t)s=s||n,l=l||i,u=u||o,n===S&&s===E||(e.blendEquationSeparate(Z[n],Z[s]),S=n,E=s),i===T&&o===A&&l===k&&u===C||(e.blendFuncSeparate(K[i],K[o],K[l],K[u]),T=i,A=o,k=l,C=u),M=t,L=!1;else if(t!==M||c!==L){if(S===U&&E===U||(e.blendEquation(32774),S=U,E=U),c)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}T=null,A=null,k=null,C=null,M=t,L=c}}else!0===w&&(a(3042),w=!1)},s=function(t){P!==t&&(t?e.frontFace(2304):e.frontFace(2305),P=t)},l=function(t){0!==t?(r(2884),t!==D&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):a(2884),D=t},u=function(t,n,i){t?(r(32823),I===n&&O===i||(e.polygonOffset(n,i),I=n,O=i)):a(32823)},c=n.isWebGL2,h=new function(){var t=!1,n=new Et,i=null,r=new Et(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,o,s){!0===s&&(t*=o,i*=o,a*=o),n.set(t,i,a,o),!1===r.equals(n)&&(e.clearColor(t,i,a,o),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},f=new function(){var t=!1,n=null,i=null,o=null;return{setTest:function(e){e?r(2929):a(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}i=t}},setLocked:function(e){t=e},setClear:function(t){o!==t&&(e.clearDepth(t),o=t)},reset:function(){t=!1,n=null,i=null,o=null}}},p=new function(){var t=!1,n=null,i=null,o=null,s=null,l=null,u=null,c=null,h=null;return{setTest:function(e){t||(e?r(2960):a(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,r){i===t&&o===n&&s===r||(e.stencilFunc(t,n,r),i=t,o=n,s=r)},setOp:function(t,n,i){l===t&&u===n&&c===i||(e.stencilOp(t,n,i),l=t,u=n,c=i)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,n=null,i=null,o=null,s=null,l=null,u=null,c=null,h=null}}},m=new WeakMap,v=new WeakMap,g={},_={},y=new WeakMap,x=[],b=null,w=!1,M=null,S=null,T=null,A=null,E=null,k=null,C=null,L=!1,P=null,D=null,R=null,I=null,O=null,N=e.getParameter(35661),z=!1,F=0,B=e.getParameter(7938);-1!==B.indexOf("WebGL")?(F=parseFloat(/^WebGL (\d)/.exec(B)[1]),z=F>=1):-1!==B.indexOf("OpenGL ES")&&(F=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),z=F>=2);var V,H=null,G={},W=e.getParameter(3088),j=e.getParameter(2978),X=(new Et).fromArray(W),q=(new Et).fromArray(j),Y={};Y[3553]=i(3553,3553,1),Y[34067]=i(34067,34069,6),h.setClear(0,0,0,1),f.setClear(1),p.setClear(0),r(2929),f.setFunc(3),s(!1),l(1),r(2884),o(0);var $,Z=(d(V={},U,32774),d(V,101,32778),d(V,102,32779),V);if(c)Z[103]=32775,Z[104]=32776;else{var J=t.get("EXT_blend_minmax");null!==J&&(Z[103]=J.MIN_EXT,Z[104]=J.MAX_EXT)}var K=(d($={},200,0),d($,201,1),d($,202,768),d($,204,770),d($,210,776),d($,208,774),d($,206,772),d($,203,769),d($,205,771),d($,209,775),d($,207,773),$);return{buffers:{color:h,depth:f,stencil:p},enable:r,disable:a,bindFramebuffer:function(t,n){return _[t]!==n&&(e.bindFramebuffer(t,n),_[t]=n,c&&(36009===t&&(_[36160]=n),36160===t&&(_[36009]=n)),!0)},drawBuffers:function(i,r){var a=x,o=!1;if(i)if(a=y.get(r),void 0===a&&(a=[],y.set(r,a)),i.isWebGLMultipleRenderTargets){var s=i.texture;if(a.length!==s.length||36064!==a[0]){for(var l=0,u=s.length;l<u;l++)a[l]=36064+l;a.length=s.length,o=!0}}else 36064!==a[0]&&(a[0]=36064,o=!0);else 1029!==a[0]&&(a[0]=1029,o=!0);o&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return b!==t&&(e.useProgram(t),b=t,!0)},setBlending:o,setMaterial:function(e,t){2===e.side?a(2884):r(2884);var n=1===e.side;t&&(n=!n),s(n),1===e.blending&&!1===e.transparent?o(0):o(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),f.setFunc(e.depthFunc),f.setTest(e.depthTest),f.setMask(e.depthWrite),h.setMask(e.colorWrite);var i=e.stencilWrite;p.setTest(i),i&&(p.setMask(e.stencilWriteMask),p.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),p.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),u(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?r(32926):a(32926)},setFlipSided:s,setCullFace:l,setLineWidth:function(t){t!==R&&(z&&e.lineWidth(t),R=t)},setPolygonOffset:u,setScissorTest:function(e){e?r(3089):a(3089)},activeTexture:function(t){void 0===t&&(t=33984+N-1),H!==t&&(e.activeTexture(t),H=t)},bindTexture:function(t,n,i){void 0===i&&(i=null===H?33984+N-1:H);var r=G[i];void 0===r&&(r={type:void 0,texture:void 0},G[i]=r),r.type===t&&r.texture===n||(H!==i&&(e.activeTexture(i),H=i),e.bindTexture(t,n||Y[t]),r.type=t,r.texture=n)},unbindTexture:function(){var t=G[H];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){var i=v.get(n);void 0===i&&(i=new WeakMap,v.set(n,i));var r=i.get(t);void 0===r&&(r=e.getUniformBlockIndex(n,t.name),i.set(t,r))},uniformBlockBinding:function(t,n){var i=v.get(n).get(t);m.get(t)!==i&&(e.uniformBlockBinding(n,i,t.__bindingPointIndex),m.set(t,i))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===X.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),X.copy(t))},viewport:function(t){!1===q.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),q.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===c&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),g={},H=null,G={},_={},y=new WeakMap,x=[],b=null,w=!1,M=null,S=null,T=null,A=null,E=null,k=null,C=null,L=!1,P=null,D=null,R=null,I=null,O=null,X.set(0,0,e.canvas.width,e.canvas.height),q.set(0,0,e.canvas.width,e.canvas.height),h.reset(),f.reset(),p.reset()}}}function mo(e,t,n,i,r,a,o){var s,l=function(e,t){return F?new OffscreenCanvas(e,t):ut("canvas")},u=function(e,t,n,i){var r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){var a=t?tt:Math.floor,o=a(r*e.width),u=a(r*e.height);void 0===s&&(s=l(o,u));var c=n?l(o,u):s;return c.width=o,c.height=u,c.getContext("2d").drawImage(e,0,0,o,u),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+u+")."),c}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e},c=function(e){return et(e.width)&&et(e.height)},h=function(e,t){return e.generateMipmaps&&t&&e.minFilter!==q&&e.minFilter!==Z},f=function(t){e.generateMipmap(t)},p=function(n,i,r,a){var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!1===L)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}var s=i;return 6403===i&&(5126===r&&(s=33326),5131===r&&(s=33325),5121===r&&(s=33321)),33319===i&&(5126===r&&(s=33328),5131===r&&(s=33327),5121===r&&(s=33323)),6408===i&&(5126===r&&(s=34836),5131===r&&(s=34842),5121===r&&(s=a===Fe&&!1===o?35907:32856),32819===r&&(s=32854),32820===r&&(s=32855)),33325!==s&&33326!==s&&33327!==s&&33328!==s&&34842!==s&&34836!==s||t.get("EXT_color_buffer_float"),s},m=function(e,t,n){return!0===h(e,n)||e.isFramebufferTexture&&e.minFilter!==q&&e.minFilter!==Z?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1},v=function(e){return e===q||e===Y||e===$?9728:9729},g=function(t){var n=i.get(t);e.deleteTexture(n.__webglTexture);var r=t.source;delete U.get(r)[n.__cacheKey],o.memory.textures--},_=function(e,t){var r=i.get(e);if(e.isVideoTexture&&k(e),!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version){var a=e.image;if(null===a)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==a.complete)return void b(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(3553,r.__webglTexture,33984+t)},y=function(n,a,o){if(o?(e.texParameteri(n,10242,le[a.wrapS]),e.texParameteri(n,10243,le[a.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,le[a.wrapR]),e.texParameteri(n,10240,ue[a.magFilter]),e.texParameteri(n,10241,ue[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),a.wrapS===j&&a.wrapT===j||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,v(a.magFilter)),e.texParameteri(n,10241,v(a.minFilter)),a.minFilter!==q&&a.minFilter!==Z&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){var s=t.get("EXT_texture_filter_anisotropic");if(a.type===te&&!1===t.has("OES_texture_float_linear"))return;if(!1===L&&a.type===ne&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(e.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}},x=function(t,n){var i=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",B));var r=n.source,a=U.get(r);void 0===a&&(a={},U.set(r,a));var s=function(e){var t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(n);if(s!==t.__cacheKey){void 0===a[s]&&(a[s]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,i=!0),a[s].usedTimes++;var l=a[t.__cacheKey];void 0!==l&&(a[t.__cacheKey].usedTimes--,0===l.usedTimes&&g(n)),t.__cacheKey=s,t.__webglTexture=a[s].texture}return i},b=function(t,r,o){var s=3553;(r.isDataArrayTexture||r.isCompressedArrayTexture)&&(s=35866),r.isData3DTexture&&(s=32879);var l=x(t,r),d=r.source;n.bindTexture(s,t.__webglTexture,33984+o);var v=i.get(d);if(d.version!==v.__version||!0===l){n.activeTexture(33984+o),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);var g=function(e){return!L&&(e.wrapS!==j||e.wrapT!==j||e.minFilter!==q&&e.minFilter!==Z)}(r)&&!1===c(r.image),_=u(r.image,g,!1,R);_=C(r,_);var b,w=c(_)||L,M=a.convert(r.format,r.encoding),S=a.convert(r.type),T=p(r.internalFormat,M,S,r.encoding,r.isVideoTexture);y(s,r,w);var A=r.mipmaps,E=L&&!0!==r.isVideoTexture,k=void 0===v.__version||!0===l,P=m(r,_,w);if(r.isDepthTexture)T=6402,L?T=r.type===te?36012:r.type===ee?33190:r.type===ie?35056:33189:r.type===te&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===ae&&6402===T&&r.type!==Q&&r.type!==ee&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=ee,S=a.convert(r.type)),r.format===oe&&6402===T&&(T=34041,r.type!==ie&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=ie,S=a.convert(r.type))),k&&(E?n.texStorage2D(3553,1,T,_.width,_.height):n.texImage2D(3553,0,T,_.width,_.height,0,M,S,null));else if(r.isDataTexture)if(A.length>0&&w){E&&k&&n.texStorage2D(3553,P,T,A[0].width,A[0].height);for(var D=0,I=A.length;D<I;D++)b=A[D],E?n.texSubImage2D(3553,D,0,0,b.width,b.height,M,S,b.data):n.texImage2D(3553,D,T,b.width,b.height,0,M,S,b.data);r.generateMipmaps=!1}else E?(k&&n.texStorage2D(3553,P,T,_.width,_.height),n.texSubImage2D(3553,0,0,0,_.width,_.height,M,S,_.data)):n.texImage2D(3553,0,T,_.width,_.height,0,M,S,_.data);else if(r.isCompressedTexture)if(r.isCompressedArrayTexture){E&&k&&n.texStorage3D(35866,P,T,A[0].width,A[0].height,_.depth);for(var O=0,N=A.length;O<N;O++)b=A[O],r.format!==re?null!==M?E?n.compressedTexSubImage3D(35866,O,0,0,0,b.width,b.height,_.depth,M,b.data,0,0):n.compressedTexImage3D(35866,O,T,b.width,b.height,_.depth,0,b.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):E?n.texSubImage3D(35866,O,0,0,0,b.width,b.height,_.depth,M,S,b.data):n.texImage3D(35866,O,T,b.width,b.height,_.depth,0,M,S,b.data)}else{E&&k&&n.texStorage2D(3553,P,T,A[0].width,A[0].height);for(var z=0,U=A.length;z<U;z++)b=A[z],r.format!==re?null!==M?E?n.compressedTexSubImage2D(3553,z,0,0,b.width,b.height,M,b.data):n.compressedTexImage2D(3553,z,T,b.width,b.height,0,b.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):E?n.texSubImage2D(3553,z,0,0,b.width,b.height,M,S,b.data):n.texImage2D(3553,z,T,b.width,b.height,0,M,S,b.data)}else if(r.isDataArrayTexture)E?(k&&n.texStorage3D(35866,P,T,_.width,_.height,_.depth),n.texSubImage3D(35866,0,0,0,0,_.width,_.height,_.depth,M,S,_.data)):n.texImage3D(35866,0,T,_.width,_.height,_.depth,0,M,S,_.data);else if(r.isData3DTexture)E?(k&&n.texStorage3D(32879,P,T,_.width,_.height,_.depth),n.texSubImage3D(32879,0,0,0,0,_.width,_.height,_.depth,M,S,_.data)):n.texImage3D(32879,0,T,_.width,_.height,_.depth,0,M,S,_.data);else if(r.isFramebufferTexture){if(k)if(E)n.texStorage2D(3553,P,T,_.width,_.height);else for(var F=_.width,B=_.height,V=0;V<P;V++)n.texImage2D(3553,V,T,F,B,0,M,S,null),F>>=1,B>>=1}else if(A.length>0&&w){E&&k&&n.texStorage2D(3553,P,T,A[0].width,A[0].height);for(var H=0,G=A.length;H<G;H++)b=A[H],E?n.texSubImage2D(3553,H,0,0,M,S,b):n.texImage2D(3553,H,T,M,S,b);r.generateMipmaps=!1}else E?(k&&n.texStorage2D(3553,P,T,_.width,_.height),n.texSubImage2D(3553,0,0,0,M,S,_)):n.texImage2D(3553,0,T,M,S,_);h(r,w)&&f(s),v.__version=d.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version},w=function(t,r,o){if(6===r.image.length){var s=x(t,r),l=r.source;n.bindTexture(34067,t.__webglTexture,33984+o);var d=i.get(l);if(l.version!==d.__version||!0===s){n.activeTexture(33984+o),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);for(var v=r.isCompressedTexture||r.image[0].isCompressedTexture,g=r.image[0]&&r.image[0].isDataTexture,_=[],b=0;b<6;b++)_[b]=v||g?g?r.image[b].image:r.image[b]:u(r.image[b],!1,!0,D),_[b]=C(r,_[b]);var w,M=_[0],S=c(M)||L,T=a.convert(r.format,r.encoding),A=a.convert(r.type),E=p(r.internalFormat,T,A,r.encoding),k=L&&!0!==r.isVideoTexture,P=void 0===d.__version||!0===s,R=m(r,M,S);if(y(34067,r,S),v){k&&P&&n.texStorage2D(34067,R,E,M.width,M.height);for(var I=0;I<6;I++){w=_[I].mipmaps;for(var O=0;O<w.length;O++){var N=w[O];r.format!==re?null!==T?k?n.compressedTexSubImage2D(34069+I,O,0,0,N.width,N.height,T,N.data):n.compressedTexImage2D(34069+I,O,E,N.width,N.height,0,N.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):k?n.texSubImage2D(34069+I,O,0,0,N.width,N.height,T,A,N.data):n.texImage2D(34069+I,O,E,N.width,N.height,0,T,A,N.data)}}}else{w=r.mipmaps,k&&P&&(w.length>0&&R++,n.texStorage2D(34067,R,E,_[0].width,_[0].height));for(var z=0;z<6;z++)if(g){k?n.texSubImage2D(34069+z,0,0,0,_[z].width,_[z].height,T,A,_[z].data):n.texImage2D(34069+z,0,E,_[z].width,_[z].height,0,T,A,_[z].data);for(var U=0;U<w.length;U++){var F=w[U].image[z].image;k?n.texSubImage2D(34069+z,U+1,0,0,F.width,F.height,T,A,F.data):n.texImage2D(34069+z,U+1,E,F.width,F.height,0,T,A,F.data)}}else{k?n.texSubImage2D(34069+z,0,0,0,T,A,_[z]):n.texImage2D(34069+z,0,E,T,A,_[z]);for(var B=0;B<w.length;B++){var V=w[B];k?n.texSubImage2D(34069+z,B+1,0,0,T,A,V.image[z]):n.texImage2D(34069+z,B+1,E,T,A,V.image[z])}}}h(r,S)&&f(34067),d.__version=l.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}},M=function(t,r,o,s,l){var u=a.convert(o.format,o.encoding),c=a.convert(o.type),h=p(o.internalFormat,u,c,o.encoding);i.get(r).__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,h,r.width,r.height,r.depth,0,u,c,null):n.texImage2D(l,0,h,r.width,r.height,0,u,c,null)),n.bindFramebuffer(36160,t),E(r)?O.framebufferTexture2DMultisampleEXT(36160,s,l,i.get(o).__webglTexture,0,A(r)):(3553===l||l>=34069&&l<=34074)&&e.framebufferTexture2D(36160,s,l,i.get(o).__webglTexture,0),n.bindFramebuffer(36160,null)},S=function(t,n,i){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){var r=33189;if(i||E(n)){var o=n.depthTexture;o&&o.isDepthTexture&&(o.type===te?r=36012:o.type===ee&&(r=33190));var s=A(n);E(n)?O.renderbufferStorageMultisampleEXT(36161,s,r,n.width,n.height):e.renderbufferStorageMultisample(36161,s,r,n.width,n.height)}else e.renderbufferStorage(36161,r,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){var l=A(n);i&&!1===E(n)?e.renderbufferStorageMultisample(36161,l,35056,n.width,n.height):E(n)?O.renderbufferStorageMultisampleEXT(36161,l,35056,n.width,n.height):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else for(var u=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture],c=0;c<u.length;c++){var h=u[c],d=a.convert(h.format,h.encoding),f=a.convert(h.type),m=p(h.internalFormat,d,f,h.encoding),v=A(n);i&&!1===E(n)?e.renderbufferStorageMultisample(36161,v,m,n.width,n.height):E(n)?O.renderbufferStorageMultisampleEXT(36161,v,m,n.width,n.height):e.renderbufferStorage(36161,m,n.width,n.height)}e.bindRenderbuffer(36161,null)},T=function(t){var r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),_(r.depthTexture,0);var a=i.get(r.depthTexture).__webglTexture,o=A(r);if(r.depthTexture.format===ae)E(r)?O.framebufferTexture2DMultisampleEXT(36160,36096,3553,a,0,o):e.framebufferTexture2D(36160,36096,3553,a,0);else{if(r.depthTexture.format!==oe)throw new Error("Unknown depthTexture format");E(r)?O.framebufferTexture2DMultisampleEXT(36160,33306,3553,a,0,o):e.framebufferTexture2D(36160,33306,3553,a,0)}}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(var o=0;o<6;o++)n.bindFramebuffer(36160,r.__webglFramebuffer[o]),r.__webglDepthbuffer[o]=e.createRenderbuffer(),S(r.__webglDepthbuffer[o],t,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),S(r.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)},A=function(e){return Math.min(I,e.samples)},E=function(e){var n=i.get(e);return L&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture},k=function(e){var t=o.render.frame;z.get(e)!==t&&(z.set(e,t),e.update())},C=function(e,n){var i=e.encoding,r=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===je||i!==Ue&&(i===Fe?!1===L?!0===t.has("EXT_sRGB")&&r===re?(e.format=je,e.minFilter=Z,e.generateMipmaps=!1):n=wt.sRGBToLinear(n):r===re&&a===K||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",i)),n},L=r.isWebGL2,P=r.maxTextures,D=r.maxCubemapSize,R=r.maxTextureSize,I=r.maxSamples,O=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,N="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),z=new WeakMap,U=new WeakMap,F=!1;try{F="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function B(e){var t=e.target;t.removeEventListener("dispose",B),function(e){var t=i.get(e);if(void 0!==t.__webglInit){var n=e.source,r=U.get(n);if(r){var a=r[t.__cacheKey];a.usedTimes--,0===a.usedTimes&&g(e),0===Object.keys(r).length&&U.delete(n)}i.remove(e)}}(t),t.isVideoTexture&&z.delete(t)}function V(t){var n=t.target;n.removeEventListener("dispose",V),function(t){var n=t.texture,r=i.get(t),a=i.get(n);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),o.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(var s=0;s<6;s++)e.deleteFramebuffer(r.__webglFramebuffer[s]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[s]);else{if(e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(var l=0;l<r.__webglColorRenderbuffer.length;l++)r.__webglColorRenderbuffer[l]&&e.deleteRenderbuffer(r.__webglColorRenderbuffer[l]);r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(var u=0,c=n.length;u<c;u++){var h=i.get(n[u]);h.__webglTexture&&(e.deleteTexture(h.__webglTexture),o.memory.textures--),i.remove(n[u])}i.remove(n),i.remove(t)}(n)}var H,G,se=0,le=(d(H={},W,10497),d(H,j,33071),d(H,X,33648),H),ue=(d(G={},q,9728),d(G,Y,9984),d(G,$,9986),d(G,Z,9729),d(G,1007,9985),d(G,J,9987),G);this.allocateTextureUnit=function(){var e=se;return e>=P&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+P),se+=1,e},this.resetTextureUnits=function(){se=0},this.setTexture2D=_,this.setTexture2DArray=function(e,t){var r=i.get(e);e.version>0&&r.__version!==e.version?b(r,e,t):n.bindTexture(35866,r.__webglTexture,33984+t)},this.setTexture3D=function(e,t){var r=i.get(e);e.version>0&&r.__version!==e.version?b(r,e,t):n.bindTexture(32879,r.__webglTexture,33984+t)},this.setTextureCube=function(e,t){var r=i.get(e);e.version>0&&r.__version!==e.version?w(r,e,t):n.bindTexture(34067,r.__webglTexture,33984+t)},this.rebindTextures=function(e,t,n){var r=i.get(e);void 0!==t&&M(r.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&T(e)},this.setupRenderTarget=function(t){var s=t.texture,l=i.get(t),u=i.get(s);t.addEventListener("dispose",V),!0!==t.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=e.createTexture()),u.__version=s.version,o.memory.textures++);var d=!0===t.isWebGLCubeRenderTarget,m=!0===t.isWebGLMultipleRenderTargets,v=c(t)||L;if(d){l.__webglFramebuffer=[];for(var g=0;g<6;g++)l.__webglFramebuffer[g]=e.createFramebuffer()}else{if(l.__webglFramebuffer=e.createFramebuffer(),m)if(r.drawBuffers)for(var _=t.texture,x=0,b=_.length;x<b;x++){var w=i.get(_[x]);void 0===w.__webglTexture&&(w.__webglTexture=e.createTexture(),o.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(L&&t.samples>0&&!1===E(t)){var k=m?s:[s];l.__webglMultisampledFramebuffer=e.createFramebuffer(),l.__webglColorRenderbuffer=[],n.bindFramebuffer(36160,l.__webglMultisampledFramebuffer);for(var C=0;C<k.length;C++){var P=k[C];l.__webglColorRenderbuffer[C]=e.createRenderbuffer(),e.bindRenderbuffer(36161,l.__webglColorRenderbuffer[C]);var D=a.convert(P.format,P.encoding),R=a.convert(P.type),I=p(P.internalFormat,D,R,P.encoding,!0===t.isXRRenderTarget),O=A(t);e.renderbufferStorageMultisample(36161,O,I,t.width,t.height),e.framebufferRenderbuffer(36160,36064+C,36161,l.__webglColorRenderbuffer[C])}e.bindRenderbuffer(36161,null),t.depthBuffer&&(l.__webglDepthRenderbuffer=e.createRenderbuffer(),S(l.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}}if(d){n.bindTexture(34067,u.__webglTexture),y(34067,s,v);for(var N=0;N<6;N++)M(l.__webglFramebuffer[N],t,s,36064,34069+N);h(s,v)&&f(34067),n.unbindTexture()}else if(m){for(var z=t.texture,U=0,F=z.length;U<F;U++){var B=z[U],H=i.get(B);n.bindTexture(3553,H.__webglTexture),y(3553,B,v),M(l.__webglFramebuffer,t,B,36064+U,3553),h(B,v)&&f(3553)}n.unbindTexture()}else{var G=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(L?G=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(G,u.__webglTexture),y(G,s,v),M(l.__webglFramebuffer,t,s,36064,G),h(s,v)&&f(G),n.unbindTexture()}t.depthBuffer&&T(t)},this.updateRenderTargetMipmap=function(e){for(var t=c(e)||L,r=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture],a=0,o=r.length;a<o;a++){var s=r[a];if(h(s,t)){var l=e.isWebGLCubeRenderTarget?34067:3553,u=i.get(s).__webglTexture;n.bindTexture(l,u),f(l),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(L&&t.samples>0&&!1===E(t)){var r=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,o=t.height,s=16384,l=[],u=t.stencilBuffer?33306:36096,c=i.get(t),h=!0===t.isWebGLMultipleRenderTargets;if(h)for(var d=0;d<r.length;d++)n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+d,36161,null),n.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+d,3553,null,0);n.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,c.__webglFramebuffer);for(var f=0;f<r.length;f++){l.push(36064+f),t.depthBuffer&&l.push(u);var p=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===p&&(t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024)),h&&e.framebufferRenderbuffer(36008,36064,36161,c.__webglColorRenderbuffer[f]),!0===p&&(e.invalidateFramebuffer(36008,[u]),e.invalidateFramebuffer(36009,[u])),h){var m=i.get(r[f]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,m,0)}e.blitFramebuffer(0,0,a,o,0,0,a,o,s,9728),N&&e.invalidateFramebuffer(36008,l)}if(n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),h)for(var v=0;v<r.length;v++){n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+v,36161,c.__webglColorRenderbuffer[v]);var g=i.get(r[v]).__webglTexture;n.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+v,3553,g,0)}n.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=T,this.setupFrameBufferTexture=M,this.useMultisampledRTT=E}function vo(e,t,n){var i=n.isWebGL2;return{convert:function(n){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(n===K)return 5121;if(1017===n)return 32819;if(1018===n)return 32820;if(1010===n)return 5120;if(1011===n)return 5122;if(n===Q)return 5123;if(1013===n)return 5124;if(n===ee)return 5125;if(n===te)return 5126;if(n===ne)return i?5131:null!==(r=t.get("OES_texture_half_float"))?r.HALF_FLOAT_OES:null;if(1021===n)return 6406;if(n===re)return 6408;if(1024===n)return 6409;if(1025===n)return 6410;if(n===ae)return 6402;if(n===oe)return 34041;if(1022===n)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===je)return null!==(r=t.get("EXT_sRGB"))?r.SRGB_ALPHA_EXT:null;if(1028===n)return 6403;if(1029===n)return 36244;if(1030===n)return 33319;if(1031===n)return 33320;if(1033===n)return 36249;if(n===se||n===le||n===ue||n===ce)if(a===Fe){if(null===(r=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(n===se)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===le)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===ue)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ce)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(r=t.get("WEBGL_compressed_texture_s3tc")))return null;if(n===se)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===le)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===ue)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ce)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===he||n===de||n===fe||n===pe){if(null===(r=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(n===he)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===de)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===fe)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===pe)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return null!==(r=t.get("WEBGL_compressed_texture_etc1"))?r.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===me||n===ve){if(null===(r=t.get("WEBGL_compressed_texture_etc")))return null;if(n===me)return a===Fe?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===ve)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(n===ge||n===_e||n===ye||n===xe||n===be||n===we||n===Me||n===Se||n===Te||n===Ae||n===Ee||n===ke||n===Ce||n===Le){if(null===(r=t.get("WEBGL_compressed_texture_astc")))return null;if(n===ge)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===_e)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ye)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===xe)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===be)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===we)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Me)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Se)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Te)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Ae)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ee)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===ke)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Ce)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Le)return a===Fe?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Pe){if(null===(r=t.get("EXT_texture_compression_bptc")))return null;if(n===Pe)return a===Fe?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}return n===ie?i?34042:null!==(r=t.get("WEBGL_depth_texture"))?r.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[n]?e[n]:null}}}var go=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return o(this,n),(e=t.call(this)).isArrayCamera=!0,e.cameras=i,e}return n}(Oi),_o=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;return o(this,n),(e=t.call(this)).isGroup=!0,e.type="Group",e}return n}(In),yo={type:"move"},xo=function(){"use strict";function e(){o(this,e),this._targetRay=null,this._grip=null,this._hand=null}return l(e,[{key:"getHandSpace",value:function(){return null===this._hand&&(this._hand=new _o,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}},{key:"getTargetRaySpace",value:function(){return null===this._targetRay&&(this._targetRay=new _o,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Dt,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Dt),this._targetRay}},{key:"getGripSpace",value:function(){return null===this._grip&&(this._grip=new _o,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Dt,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Dt),this._grip}},{key:"dispatchEvent",value:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}},{key:"connect",value:function(e){if(e&&e.hand){var t=this._hand,n=!0,i=!1,r=void 0;if(t)try{for(var a,o=e.hand.values()[Symbol.iterator]();!(n=(a=o.next()).done);n=!0){var s=a.value;this._getHandJoint(t,s)}}catch(e){i=!0,r=e}finally{try{n||null==o.return||o.return()}finally{if(i)throw r}}}return this.dispatchEvent({type:"connected",data:e}),this}},{key:"disconnect",value:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}},{key:"update",value:function(e,t,n){var i=null,r=null,a=null,o=this._targetRay,s=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){a=!0;var u=!0,c=!1,h=void 0;try{for(var d,f=e.hand.values()[Symbol.iterator]();!(u=(d=f.next()).done);u=!0){var p=d.value,m=t.getJointPose(p,n),v=this._getHandJoint(l,p);null!==m&&(v.matrix.fromArray(m.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=m.radius),v.visible=null!==m}}catch(e){c=!0,h=e}finally{try{u||null==f.return||f.return()}finally{if(c)throw h}}var g=l.joints["index-finger-tip"],_=l.joints["thumb-tip"],y=g.position.distanceTo(_.position);l.inputState.pinching&&y>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&y<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,n))&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1);null!==o&&(null===(i=t.getPose(e.targetRaySpace,n))&&null!==r&&(i=r),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(yo)))}return null!==o&&(o.visible=null!==i),null!==s&&(s.visible=null!==r),null!==l&&(l.visible=null!==a),this}},{key:"_getHandJoint",value:function(e,t){if(void 0===e.joints[t.jointName]){var n=new _o;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}]),e}(),bo=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a,s,l,u,c,h,d){var f;if(o(this,n),(d=void 0!==d?d:ae)!==ae&&d!==oe)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");return void 0===r&&d===ae&&(r=ee),void 0===r&&d===oe&&(r=ie),(f=t.call(this,null,a,s,l,u,c,d,r,h)).isDepthTexture=!0,f.image={width:e,height:i},f.magFilter=void 0!==u?u:q,f.minFilter=void 0!==c?c:q,f.flipY=!1,f.generateMipmaps=!1,f}return n}(At),wo=function(e){"use strict";x(n,e);var t=O(n);function n(e,i){var r;o(this,n);var a=function(e){var t=A.indexOf(e.inputSource);if(-1!==t){var n=T[t];void 0!==n&&n.dispatchEvent({type:e.type,data:e.inputSource})}},s=function(e){for(var t=0;t<e.removed.length;t++){var n=e.removed[t],i=A.indexOf(n);i>=0&&(A[i]=null,T[i].disconnect(n))}for(var r=0;r<e.added.length;r++){var a=e.added[r],o=A.indexOf(a);if(-1===o){for(var s=0;s<T.length;s++){if(s>=A.length){A.push(a),o=s;break}if(null===A[s]){A[s]=a,o=s;break}}if(-1===o)break}var l=T[o];l&&l.connect(a)}},l=function(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()},c=u(r=t.call(this)),d=null,f=1,p=null,m="local-floor",v=null,g=null,_=null,y=null,x=null,b=null,w=i.getContextAttributes(),M=null,S=null,T=[],A=[],E=new Set,k=new Map,C=new Oi;C.layers.enable(1),C.viewport=new Et;var L=new Oi;L.layers.enable(2),L.viewport=new Et;var P=[C,L],D=new go;D.layers.enable(1),D.layers.enable(2);var R,I=null,O=null;function z(){d.removeEventListener("select",a),d.removeEventListener("selectstart",a),d.removeEventListener("selectend",a),d.removeEventListener("squeeze",a),d.removeEventListener("squeezestart",a),d.removeEventListener("squeezeend",a),d.removeEventListener("end",z),d.removeEventListener("inputsourceschange",s);for(var t=0;t<T.length;t++){var n=A[t];null!==n&&(A[t]=null,T[t].disconnect(n))}I=null,O=null,e.setRenderTarget(M),x=null,y=null,_=null,d=null,S=null,V.stop(),c.isPresenting=!1,c.dispatchEvent({type:"sessionend"})}r.cameraAutoUpdate=!0,r.enabled=!1,r.isPresenting=!1,r.getController=function(e){var t=T[e];return void 0===t&&(t=new xo,T[e]=t),t.getTargetRaySpace()},r.getControllerGrip=function(e){var t=T[e];return void 0===t&&(t=new xo,T[e]=t),t.getGripSpace()},r.getHand=function(e){var t=T[e];return void 0===t&&(t=new xo,T[e]=t),t.getHandSpace()},r.setFramebufferScaleFactor=function(e){f=e,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},r.setReferenceSpaceType=function(e){m=e,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},r.getReferenceSpace=function(){return v||p},r.setReferenceSpace=function(e){v=e},r.getBaseLayer=function(){return null!==y?y:x},r.getBinding=function(){return _},r.getFrame=function(){return b},r.getSession=function(){return d},r.setSession=(R=h((function(t){var n,r,o,l,u;return N(this,(function(h){switch(h.label){case 0:return null===(d=t)?[3,4]:(M=e.getRenderTarget(),d.addEventListener("select",a),d.addEventListener("selectstart",a),d.addEventListener("selectend",a),d.addEventListener("squeeze",a),d.addEventListener("squeezestart",a),d.addEventListener("squeezeend",a),d.addEventListener("end",z),d.addEventListener("inputsourceschange",s),!0===w.xrCompatible?[3,2]:[4,i.makeXRCompatible()]);case 1:h.sent(),h.label=2;case 2:return void 0===d.renderState.layers||!1===e.capabilities.isWebGL2?(n={antialias:void 0!==d.renderState.layers||w.antialias,alpha:w.alpha,depth:w.depth,stencil:w.stencil,framebufferScaleFactor:f},x=new XRWebGLLayer(d,i,n),d.updateRenderState({baseLayer:x}),S=new kt(x.framebufferWidth,x.framebufferHeight,{format:re,type:K,encoding:e.outputEncoding,stencilBuffer:w.stencil})):(r=null,o=null,l=null,w.depth&&(l=w.stencil?35056:33190,r=w.stencil?oe:ae,o=w.stencil?ie:ee),u={colorFormat:32856,depthFormat:l,scaleFactor:f},_=new XRWebGLBinding(d,i),y=_.createProjectionLayer(u),d.updateRenderState({layers:[y]}),S=new kt(y.textureWidth,y.textureHeight,{format:re,type:K,depthTexture:new bo(y.textureWidth,y.textureHeight,o,void 0,void 0,void 0,void 0,void 0,void 0,r),stencilBuffer:w.stencil,encoding:e.outputEncoding,samples:w.antialias?4:0}),e.properties.get(S).__ignoreDepthValues=y.ignoreDepthValues),S.isXRRenderTarget=!0,this.setFoveation(1),v=null,[4,d.requestReferenceSpace(m)];case 3:p=h.sent(),V.setContext(d),V.start(),c.isPresenting=!0,c.dispatchEvent({type:"sessionstart"}),h.label=4;case 4:return[2]}}))})),function(e){return R.apply(this,arguments)});var U=new Dt,F=new Dt;r.updateCamera=function(e){if(null!==d){D.near=L.near=C.near=e.near,D.far=L.far=C.far=e.far,I===D.near&&O===D.far||(d.updateRenderState({depthNear:D.near,depthFar:D.far}),I=D.near,O=D.far);var t=e.parent,n=D.cameras;l(D,t);for(var i=0;i<n.length;i++)l(n[i],t);D.matrixWorld.decompose(D.position,D.quaternion,D.scale),e.matrix.copy(D.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);for(var r=e.children,a=0,o=r.length;a<o;a++)r[a].updateMatrixWorld(!0);2===n.length?function(e,t,n){U.setFromMatrixPosition(t.matrixWorld),F.setFromMatrixPosition(n.matrixWorld);var i=U.distanceTo(F),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,o=r[14]/(r[10]-1),s=r[14]/(r[10]+1),l=(r[9]+1)/r[5],u=(r[9]-1)/r[5],c=(r[8]-1)/r[0],h=(a[8]+1)/a[0],d=o*c,f=o*h,p=i/(-c+h),m=p*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(p),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();var v=o+p,g=s+p,_=d-m,y=f+(i-m),x=l*s/g*v,b=u*s/g*v;e.projectionMatrix.makePerspective(_,y,x,b,v,g)}(D,C,L):D.projectionMatrix.copy(C.projectionMatrix)}},r.getCamera=function(){return D},r.getFoveation=function(){return null!==y?y.fixedFoveation:null!==x?x.fixedFoveation:void 0},r.setFoveation=function(e){null!==y&&(y.fixedFoveation=e),null!==x&&void 0!==x.fixedFoveation&&(x.fixedFoveation=e)},r.getPlanes=function(){return E};var B=null,V=new qi;return V.setAnimationLoop((function(t,n){if(g=n.getViewerPose(v||p),b=n,null!==g){var i=g.views;null!==x&&(e.setRenderTargetFramebuffer(S,x.framebuffer),e.setRenderTarget(S));var r=!1;i.length!==D.cameras.length&&(D.cameras.length=0,r=!0);for(var a=0;a<i.length;a++){var o=i[a],s=null;if(null!==x)s=x.getViewport(o);else{var l=_.getViewSubImage(y,o);s=l.viewport,0===a&&(e.setRenderTargetTextures(S,l.colorTexture,y.ignoreDepthValues?void 0:l.depthStencilTexture),e.setRenderTarget(S))}var u=P[a];void 0===u&&((u=new Oi).layers.enable(a),u.viewport=new Et,P[a]=u),u.matrix.fromArray(o.transform.matrix),u.projectionMatrix.fromArray(o.projectionMatrix),u.viewport.set(s.x,s.y,s.width,s.height),0===a&&D.matrix.copy(u.matrix),!0===r&&D.cameras.push(u)}}for(var h=0;h<T.length;h++){var d=A[h],f=T[h];null!==d&&void 0!==f&&f.update(d,n,v||p)}if(B&&B(t,n),n.detectedPlanes){c.dispatchEvent({type:"planesdetected",data:n.detectedPlanes});var m=null,w=!0,M=!1,C=void 0;try{for(var L,R=E[Symbol.iterator]();!(w=(L=R.next()).done);w=!0){var I=L.value;n.detectedPlanes.has(I)||(null===m&&(m=[]),m.push(I))}}catch(e){M=!0,C=e}finally{try{w||null==R.return||R.return()}finally{if(M)throw C}}var O=!0,N=!1,z=void 0;if(null!==m)try{for(var U,F=m[Symbol.iterator]();!(O=(U=F.next()).done);O=!0){var V=U.value;E.delete(V),k.delete(V),c.dispatchEvent({type:"planeremoved",data:V})}}catch(e){N=!0,z=e}finally{try{O||null==F.return||F.return()}finally{if(N)throw z}}var H=!0,G=!1,W=void 0;try{for(var j,X=n.detectedPlanes[Symbol.iterator]();!(H=(j=X.next()).done);H=!0){var q=j.value;if(E.has(q)){var Y=k.get(q);q.lastChangedTime>Y&&(k.set(q,q.lastChangedTime),c.dispatchEvent({type:"planechanged",data:q}))}else E.add(q),k.set(q,n.lastChangedTime),c.dispatchEvent({type:"planeadded",data:q})}}catch(e){G=!0,W=e}finally{try{H||null==X.return||X.return()}finally{if(G)throw W}}}b=null})),r.setAnimationLoop=function(e){B=e},r.dispose=function(){},r}return n}(Xe);function Mo(e,t){var n=function(n,i){n.opacity.value=i.opacity,i.color&&n.diffuse.value.copy(i.color),i.emissive&&n.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(n.map.value=i.map),i.alphaMap&&(n.alphaMap.value=i.alphaMap),i.bumpMap&&(n.bumpMap.value=i.bumpMap,n.bumpScale.value=i.bumpScale,1===i.side&&(n.bumpScale.value*=-1)),i.displacementMap&&(n.displacementMap.value=i.displacementMap,n.displacementScale.value=i.displacementScale,n.displacementBias.value=i.displacementBias),i.emissiveMap&&(n.emissiveMap.value=i.emissiveMap),i.normalMap&&(n.normalMap.value=i.normalMap,n.normalScale.value.copy(i.normalScale),1===i.side&&n.normalScale.value.negate()),i.specularMap&&(n.specularMap.value=i.specularMap),i.alphaTest>0&&(n.alphaTest.value=i.alphaTest);var r,a,o=t.get(i).envMap;if(o&&(n.envMap.value=o,n.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1,n.reflectivity.value=i.reflectivity,n.ior.value=i.ior,n.refractionRatio.value=i.refractionRatio),i.lightMap){n.lightMap.value=i.lightMap;var s=!0!==e.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=i.lightMapIntensity*s}i.aoMap&&(n.aoMap.value=i.aoMap,n.aoMapIntensity.value=i.aoMapIntensity),i.map?r=i.map:i.specularMap?r=i.specularMap:i.displacementMap?r=i.displacementMap:i.normalMap?r=i.normalMap:i.bumpMap?r=i.bumpMap:i.roughnessMap?r=i.roughnessMap:i.metalnessMap?r=i.metalnessMap:i.alphaMap?r=i.alphaMap:i.emissiveMap?r=i.emissiveMap:i.clearcoatMap?r=i.clearcoatMap:i.clearcoatNormalMap?r=i.clearcoatNormalMap:i.clearcoatRoughnessMap?r=i.clearcoatRoughnessMap:i.iridescenceMap?r=i.iridescenceMap:i.iridescenceThicknessMap?r=i.iridescenceThicknessMap:i.specularIntensityMap?r=i.specularIntensityMap:i.specularColorMap?r=i.specularColorMap:i.transmissionMap?r=i.transmissionMap:i.thicknessMap?r=i.thicknessMap:i.sheenColorMap?r=i.sheenColorMap:i.sheenRoughnessMap&&(r=i.sheenRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),n.uvTransform.value.copy(r.matrix)),i.aoMap?a=i.aoMap:i.lightMap&&(a=i.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),n.uv2Transform.value.copy(a.matrix))},i=function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity},r=function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale},a=function(e,t,n,i){var r;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*i,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?r=t.map:t.alphaMap&&(r=t.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))},o=function(e,t){var n;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))},s=function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)},l=function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)},u=function(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)},c=function(e,t,n){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap)),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate())),t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap)),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)},h=function(e,t){t.matcap&&(e.matcap.value=t.matcap)},d=function(e,t){e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance};return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,Pi(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,t,f,p,m){t.isMeshBasicMaterial||t.isMeshLambertMaterial?n(e,t):t.isMeshToonMaterial?(n(e,t),l(e,t)):t.isMeshPhongMaterial?(n(e,t),s(e,t)):t.isMeshStandardMaterial?(n(e,t),u(e,t),t.isMeshPhysicalMaterial&&c(e,t,m)):t.isMeshMatcapMaterial?(n(e,t),h(e,t)):t.isMeshDepthMaterial?n(e,t):t.isMeshDistanceMaterial?(n(e,t),d(e,t)):t.isMeshNormalMaterial?n(e,t):t.isLineBasicMaterial?(i(e,t),t.isLineDashedMaterial&&r(e,t)):t.isPointsMaterial?a(e,t,f,p):t.isSpriteMaterial?o(e,t):t.isShadowMaterial?(e.color.value.copy(t.color),e.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}}}function So(e,t,n,i){var r=function(t){var n=a();t.__bindingPointIndex=n;var i=e.createBuffer(),r=t.__size,o=t.usage;return e.bindBuffer(35345,i),e.bufferData(35345,r,o),e.bindBuffer(35345,null),e.bindBufferBase(35345,n,i),i},a=function(){for(var e=0;e<f;e++)if(-1===d.indexOf(e))return d.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0},o=function(t){var n=c[t.id],i=t.uniforms,r=t.__cache;e.bindBuffer(35345,n);for(var a=0,o=i.length;a<o;a++){var l=i[a];if(!0===s(l,a,r)){var u=l.value,h=l.__offset;"number"==typeof u?(l.__data[0]=u,e.bufferSubData(35345,h,l.__data)):(l.value.isMatrix3?(l.__data[0]=l.value.elements[0],l.__data[1]=l.value.elements[1],l.__data[2]=l.value.elements[2],l.__data[3]=l.value.elements[0],l.__data[4]=l.value.elements[3],l.__data[5]=l.value.elements[4],l.__data[6]=l.value.elements[5],l.__data[7]=l.value.elements[0],l.__data[8]=l.value.elements[6],l.__data[9]=l.value.elements[7],l.__data[10]=l.value.elements[8],l.__data[11]=l.value.elements[0]):u.toArray(l.__data),e.bufferSubData(35345,h,l.__data))}}e.bindBuffer(35345,null)},s=function(e,t,n){var i=e.value;if(void 0===n[t])return n[t]="number"==typeof i?i:i.clone(),!0;if("number"==typeof i){if(n[t]!==i)return n[t]=i,!0}else{var r=n[t];if(!1===r.equals(i))return r.copy(i),!0}return!1},l=function(e){for(var t=e.uniforms,n=0,i=0,r=0,a=t.length;r<a;r++){var o=t[r],s=u(o);if(o.__data=new Float32Array(s.storage/Float32Array.BYTES_PER_ELEMENT),o.__offset=n,r>0)0!==(i=n%16)&&16-i-s.boundary<0&&(n+=16-i,o.__offset=n);n+=s.storage}return(i=n%16)>0&&(n+=16-i),e.__size=n,e.__cache={},this},u=function(e){var t=e.value,n={boundary:0,storage:0};return"number"==typeof t?(n.boundary=4,n.storage=4):t.isVector2?(n.boundary=8,n.storage=8):t.isVector3||t.isColor?(n.boundary=16,n.storage=12):t.isVector4?(n.boundary=16,n.storage=16):t.isMatrix3?(n.boundary=48,n.storage=48):t.isMatrix4?(n.boundary=64,n.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),n},c={},h={},d=[],f=n.isWebGL2?e.getParameter(35375):0;function p(t){var n=t.target;n.removeEventListener("dispose",p);var i=d.indexOf(n.__bindingPointIndex);d.splice(i,1),e.deleteBuffer(c[n.id]),delete c[n.id],delete h[n.id]}return{bind:function(e,t){var n=t.program;i.uniformBlockBinding(e,n)},update:function(e,n){var a=c[e.id];void 0===a&&(l(e),a=r(e),c[e.id]=a,e.addEventListener("dispose",p));var s=n.program;i.updateUBOMapping(e,s);var u=t.render.frame;h[e.id]!==u&&(o(e),h[e.id]=u)},dispose:function(){for(var t in c)e.deleteBuffer(c[t]);d=[],c={},h={}}}}function To(){var e=ut("canvas");return e.style.display="block",e}function Ao(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=function(){return null===me?Me:1},n=function(e,t){for(var n=0;n<e.length;n++){var i=e[n],r=w.getContext(i,t);if(null!==r)return r}return null},i=function(){O=new br(ze),N=new ir(ze,O,e),O.init(N),le=new vo(ze,O,N),U=new po(ze,O,N),F=new Sr,B=new Qa,V=new mo(ze,O,U,B,N,le,F),H=new ar(he),G=new xr(he),W=new Yi(ze,N),ue=new tr(ze,O,W,N),j=new wr(ze,W,F,ue),X=new kr(ze,j,W,F),ae=new Er(ze,N,V),Q=new rr(B),q=new Ka(he,H,G,O,N,ue,Q),Y=new Mo(he,B),$=new io,Z=new uo(O,N),ie=new er(he,H,G,U,X,b,E),ee=new fo(he,X,N),ce=new So(ze,F,N,U),oe=new nr(ze,O,F,N),se=new Mr(ze,O,F,N),F.programs=q.programs,he.capabilities=N,he.extensions=O,he.properties=B,he.renderLists=$,he.shadowMap=ee,he.state=U,he.info=F},r=function(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),de=!0},a=function(){console.log("THREE.WebGLRenderer: Context Restored."),de=!1;var e=F.autoReset,t=ee.enabled,n=ee.autoUpdate,r=ee.needsUpdate,a=ee.type;i(),F.autoReset=e,ee.enabled=t,ee.autoUpdate=n,ee.needsUpdate=r,ee.type=a},o=function(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)},s=function(e){l(e),B.remove(e)},l=function(e){var t=B.get(e).programs;void 0!==t&&(t.forEach((function(e){q.releaseProgram(e)})),e.isShaderMaterial&&q.releaseShaderCache(e))},u=function(e){Ge&&Ge(e)},c=function(){We.stop()},h=function(){We.start()},d=function(e,t,n,i){var r=e.opaque,a=e.transmissive,o=e.transparent;D.setupLightsView(n),a.length>0&&f(r,t,n),i&&U.viewport(_e.copy(i)),r.length>0&&p(r,t,n),a.length>0&&p(a,t,n),o.length>0&&p(o,t,n),U.buffers.depth.setTest(!0),U.buffers.depth.setMask(!0),U.buffers.color.setMask(!0),U.setPolygonOffset(!1)},f=function(e,t,n){var i=N.isWebGL2;null===De&&(De=new kt(1,1,{generateMipmaps:!0,type:O.has("EXT_color_buffer_half_float")?ne:K,minFilter:J,samples:i&&!0===A?4:0})),he.getDrawingBufferSize(Ie),i?De.setSize(Ie.x,Ie.y):De.setSize(tt(Ie.x),tt(Ie.y));var r=he.getRenderTarget();he.setRenderTarget(De),he.clear();var a=he.toneMapping;he.toneMapping=0,p(e,t,n),he.toneMapping=a,V.updateMultisampleRenderTarget(De),V.updateRenderTargetMipmap(De),he.setRenderTarget(r)},p=function(e,t,n){for(var i=!0===t.isScene?t.overrideMaterial:null,r=0,a=e.length;r<a;r++){var o=e[r],s=o.object,l=o.geometry,u=null===i?o.material:i,c=o.group;s.layers.test(n.layers)&&m(s,t,n,l,u,c)}},m=function(e,t,n,i,r,a){e.onBeforeRender(he,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(he,t,n,i,e,a),!0===r.transparent&&2===r.side?(r.side=1,r.needsUpdate=!0,he.renderBufferDirect(n,t,i,r,e,a),r.side=0,r.needsUpdate=!0,he.renderBufferDirect(n,t,i,r,e,a),r.side=2):he.renderBufferDirect(n,t,i,r,e,a),e.onAfterRender(he,t,n,i,r,a)},v=function(e,t,n){!0!==t.isScene&&(t=Ne);var i=B.get(e),r=D.state.lights,a=D.state.shadowsArray,o=r.state.version,s=q.getParameters(e,r.state,a,t,n),l=q.getProgramCacheKey(s),u=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?G:H).get(e.envMap||i.environment),void 0===u&&(e.addEventListener("dispose",He),u=new Map,i.programs=u);var c=u.get(l);if(void 0!==c){if(i.currentProgram===c&&i.lightsStateVersion===o)return g(e,s),c}else s.uniforms=q.getUniforms(e),e.onBuild(n,s,he),e.onBeforeCompile(s,he),c=q.acquireProgram(s,l),u.set(l,c),i.uniforms=s.uniforms;var h=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=Q.uniform),g(e,s),i.needsLights=x(e),i.lightsStateVersion=o,i.needsLights&&(h.ambientLightColor.value=r.state.ambient,h.lightProbe.value=r.state.probe,h.directionalLights.value=r.state.directional,h.directionalLightShadows.value=r.state.directionalShadow,h.spotLights.value=r.state.spot,h.spotLightShadows.value=r.state.spotShadow,h.rectAreaLights.value=r.state.rectArea,h.ltc_1.value=r.state.rectAreaLTC1,h.ltc_2.value=r.state.rectAreaLTC2,h.pointLights.value=r.state.point,h.pointLightShadows.value=r.state.pointShadow,h.hemisphereLights.value=r.state.hemi,h.directionalShadowMap.value=r.state.directionalShadowMap,h.directionalShadowMatrix.value=r.state.directionalShadowMatrix,h.spotShadowMap.value=r.state.spotShadowMap,h.spotLightMatrix.value=r.state.spotLightMatrix,h.spotLightMap.value=r.state.spotLightMap,h.pointShadowMap.value=r.state.pointShadowMap,h.pointShadowMatrix.value=r.state.pointShadowMatrix);var d=c.getUniforms(),f=Da.seqWithValue(d.seq,h);return i.currentProgram=c,i.uniformsList=f,c},g=function(e,t){var n=B.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping},_=function(e,t,n,i,r){!0!==t.isScene&&(t=Ne),V.resetTextureUnits();var a=t.fog,o=i.isMeshStandardMaterial?t.environment:null,s=null===me?he.outputEncoding:!0===me.isXRRenderTarget?me.texture.encoding:Ue,l=(i.isMeshStandardMaterial?G:H).get(i.envMap||o),u=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!i.normalMap&&!!n.attributes.tangent,h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,f=!!n.morphAttributes.color,p=i.toneMapped?he.toneMapping:0,m=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,g=void 0!==m?m.length:0,_=B.get(i),x=D.state.lights;if(!0===Le&&(!0===Pe||e!==ge)){var b=e===ge&&i.id===ve;Q.setState(i,e,b)}var w=!1;i.version===_.__version?_.needsLights&&_.lightsStateVersion!==x.state.version||_.outputEncoding!==s||r.isInstancedMesh&&!1===_.instancing?w=!0:r.isInstancedMesh||!0!==_.instancing?r.isSkinnedMesh&&!1===_.skinning?w=!0:r.isSkinnedMesh||!0!==_.skinning?_.envMap!==l||!0===i.fog&&_.fog!==a?w=!0:void 0===_.numClippingPlanes||_.numClippingPlanes===Q.numPlanes&&_.numIntersection===Q.numIntersection?(_.vertexAlphas!==u||_.vertexTangents!==c||_.morphTargets!==h||_.morphNormals!==d||_.morphColors!==f||_.toneMapping!==p||!0===N.isWebGL2&&_.morphTargetsCount!==g)&&(w=!0):w=!0:w=!0:w=!0:(w=!0,_.__version=i.version);var M=_.currentProgram;!0===w&&(M=v(i,t,r));var S=!1,T=!1,A=!1,E=M.getUniforms(),k=_.uniforms;if(U.useProgram(M.program)&&(S=!0,T=!0,A=!0),i.id!==ve&&(ve=i.id,T=!0),S||ge!==e){if(E.setValue(ze,"projectionMatrix",e.projectionMatrix),N.logarithmicDepthBuffer&&E.setValue(ze,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),ge!==e&&(ge=e,T=!0,A=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){var C=E.map.cameraPosition;void 0!==C&&C.setValue(ze,Oe.setFromMatrixPosition(e.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&E.setValue(ze,"isOrthographic",!0===e.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh)&&E.setValue(ze,"viewMatrix",e.matrixWorldInverse)}if(r.isSkinnedMesh){E.setOptional(ze,r,"bindMatrix"),E.setOptional(ze,r,"bindMatrixInverse");var L=r.skeleton;L&&(N.floatVertexTextures?(null===L.boneTexture&&L.computeBoneTexture(),E.setValue(ze,"boneTexture",L.boneTexture,V),E.setValue(ze,"boneTextureSize",L.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}var P=n.morphAttributes;if((void 0!==P.position||void 0!==P.normal||void 0!==P.color&&!0===N.isWebGL2)&&ae.update(r,n,i,M),(T||_.receiveShadow!==r.receiveShadow)&&(_.receiveShadow=r.receiveShadow,E.setValue(ze,"receiveShadow",r.receiveShadow)),i.isMeshGouraudMaterial&&null!==i.envMap&&(k.envMap.value=l,k.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),T&&(E.setValue(ze,"toneMappingExposure",he.toneMappingExposure),_.needsLights&&y(k,A),a&&!0===i.fog&&Y.refreshFogUniforms(k,a),Y.refreshMaterialUniforms(k,i,Me,we,De),Da.upload(ze,_.uniformsList,k,V)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Da.upload(ze,_.uniformsList,k,V),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&E.setValue(ze,"center",r.center),E.setValue(ze,"modelViewMatrix",r.modelViewMatrix),E.setValue(ze,"normalMatrix",r.normalMatrix),E.setValue(ze,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial)for(var R=i.uniformsGroups,I=0,O=R.length;I<O;I++)if(N.isWebGL2){var z=R[I];ce.update(z,M),ce.bind(z,M)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");return M},y=function(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t},x=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights};this.isWebGLRenderer=!0;var b,w=void 0!==e.canvas?e.canvas:To(),M=void 0!==e.context?e.context:null,S=void 0===e.depth||e.depth,T=void 0===e.stencil||e.stencil,A=void 0!==e.antialias&&e.antialias,E=void 0===e.premultipliedAlpha||e.premultipliedAlpha,k=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,C=void 0!==e.powerPreference?e.powerPreference:"default",L=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;b=null!==M?M.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;var P=null,D=null,R=[],I=[];this.domElement=w,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ue,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;var O,N,U,F,B,V,H,G,W,j,X,q,Y,$,Z,Q,ee,ie,ae,oe,se,le,ue,ce,he=this,de=!1,fe=0,pe=0,me=null,ve=-1,ge=null,_e=new Et,ye=new Et,xe=null,be=w.width,we=w.height,Me=1,Se=null,Te=null,Ae=new Et(0,0,be,we),Ee=new Et(0,0,be,we),ke=!1,Ce=new Xi,Le=!1,Pe=!1,De=null,Re=new un,Ie=new rt,Oe=new Dt,Ne={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0},ze=M;try{var Fe={alpha:!0,depth:S,stencil:T,antialias:A,premultipliedAlpha:E,preserveDrawingBuffer:k,powerPreference:C,failIfMajorPerformanceCaveat:L};if("setAttribute"in w&&w.setAttribute("data-engine","three.js r".concat(z)),w.addEventListener("webglcontextlost",r,!1),w.addEventListener("webglcontextrestored",a,!1),w.addEventListener("webglcontextcreationerror",o,!1),null===ze){var Be=["webgl2","webgl","experimental-webgl"];if(!0===he.isWebGL1Renderer&&Be.shift(),null===(ze=n(Be,Fe)))throw n(Be)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ze.getShaderPrecisionFormat&&(ze.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}i();var Ve=new wo(he,ze);function He(e){var t=e.target;t.removeEventListener("dispose",He),s(t)}this.xr=Ve,this.getContext=function(){return ze},this.getContextAttributes=function(){return ze.getContextAttributes()},this.forceContextLoss=function(){var e=O.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=O.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return Me},this.setPixelRatio=function(e){void 0!==e&&(Me=e,this.setSize(be,we,!1))},this.getSize=function(e){return e.set(be,we)},this.setSize=function(e,t,n){Ve.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(be=e,we=t,w.width=Math.floor(e*Me),w.height=Math.floor(t*Me),!1!==n&&(w.style.width=e+"px",w.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(be*Me,we*Me).floor()},this.setDrawingBufferSize=function(e,t,n){be=e,we=t,Me=n,w.width=Math.floor(e*n),w.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(_e)},this.getViewport=function(e){return e.copy(Ae)},this.setViewport=function(e,t,n,i){e.isVector4?Ae.set(e.x,e.y,e.z,e.w):Ae.set(e,t,n,i),U.viewport(_e.copy(Ae).multiplyScalar(Me).floor())},this.getScissor=function(e){return e.copy(Ee)},this.setScissor=function(e,t,n,i){e.isVector4?Ee.set(e.x,e.y,e.z,e.w):Ee.set(e,t,n,i),U.scissor(ye.copy(Ee).multiplyScalar(Me).floor())},this.getScissorTest=function(){return ke},this.setScissorTest=function(e){U.setScissorTest(ke=e)},this.setOpaqueSort=function(e){Se=e},this.setTransparentSort=function(e){Te=e},this.getClearColor=function(e){return e.copy(ie.getClearColor())},this.setClearColor=function(){ie.setClearColor.apply(ie,arguments)},this.getClearAlpha=function(){return ie.getClearAlpha()},this.setClearAlpha=function(){ie.setClearAlpha.apply(ie,arguments)},this.clear=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=0;e&&(i|=16384),t&&(i|=256),n&&(i|=1024),ze.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){w.removeEventListener("webglcontextlost",r,!1),w.removeEventListener("webglcontextrestored",a,!1),w.removeEventListener("webglcontextcreationerror",o,!1),$.dispose(),Z.dispose(),B.dispose(),H.dispose(),G.dispose(),X.dispose(),ue.dispose(),ce.dispose(),q.dispose(),Ve.dispose(),Ve.removeEventListener("sessionstart",c),Ve.removeEventListener("sessionend",h),De&&(De.dispose(),De=null),We.stop()},this.renderBufferDirect=function(e,n,i,r,a,o){null===n&&(n=Ne);var s=a.isMesh&&a.matrixWorld.determinant()<0,l=_(e,n,i,r,a);U.setMaterial(r,s);var u=i.index,c=1;!0===r.wireframe&&(u=j.getWireframeAttribute(i),c=2);var h=i.drawRange,d=i.attributes.position,f=h.start*c,p=(h.start+h.count)*c;null!==o&&(f=Math.max(f,o.start*c),p=Math.min(p,(o.start+o.count)*c)),null!==u?(f=Math.max(f,0),p=Math.min(p,u.count)):null!=d&&(f=Math.max(f,0),p=Math.min(p,d.count));var m=p-f;if(!(m<0||m===1/0)){var v;ue.setup(a,r,l,i,u);var g=oe;if(null!==u&&(v=W.get(u),(g=se).setIndex(v)),a.isMesh)!0===r.wireframe?(U.setLineWidth(r.wireframeLinewidth*t()),g.setMode(1)):g.setMode(4);else if(a.isLine){var y=r.linewidth;void 0===y&&(y=1),U.setLineWidth(y*t()),a.isLineSegments?g.setMode(1):a.isLineLoop?g.setMode(2):g.setMode(3)}else a.isPoints?g.setMode(0):a.isSprite&&g.setMode(4);if(a.isInstancedMesh)g.renderInstances(f,m,a.count);else if(i.isInstancedBufferGeometry){var x=void 0!==i._maxInstanceCount?i._maxInstanceCount:1/0,b=Math.min(i.instanceCount,x);g.renderInstances(f,m,b)}else g.render(f,m)}},this.compile=function(e,t){var n=function(e,t,n){!0===e.transparent&&2===e.side?(e.side=1,e.needsUpdate=!0,v(e,t,n),e.side=0,e.needsUpdate=!0,v(e,t,n),e.side=2):v(e,t,n)};(D=Z.get(e)).init(),I.push(D),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(D.pushLight(e),e.castShadow&&D.pushShadow(e))})),D.setupLights(he.physicallyCorrectLights),e.traverse((function(t){var i=t.material;if(i)if(Array.isArray(i))for(var r=0;r<i.length;r++){var a=i[r];n(a,e,t)}else n(i,e,t)})),I.pop(),D=null};var Ge=null,We=new qi;function je(e,t,n,i){if(!1!==e.visible){if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)D.pushLight(e),e.castShadow&&D.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||Ce.intersectsSprite(e)){i&&Oe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Re);var r=X.update(e),a=e.material;a.visible&&P.push(e,r,a,n,Oe.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==F.render.frame&&(e.skeleton.update(),e.skeleton.frame=F.render.frame),!e.frustumCulled||Ce.intersectsObject(e))){i&&Oe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Re);var o=X.update(e),s=e.material;if(Array.isArray(s))for(var l=o.groups,u=0,c=l.length;u<c;u++){var h=l[u],d=s[h.materialIndex];d&&d.visible&&P.push(e,o,d,n,Oe.z,h)}else s.visible&&P.push(e,o,s,n,Oe.z,null)}for(var f=e.children,p=0,m=f.length;p<m;p++)je(f[p],t,n,i)}}We.setAnimationLoop(u),"undefined"!=typeof self&&We.setContext(self),this.setAnimationLoop=function(e){Ge=e,Ve.setAnimationLoop(e),null===e?We.stop():We.start()},Ve.addEventListener("sessionstart",c),Ve.addEventListener("sessionend",h),this.render=function(e,t){if(void 0===t||!0===t.isCamera){if(!0!==de){!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Ve.enabled&&!0===Ve.isPresenting&&(!0===Ve.cameraAutoUpdate&&Ve.updateCamera(t),t=Ve.getCamera()),!0===e.isScene&&e.onBeforeRender(he,e,t,me),(D=Z.get(e,I.length)).init(),I.push(D),Re.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Ce.setFromProjectionMatrix(Re),Pe=this.localClippingEnabled,Le=Q.init(this.clippingPlanes,Pe,t),(P=$.get(e,R.length)).init(),R.push(P),je(e,t,0,he.sortObjects),P.finish(),!0===he.sortObjects&&P.sort(Se,Te),!0===Le&&Q.beginShadows();var n=D.state.shadowsArray;if(ee.render(n,e,t),!0===Le&&Q.endShadows(),!0===this.info.autoReset&&this.info.reset(),ie.render(P,e),D.setupLights(he.physicallyCorrectLights),t.isArrayCamera)for(var i=t.cameras,r=0,a=i.length;r<a;r++){var o=i[r];d(P,e,o,o.viewport)}else d(P,e,t);null!==me&&(V.updateMultisampleRenderTarget(me),V.updateRenderTargetMipmap(me)),!0===e.isScene&&e.onAfterRender(he,e,t),ue.resetDefaultState(),ve=-1,ge=null,I.pop(),D=I.length>0?I[I.length-1]:null,R.pop(),P=R.length>0?R[R.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return fe},this.getActiveMipmapLevel=function(){return pe},this.getRenderTarget=function(){return me},this.setRenderTargetTextures=function(e,t,n){B.get(e.texture).__webglTexture=t,B.get(e.depthTexture).__webglTexture=n;var i=B.get(e);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===O.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){var n=B.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;me=e,fe=t,pe=n;var i=!0,r=null,a=!1,o=!1;if(e){var s=B.get(e);void 0!==s.__useDefaultFramebuffer?(U.bindFramebuffer(36160,null),i=!1):void 0===s.__webglFramebuffer?V.setupRenderTarget(e):s.__hasExternalTextures&&V.rebindTextures(e,B.get(e.texture).__webglTexture,B.get(e.depthTexture).__webglTexture);var l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(o=!0);var u=B.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=u[t],a=!0):r=N.isWebGL2&&e.samples>0&&!1===V.useMultisampledRTT(e)?B.get(e).__webglMultisampledFramebuffer:u,_e.copy(e.viewport),ye.copy(e.scissor),xe=e.scissorTest}else _e.copy(Ae).multiplyScalar(Me).floor(),ye.copy(Ee).multiplyScalar(Me).floor(),xe=ke;var c=U.bindFramebuffer(36160,r);if(c&&N.drawBuffers&&i&&U.drawBuffers(e,r),U.viewport(_e),U.scissor(ye),U.setScissorTest(xe),a){var h=B.get(e.texture);ze.framebufferTexture2D(36160,36064,34069+t,h.__webglTexture,n)}else if(o){var d=B.get(e.texture),f=t||0;ze.framebufferTextureLayer(36160,36064,d.__webglTexture,n||0,f)}ve=-1},this.readRenderTargetPixels=function(e,t,n,i,r,a,o){if(e&&e.isWebGLRenderTarget){var s=B.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){U.bindFramebuffer(36160,s);try{var l=e.texture,u=l.format,c=l.type;if(u!==re&&le.convert(u)!==ze.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var h=c===ne&&(O.has("EXT_color_buffer_half_float")||N.isWebGL2&&O.has("EXT_color_buffer_float"));if(!(c===K||le.convert(c)===ze.getParameter(35738)||c===te&&(N.isWebGL2||O.has("OES_texture_float")||O.has("WEBGL_color_buffer_float"))||h))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&ze.readPixels(t,n,i,r,le.convert(u),le.convert(c),a)}finally{var d=null!==me?B.get(me).__webglFramebuffer:null;U.bindFramebuffer(36160,d)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i);V.setTexture2D(t,0),ze.copyTexSubImage2D(3553,n,0,0,e.x,e.y,r,a),U.unbindTexture()},this.copyTextureToTexture=function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=t.image.width,a=t.image.height,o=le.convert(n.format),s=le.convert(n.type);V.setTexture2D(n,0),ze.pixelStorei(37440,n.flipY),ze.pixelStorei(37441,n.premultiplyAlpha),ze.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?ze.texSubImage2D(3553,i,e.x,e.y,r,a,o,s,t.image.data):t.isCompressedTexture?ze.compressedTexSubImage2D(3553,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):ze.texSubImage2D(3553,i,e.x,e.y,o,s,t.image),0===i&&n.generateMipmaps&&ze.generateMipmap(3553),U.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,i){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;if(he.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var a,o=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,l=e.max.z-e.min.z+1,u=le.convert(i.format),c=le.convert(i.type);if(i.isData3DTexture)V.setTexture3D(i,0),a=32879;else{if(!i.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");V.setTexture2DArray(i,0),a=35866}ze.pixelStorei(37440,i.flipY),ze.pixelStorei(37441,i.premultiplyAlpha),ze.pixelStorei(3317,i.unpackAlignment);var h=ze.getParameter(3314),d=ze.getParameter(32878),f=ze.getParameter(3316),p=ze.getParameter(3315),m=ze.getParameter(32877),v=n.isCompressedTexture?n.mipmaps[0]:n.image;ze.pixelStorei(3314,v.width),ze.pixelStorei(32878,v.height),ze.pixelStorei(3316,e.min.x),ze.pixelStorei(3315,e.min.y),ze.pixelStorei(32877,e.min.z),n.isDataTexture||n.isData3DTexture?ze.texSubImage3D(a,r,t.x,t.y,t.z,o,s,l,u,c,v.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ze.compressedTexSubImage3D(a,r,t.x,t.y,t.z,o,s,l,u,v.data)):ze.texSubImage3D(a,r,t.x,t.y,t.z,o,s,l,u,c,v),ze.pixelStorei(3314,h),ze.pixelStorei(32878,d),ze.pixelStorei(3316,f),ze.pixelStorei(3315,p),ze.pixelStorei(32877,m),0===r&&i.generateMipmaps&&ze.generateMipmap(a),U.unbindTexture()}},this.initTexture=function(e){e.isCubeTexture?V.setTextureCube(e,0):e.isData3DTexture?V.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?V.setTexture2DArray(e,0):V.setTexture2D(e,0),U.unbindTexture()},this.resetState=function(){fe=0,pe=0,me=null,U.reset(),ue.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}var Eo=function(e){"use strict";x(n,e);var t=O(n);function n(){return o(this,n),t.apply(this,arguments)}return n}(Ao);Eo.prototype.isWebGL1Renderer=!0;var ko=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;return o(this,n),(e=t.call(this)).isScene=!0,e.type="Scene",e.background=null,e.environment=null,e.fog=null,e.backgroundBlurriness=0,e.backgroundIntensity=1,e.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:u(e)})),e}return l(n,[{key:"copy",value:function(e,t){return g(p(n.prototype),"copy",this).call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}},{key:"toJSON",value:function(e){var t=g(p(n.prototype),"toJSON",this).call(this,e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.backgroundIntensity=this.backgroundIntensity),t}},{key:"autoUpdate",get:function(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate},set:function(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}]),n}(In);var Co=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r){var a,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return o(this,n),(a=t.call(this,e,i,r)).isInstancedBufferAttribute=!0,a.meshPerAttribute=s,a}return l(n,[{key:"copy",value:function(e){return g(p(n.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"toJSON",value:function(){var e=g(p(n.prototype),"toJSON",this).call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}]),n}(Jn);var Lo=function(e){"use strict";x(n,e);var t=O(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI,u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:Math.PI;o(this,n),(e=t.call(this)).type="SphereGeometry",e.parameters={radius:i,widthSegments:r,heightSegments:a,phiStart:s,phiLength:l,thetaStart:u,thetaLength:c},r=Math.max(3,Math.floor(r)),a=Math.max(2,Math.floor(a));for(var h=Math.min(u+c,Math.PI),d=0,f=[],p=new Dt,m=new Dt,v=[],g=[],_=[],y=[],x=0;x<=a;x++){var b=[],w=x/a,M=0;0==x&&0==u?M=.5/r:x==a&&h==Math.PI&&(M=-.5/r);for(var S=0;S<=r;S++){var T=S/r;p.x=-i*Math.cos(s+T*l)*Math.sin(u+w*c),p.y=i*Math.cos(u+w*c),p.z=i*Math.sin(s+T*l)*Math.sin(u+w*c),g.push(p.x,p.y,p.z),m.copy(p).normalize(),_.push(m.x,m.y,m.z),y.push(T+M,1-w),b.push(d++)}f.push(b)}for(var A=0;A<a;A++)for(var E=0;E<r;E++){var k=f[A][E+1],C=f[A][E],L=f[A+1][E],P=f[A+1][E+1];(0!==A||u>0)&&v.push(k,C,P),(A!==a-1||h<Math.PI)&&v.push(C,L,P)}return e.setIndex(v),e.setAttribute("position",new ei(g,3)),e.setAttribute("normal",new ei(_,3)),e.setAttribute("uv",new ei(y,2)),e}return l(n,null,[{key:"fromJSON",value:function(e){return new n(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}]),n}(li);function Po(e,t,n){return Ro(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)}function Do(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}function Ro(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}var Io=function(){"use strict";function e(t,n,i,r){o(this,e),this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new n.constructor(i),this.sampleValues=n,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}return l(e,[{key:"evaluate",value:function(e){var t=this.parameterPositions,n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{var a;n:{i:if(!(e<i)){for(var o=n+2;;){if(void 0===i){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=i,e<(i=t[++n]))break t}a=t.length;break n}if(e>=r)break e;var s=t[1];e<s&&(n=2,r=s);for(var l=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=r,e>=(r=t[--n-1]))break t}a=n,n=0}for(;n<a;){var u=n+a>>>1;e<t[u]?a=u:n=u+1}if(i=t[n],void 0===(r=t[n-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}},{key:"getSettings_",value:function(){return this.settings||this.DefaultSettings_}},{key:"copySampleValue_",value:function(e){for(var t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i,a=0;a!==i;++a)t[a]=n[r+a];return t}},{key:"interpolate_",value:function(){throw new Error("call to abstract method")}},{key:"intervalChanged_",value:function(){}}]),e}(),Oo=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a){var s;return o(this,n),(s=t.call(this,e,i,r,a))._weightPrev=-0,s._offsetPrev=-0,s._weightNext=-0,s._offsetNext=-0,s.DefaultSettings_={endingStart:Oe,endingEnd:Oe},s}return l(n,[{key:"intervalChanged_",value:function(e,t,n){var i=this.parameterPositions,r=e-2,a=e+1,o=i[r],s=i[a];if(void 0===o)switch(this.getSettings_().endingStart){case Ne:r=e,o=2*t-n;break;case ze:o=t+i[r=i.length-2]-i[r+1];break;default:r=e,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case Ne:a=e,s=2*n-t;break;case ze:a=1,s=n+i[1]-i[0];break;default:a=e-1,s=t}var l=.5*(n-t),u=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-n),this._offsetPrev=r*u,this._offsetNext=a*u}},{key:"interpolate_",value:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,f=(n-t)/(i-t),p=f*f,m=p*f,v=-h*m+2*h*p-h*f,g=(1+h)*m+(-1.5-2*h)*p+(-.5+h)*f+1,_=(-1-d)*m+(1.5+d)*p+.5*f,y=d*m-d*p,x=0;x!==o;++x)r[x]=v*a[u+x]+g*a[l+x]+_*a[s+x]+y*a[c+x];return r}}]),n}(Io),No=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a){return o(this,n),t.call(this,e,i,r,a)}return l(n,[{key:"interpolate_",value:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,u=(n-t)/(i-t),c=1-u,h=0;h!==o;++h)r[h]=a[l+h]*c+a[s+h]*u;return r}}]),n}(Io),zo=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a){return o(this,n),t.call(this,e,i,r,a)}return l(n,[{key:"interpolate_",value:function(e){return this.copySampleValue_(e-1)}}]),n}(Io),Uo=function(){"use strict";function e(t,n,i,r){if(o(this,e),void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===n||0===n.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Do(n,this.TimeBufferType),this.values=Do(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}return l(e,[{key:"InterpolantFactoryMethodDiscrete",value:function(e){return new zo(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodLinear",value:function(e){return new No(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodSmooth",value:function(e){return new Oo(this.times,this.values,this.getValueSize(),e)}},{key:"setInterpolation",value:function(e){var t;switch(e){case De:t=this.InterpolantFactoryMethodDiscrete;break;case Re:t=this.InterpolantFactoryMethodLinear;break;case Ie:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}},{key:"getInterpolation",value:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return De;case this.InterpolantFactoryMethodLinear:return Re;case this.InterpolantFactoryMethodSmooth:return Ie}}},{key:"getValueSize",value:function(){return this.values.length/this.times.length}},{key:"shift",value:function(e){if(0!==e)for(var t=this.times,n=0,i=t.length;n!==i;++n)t[n]+=e;return this}},{key:"scale",value:function(e){if(1!==e)for(var t=this.times,n=0,i=t.length;n!==i;++n)t[n]*=e;return this}},{key:"trim",value:function(e,t){for(var n=this.times,i=n.length,r=0,a=i-1;r!==i&&n[r]<e;)++r;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==r||a!==i){r>=a&&(r=(a=Math.max(a,1))-1);var o=this.getValueSize();this.times=Po(n,r,a),this.values=Po(this.values,r*o,a*o)}return this}},{key:"validate",value:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var a=null,o=0;o!==r;o++){var s=n[o];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,s),e=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,s,a),e=!1;break}a=s}if(void 0!==i&&Ro(i))for(var l=0,u=i.length;l!==u;++l){var c=i[l];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,c),e=!1;break}}return e}},{key:"optimize",value:function(){for(var e=Po(this.times),t=Po(this.values),n=this.getValueSize(),i=this.getInterpolation()===Ie,r=e.length-1,a=1,o=1;o<r;++o){var s=!1,l=e[o];if(l!==e[o+1]&&(1!==o||l!==e[0]))if(i)s=!0;else for(var u=o*n,c=u-n,h=u+n,d=0;d!==n;++d){var f=t[u+d];if(f!==t[c+d]||f!==t[h+d]){s=!0;break}}if(s){if(o!==a){e[a]=e[o];for(var p=o*n,m=a*n,v=0;v!==n;++v)t[m+v]=t[p+v]}++a}}if(r>0){e[a]=e[r];for(var g=r*n,_=a*n,y=0;y!==n;++y)t[_+y]=t[g+y];++a}return a!==e.length?(this.times=Po(e,0,a),this.values=Po(t,0,a*n)):(this.times=e,this.values=t),this}},{key:"clone",value:function(){var e=Po(this.times,0),t=Po(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}],[{key:"toJSON",value:function(e){var t,n=e.constructor;if(n.toJSON!==this.toJSON)t=n.toJSON(e);else{t={name:e.name,times:Do(e.times,Array),values:Do(e.values,Array)};var i=e.getInterpolation();i!==e.DefaultInterpolation&&(t.interpolation=i)}return t.type=e.ValueTypeName,t}}]),e}();Uo.prototype.TimeBufferType=Float32Array,Uo.prototype.ValueBufferType=Float32Array,Uo.prototype.DefaultInterpolation=Re;var Fo=function(e){"use strict";x(n,e);var t=O(n);function n(){return o(this,n),t.apply(this,arguments)}return n}(Uo);Fo.prototype.ValueTypeName="bool",Fo.prototype.ValueBufferType=Array,Fo.prototype.DefaultInterpolation=De,Fo.prototype.InterpolantFactoryMethodLinear=void 0,Fo.prototype.InterpolantFactoryMethodSmooth=void 0;var Bo=function(e){"use strict";x(n,e);var t=O(n);function n(){return o(this,n),t.apply(this,arguments)}return n}(Uo);Bo.prototype.ValueTypeName="color";var Vo=function(e){"use strict";x(n,e);var t=O(n);function n(){return o(this,n),t.apply(this,arguments)}return n}(Uo);Vo.prototype.ValueTypeName="number";var Ho=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a){return o(this,n),t.call(this,e,i,r,a)}return l(n,[{key:"interpolate_",value:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(n-t)/(i-t),l=e*o,u=l+o;l!==u;l+=4)Pt.slerpFlat(r,0,a,l-o,a,l,s);return r}}]),n}(Io),Go=function(e){"use strict";x(n,e);var t=O(n);function n(){return o(this,n),t.apply(this,arguments)}return l(n,[{key:"InterpolantFactoryMethodLinear",value:function(e){return new Ho(this.times,this.values,this.getValueSize(),e)}}]),n}(Uo);Go.prototype.ValueTypeName="quaternion",Go.prototype.DefaultInterpolation=Re,Go.prototype.InterpolantFactoryMethodSmooth=void 0;var Wo=function(e){"use strict";x(n,e);var t=O(n);function n(){return o(this,n),t.apply(this,arguments)}return n}(Uo);Wo.prototype.ValueTypeName="string",Wo.prototype.ValueBufferType=Array,Wo.prototype.DefaultInterpolation=De,Wo.prototype.InterpolantFactoryMethodLinear=void 0,Wo.prototype.InterpolantFactoryMethodSmooth=void 0;var jo=function(e){"use strict";x(n,e);var t=O(n);function n(){return o(this,n),t.apply(this,arguments)}return n}(Uo);jo.prototype.ValueTypeName="vector";var Xo={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},qo=function e(t,n,i){"use strict";o(this,e);var r=this,a=!1,s=0,l=0,u=void 0,c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=n,this.onError=i,this.itemStart=function(e){l++,!1===a&&void 0!==r.onStart&&r.onStart(e,s,l),a=!0},this.itemEnd=function(e){s++,void 0!==r.onProgress&&r.onProgress(e,s,l),s===l&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return u?u(e):e},this.setURLModifier=function(e){return u=e,this},this.addHandler=function(e,t){return c.push(e,t),this},this.removeHandler=function(e){var t=c.indexOf(e);return-1!==t&&c.splice(t,2),this},this.getHandler=function(e){for(var t=0,n=c.length;t<n;t+=2){var i=c[t],r=c[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return r}return null}},Yo=new qo,$o=function(){"use strict";function e(t){o(this,e),this.manager=void 0!==t?t:Yo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}return l(e,[{key:"load",value:function(){}},{key:"loadAsync",value:function(e,t){var n=this;return new Promise((function(i,r){n.load(e,i,t,r)}))}},{key:"parse",value:function(){}},{key:"setCrossOrigin",value:function(e){return this.crossOrigin=e,this}},{key:"setWithCredentials",value:function(e){return this.withCredentials=e,this}},{key:"setPath",value:function(e){return this.path=e,this}},{key:"setResourcePath",value:function(e){return this.resourcePath=e,this}},{key:"setRequestHeader",value:function(e){return this.requestHeader=e,this}}]),e}(),Zo=(P(Error),function(e){"use strict";x(n,e);var t=O(n);function n(e){return o(this,n),t.call(this,e)}return l(n,[{key:"load",value:function(e,t,n,i){var r=function(){o(),Xo.add(e,this),t&&t(this),s.manager.itemEnd(e)},a=function(t){o(),i&&i(t),s.manager.itemError(e),s.manager.itemEnd(e)},o=function(){u.removeEventListener("load",r,!1),u.removeEventListener("error",a,!1)};void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var s=this,l=Xo.get(e);if(void 0!==l)return s.manager.itemStart(e),setTimeout((function(){t&&t(l),s.manager.itemEnd(e)}),0),l;var u=ut("img");return u.addEventListener("load",r,!1),u.addEventListener("error",a,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(u.crossOrigin=this.crossOrigin),s.manager.itemStart(e),u.src=e,u}}]),n}($o)),Jo=function(e){"use strict";x(n,e);var t=O(n);function n(e){return o(this,n),t.call(this,e)}return l(n,[{key:"load",value:function(e,t,n,i){var r=new At,a=new Zo(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)}),n,i),r}}]),n}($o),Ko=function(e){"use strict";x(n,e);var t=O(n);function n(e){var i,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return o(this,n),(i=t.call(this)).isLight=!0,i.type="Light",i.color=new bt(e),i.intensity=r,i}return l(n,[{key:"dispose",value:function(){}},{key:"copy",value:function(e,t){return g(p(n.prototype),"copy",this).call(this,e,t),this.color.copy(e.color),this.intensity=e.intensity,this}},{key:"toJSON",value:function(e){var t=g(p(n.prototype),"toJSON",this).call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}]),n}(In),Qo=new un,es=new Dt,ts=new Dt,ns=function(){"use strict";function e(t){o(this,e),this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new rt(512,512),this.map=null,this.mapPass=null,this.matrix=new un,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Xi,this._frameExtents=new rt(1,1),this._viewportCount=1,this._viewports=[new Et(0,0,1,1)]}return l(e,[{key:"getViewportCount",value:function(){return this._viewportCount}},{key:"getFrustum",value:function(){return this._frustum}},{key:"updateMatrices",value:function(e){var t=this.camera,n=this.matrix;es.setFromMatrixPosition(e.matrixWorld),t.position.copy(es),ts.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ts),t.updateMatrixWorld(),Qo.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Qo),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Qo)}},{key:"getViewport",value:function(e){return this._viewports[e]}},{key:"getFrameExtents",value:function(){return this._frameExtents}},{key:"dispose",value:function(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}},{key:"copy",value:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}]),e}(),is=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;return o(this,n),(e=t.call(this,new or(-5,5,5,-5,.5,500))).isDirectionalLightShadow=!0,e}return n}(ns),rs=function(e){"use strict";x(n,e);var t=O(n);function n(e,i){var r;return o(this,n),(r=t.call(this,e,i)).isDirectionalLight=!0,r.type="DirectionalLight",r.position.copy(In.DefaultUp),r.updateMatrix(),r.target=new In,r.shadow=new is,r}return l(n,[{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return g(p(n.prototype),"copy",this).call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),n}(Ko),as=function(e){"use strict";x(n,e);var t=O(n);function n(e,i){var r;return o(this,n),(r=t.call(this,e,i)).isAmbientLight=!0,r.type="AmbientLight",r}return n}(Ko),os=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;return o(this,n),(e=t.call(this)).isInstancedBufferGeometry=!0,e.type="InstancedBufferGeometry",e.instanceCount=1/0,e}return l(n,[{key:"copy",value:function(e){return g(p(n.prototype),"copy",this).call(this,e),this.instanceCount=e.instanceCount,this}},{key:"toJSON",value:function(){var e=g(p(n.prototype),"toJSON",this).call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}]),n}(li),ss=function(){"use strict";function e(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];o(this,e),this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}return l(e,[{key:"start",value:function(){this.startTime=ls(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}},{key:"stop",value:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}},{key:"getElapsedTime",value:function(){return this.getDelta(),this.elapsedTime}},{key:"getDelta",value:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=ls();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}]),e}();function ls(){return("undefined"==typeof performance?Date:performance).now()}var us=function(e){"use strict";x(n,e);var t=O(n);function n(e){var i;return o(this,n),(i=t.call(this)).type="Audio",i.listener=e,i.context=e.context,i.gain=i.context.createGain(),i.gain.connect(e.getInput()),i.autoplay=!1,i.buffer=null,i.detune=0,i.loop=!1,i.loopStart=0,i.loopEnd=0,i.offset=0,i.duration=void 0,i.playbackRate=1,i.isPlaying=!1,i.hasPlaybackControl=!0,i.source=null,i.sourceType="empty",i._startedAt=0,i._progress=0,i._connected=!1,i.filters=[],i}return l(n,[{key:"getOutput",value:function(){return this.gain}},{key:"setNodeSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}},{key:"setMediaElementSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}},{key:"setMediaStreamSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}},{key:"setBuffer",value:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}},{key:"play",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}},{key:"pause",value:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"stop",value:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"connect",value:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}},{key:"disconnect",value:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}},{key:"getFilters",value:function(){return this.filters}},{key:"setFilters",value:function(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}},{key:"setDetune",value:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}},{key:"getDetune",value:function(){return this.detune}},{key:"getFilter",value:function(){return this.getFilters()[0]}},{key:"setFilter",value:function(e){return this.setFilters(e?[e]:[])}},{key:"setPlaybackRate",value:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"getPlaybackRate",value:function(){return this.playbackRate}},{key:"onEnded",value:function(){this.isPlaying=!1}},{key:"getLoop",value:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}},{key:"setLoop",value:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"setLoopStart",value:function(e){return this.loopStart=e,this}},{key:"setLoopEnd",value:function(e){return this.loopEnd=e,this}},{key:"getVolume",value:function(){return this.gain.gain.value}},{key:"setVolume",value:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}]),n}(In),cs=new Dt,hs=new Pt,ds=new Dt,fs=new Dt,ps=(P(us),"\\[\\]\\.:\\/"),ms=new RegExp("["+ps+"]","g"),vs="[^"+ps+"]",gs="[^"+ps.replace("\\.","")+"]",_s=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",vs)+/(WCOD+)?/.source.replace("WCOD",gs)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",vs)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",vs)+"$"),ys=["material","materials","bones","map"],xs=function(){"use strict";function e(t,n,i){o(this,e);var r=i||bs.parseTrackName(n);this._targetGroup=t,this._bindings=t.subscribe_(n,r)}return l(e,[{key:"getValue",value:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}},{key:"setValue",value:function(e,t){for(var n=this._bindings,i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}},{key:"bind",value:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}},{key:"unbind",value:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}]),e}(),bs=function(){"use strict";function e(t,n,i){o(this,e),this.path=n,this.parsedPath=i||e.parseTrackName(n),this.node=e.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}return l(e,[{key:"_getValue_unavailable",value:function(){}},{key:"_setValue_unavailable",value:function(){}},{key:"_getValue_direct",value:function(e,t){e[t]=this.targetObject[this.propertyName]}},{key:"_getValue_array",value:function(e,t){for(var n=this.resolvedProperty,i=0,r=n.length;i!==r;++i)e[t++]=n[i]}},{key:"_getValue_arrayElement",value:function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}},{key:"_getValue_toArray",value:function(e,t){this.resolvedProperty.toArray(e,t)}},{key:"_setValue_direct",value:function(e,t){this.targetObject[this.propertyName]=e[t]}},{key:"_setValue_direct_setNeedsUpdate",value:function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}},{key:"_setValue_direct_setMatrixWorldNeedsUpdate",value:function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_array",value:function(e,t){for(var n=this.resolvedProperty,i=0,r=n.length;i!==r;++i)n[i]=e[t++]}},{key:"_setValue_array_setNeedsUpdate",value:function(e,t){for(var n=this.resolvedProperty,i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}},{key:"_setValue_array_setMatrixWorldNeedsUpdate",value:function(e,t){for(var n=this.resolvedProperty,i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_arrayElement",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}},{key:"_setValue_arrayElement_setNeedsUpdate",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}},{key:"_setValue_arrayElement_setMatrixWorldNeedsUpdate",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_fromArray",value:function(e,t){this.resolvedProperty.fromArray(e,t)}},{key:"_setValue_fromArray_setNeedsUpdate",value:function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}},{key:"_setValue_fromArray_setMatrixWorldNeedsUpdate",value:function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_getValue_unbound",value:function(e,t){this.bind(),this.getValue(e,t)}},{key:"_setValue_unbound",value:function(e,t){this.bind(),this.setValue(e,t)}},{key:"bind",value:function(){var t=this.node,n=this.parsedPath,i=n.objectName,r=n.propertyName,a=n.propertyIndex;if(t||(t=e.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(i){var o=n.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var s=0;s<t.length;s++)if(t[s].name===o){o=s;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==o){if(void 0===t[o])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[o]}}var l=t[r];if(void 0!==l){var u=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?u=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(u=this.Versioning.MatrixWorldNeedsUpdate);var c=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[a]&&(a=t.morphTargetDictionary[a])}c=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=a}else void 0!==l.fromArray&&void 0!==l.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(c=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=r;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][u]}else{var h=n.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+r+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}},{key:"unbind",value:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}],[{key:"create",value:function(t,n,i){return t&&t.isAnimationObjectGroup?new e.Composite(t,n,i):new e(t,n,i)}},{key:"sanitizeNodeName",value:function(e){return e.replace(/\s/g,"_").replace(ms,"")}},{key:"parseTrackName",value:function(e){var t=_s.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){var r=n.nodeName.substring(i+1);-1!==ys.indexOf(r)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}},{key:"findNode",value:function(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){var i=function(e){for(var n=0;n<e.length;n++){var r=e[n];if(r.name===t||r.uuid===t)return r;var a=i(r.children);if(a)return a}return null},r=i(e.children);if(r)return r}return null}}]),e}();bs.Composite=xs,bs.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},bs.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},bs.prototype.GetterByBindingType=[bs.prototype._getValue_direct,bs.prototype._getValue_array,bs.prototype._getValue_arrayElement,bs.prototype._getValue_toArray],bs.prototype.SetterByBindingTypeAndVersioning=[[bs.prototype._setValue_direct,bs.prototype._setValue_direct_setNeedsUpdate,bs.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[bs.prototype._setValue_array,bs.prototype._setValue_array_setNeedsUpdate,bs.prototype._setValue_array_setMatrixWorldNeedsUpdate],[bs.prototype._setValue_arrayElement,bs.prototype._setValue_arrayElement_setNeedsUpdate,bs.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[bs.prototype._setValue_fromArray,bs.prototype._setValue_fromArray_setNeedsUpdate,bs.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];new Float32Array(1);var ws=function(){"use strict";function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;o(this,e),this.ray=new ln(t,n),this.near=i,this.far=r,this.camera=null,this.layers=new xn,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}return l(e,[{key:"set",value:function(e,t){this.ray.set(e,t)}},{key:"setFromCamera",value:function(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}},{key:"intersectObject",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return Ss(e,this,n,t),n.sort(Ms),n}},{key:"intersectObjects",value:function(e){for(var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=0,r=e.length;i<r;i++)Ss(e[i],this,n,t);return n.sort(Ms),n}}]),e}();function Ms(e,t){return e.distance-t.distance}function Ss(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===i)for(var r=e.children,a=0,o=r.length;a<o;a++)Ss(r[a],t,n,!0)}var Ts,As,Es=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a){return o(this,n),console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),t.call(this,e,i,r,a)}return n}($i),ks=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a,s,l,u){return o(this,n),console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),t.call(this,e,i,r,a,s,l,u)}return n}(Lo);"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:z}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=z),
/*!
 *  howler.js v2.2.3
 *  howlerjs.com
 *
 *  (c) 2013-2020, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */
function(){"use strict";var e=function(){this.init()};e.prototype={init:function(){var e=this||t;return e._counter=1e3,e._html5AudioPool=[],e.html5PoolSize=10,e._codecs={},e._howls=[],e._muted=!1,e._volume=1,e._canPlayEvent="canplaythrough",e._navigator="undefined"!=typeof window&&window.navigator?window.navigator:null,e.masterGain=null,e.noAudio=!1,e.usingWebAudio=!0,e.autoSuspend=!0,e.ctx=null,e.autoUnlock=!0,e._setup(),e},volume:function(e){var n=this||t;if(e=parseFloat(e),n.ctx||c(),void 0!==e&&e>=0&&e<=1){if(n._volume=e,n._muted)return n;n.usingWebAudio&&n.masterGain.gain.setValueAtTime(e,t.ctx.currentTime);for(var i=0;i<n._howls.length;i++)if(!n._howls[i]._webAudio)for(var r=n._howls[i]._getSoundIds(),a=0;a<r.length;a++){var o=n._howls[i]._soundById(r[a]);o&&o._node&&(o._node.volume=o._volume*e)}return n}return n._volume},mute:function(e){var n=this||t;n.ctx||c(),n._muted=e,n.usingWebAudio&&n.masterGain.gain.setValueAtTime(e?0:n._volume,t.ctx.currentTime);for(var i=0;i<n._howls.length;i++)if(!n._howls[i]._webAudio)for(var r=n._howls[i]._getSoundIds(),a=0;a<r.length;a++){var o=n._howls[i]._soundById(r[a]);o&&o._node&&(o._node.muted=!!e||o._muted)}return n},stop:function(){for(var e=this||t,n=0;n<e._howls.length;n++)e._howls[n].stop();return e},unload:function(){for(var e=this||t,n=e._howls.length-1;n>=0;n--)e._howls[n].unload();return e.usingWebAudio&&e.ctx&&void 0!==e.ctx.close&&(e.ctx.close(),e.ctx=null,c()),e},codecs:function(e){return(this||t)._codecs[e.replace(/^x-/,"")]},_setup:function(){var e=this||t;if(e.state=e.ctx&&e.ctx.state||"suspended",e._autoSuspend(),!e.usingWebAudio)if("undefined"!=typeof Audio)try{void 0===(new Audio).oncanplaythrough&&(e._canPlayEvent="canplay")}catch(t){e.noAudio=!0}else e.noAudio=!0;try{(new Audio).muted&&(e.noAudio=!0)}catch(e){}return e.noAudio||e._setupCodecs(),e},_setupCodecs:function(){var e=this||t,n=null;try{n="undefined"!=typeof Audio?new Audio:null}catch(t){return e}if(!n||"function"!=typeof n.canPlayType)return e;var i=n.canPlayType("audio/mpeg;").replace(/^no$/,""),r=e._navigator?e._navigator.userAgent:"",a=r.match(/OPR\/([0-6].)/g),o=a&&parseInt(a[0].split("/")[1],10)<33,s=-1!==r.indexOf("Safari")&&-1===r.indexOf("Chrome"),l=r.match(/Version\/(.*?) /),u=s&&l&&parseInt(l[1],10)<15;return e._codecs={mp3:!(o||!i&&!n.canPlayType("audio/mp3;").replace(/^no$/,"")),mpeg:!!i,opus:!!n.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/,""),ogg:!!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),oga:!!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),wav:!!(n.canPlayType('audio/wav; codecs="1"')||n.canPlayType("audio/wav")).replace(/^no$/,""),aac:!!n.canPlayType("audio/aac;").replace(/^no$/,""),caf:!!n.canPlayType("audio/x-caf;").replace(/^no$/,""),m4a:!!(n.canPlayType("audio/x-m4a;")||n.canPlayType("audio/m4a;")||n.canPlayType("audio/aac;")).replace(/^no$/,""),m4b:!!(n.canPlayType("audio/x-m4b;")||n.canPlayType("audio/m4b;")||n.canPlayType("audio/aac;")).replace(/^no$/,""),mp4:!!(n.canPlayType("audio/x-mp4;")||n.canPlayType("audio/mp4;")||n.canPlayType("audio/aac;")).replace(/^no$/,""),weba:!(u||!n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")),webm:!(u||!n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")),dolby:!!n.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/,""),flac:!!(n.canPlayType("audio/x-flac;")||n.canPlayType("audio/flac;")).replace(/^no$/,"")},e},_unlockAudio:function(){var e=this||t;if(!e._audioUnlocked&&e.ctx){e._audioUnlocked=!1,e.autoUnlock=!1,e._mobileUnloaded||44100===e.ctx.sampleRate||(e._mobileUnloaded=!0,e.unload()),e._scratchBuffer=e.ctx.createBuffer(1,1,22050);var n=function(t){for(;e._html5AudioPool.length<e.html5PoolSize;)try{var i=new Audio;i._unlocked=!0,e._releaseHtml5Audio(i)}catch(t){e.noAudio=!0;break}for(var r=0;r<e._howls.length;r++)if(!e._howls[r]._webAudio)for(var a=e._howls[r]._getSoundIds(),o=0;o<a.length;o++){var s=e._howls[r]._soundById(a[o]);s&&s._node&&!s._node._unlocked&&(s._node._unlocked=!0,s._node.load())}e._autoResume();var l=e.ctx.createBufferSource();l.buffer=e._scratchBuffer,l.connect(e.ctx.destination),void 0===l.start?l.noteOn(0):l.start(0),"function"==typeof e.ctx.resume&&e.ctx.resume(),l.onended=function(){l.disconnect(0),e._audioUnlocked=!0,document.removeEventListener("touchstart",n,!0),document.removeEventListener("touchend",n,!0),document.removeEventListener("click",n,!0),document.removeEventListener("keydown",n,!0);for(var t=0;t<e._howls.length;t++)e._howls[t]._emit("unlock")}};return document.addEventListener("touchstart",n,!0),document.addEventListener("touchend",n,!0),document.addEventListener("click",n,!0),document.addEventListener("keydown",n,!0),e}},_obtainHtml5Audio:function(){var e=this||t;if(e._html5AudioPool.length)return e._html5AudioPool.pop();var n=(new Audio).play();return n&&"undefined"!=typeof Promise&&(n instanceof Promise||"function"==typeof n.then)&&n.catch((function(){console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")})),new Audio},_releaseHtml5Audio:function(e){var n=this||t;return e._unlocked&&n._html5AudioPool.push(e),n},_autoSuspend:function(){var e=this;if(e.autoSuspend&&e.ctx&&void 0!==e.ctx.suspend&&t.usingWebAudio){for(var n=0;n<e._howls.length;n++)if(e._howls[n]._webAudio)for(var i=0;i<e._howls[n]._sounds.length;i++)if(!e._howls[n]._sounds[i]._paused)return e;return e._suspendTimer&&clearTimeout(e._suspendTimer),e._suspendTimer=setTimeout((function(){if(e.autoSuspend){e._suspendTimer=null,e.state="suspending";var t=function(){e.state="suspended",e._resumeAfterSuspend&&(delete e._resumeAfterSuspend,e._autoResume())};e.ctx.suspend().then(t,t)}}),3e4),e}},_autoResume:function(){var e=this;if(e.ctx&&void 0!==e.ctx.resume&&t.usingWebAudio)return"running"===e.state&&"interrupted"!==e.ctx.state&&e._suspendTimer?(clearTimeout(e._suspendTimer),e._suspendTimer=null):"suspended"===e.state||"running"===e.state&&"interrupted"===e.ctx.state?(e.ctx.resume().then((function(){e.state="running";for(var t=0;t<e._howls.length;t++)e._howls[t]._emit("resume")})),e._suspendTimer&&(clearTimeout(e._suspendTimer),e._suspendTimer=null)):"suspending"===e.state&&(e._resumeAfterSuspend=!0),e}};var t=new e,i=function(e){e.src&&0!==e.src.length?this.init(e):console.error("An array of source files must be passed with any new Howl.")};i.prototype={init:function(e){var n=this;return t.ctx||c(),n._autoplay=e.autoplay||!1,n._format="string"!=typeof e.format?e.format:[e.format],n._html5=e.html5||!1,n._muted=e.mute||!1,n._loop=e.loop||!1,n._pool=e.pool||5,n._preload="boolean"!=typeof e.preload&&"metadata"!==e.preload||e.preload,n._rate=e.rate||1,n._sprite=e.sprite||{},n._src="string"!=typeof e.src?e.src:[e.src],n._volume=void 0!==e.volume?e.volume:1,n._xhr={method:e.xhr&&e.xhr.method?e.xhr.method:"GET",headers:e.xhr&&e.xhr.headers?e.xhr.headers:null,withCredentials:!(!e.xhr||!e.xhr.withCredentials)&&e.xhr.withCredentials},n._duration=0,n._state="unloaded",n._sounds=[],n._endTimers={},n._queue=[],n._playLock=!1,n._onend=e.onend?[{fn:e.onend}]:[],n._onfade=e.onfade?[{fn:e.onfade}]:[],n._onload=e.onload?[{fn:e.onload}]:[],n._onloaderror=e.onloaderror?[{fn:e.onloaderror}]:[],n._onplayerror=e.onplayerror?[{fn:e.onplayerror}]:[],n._onpause=e.onpause?[{fn:e.onpause}]:[],n._onplay=e.onplay?[{fn:e.onplay}]:[],n._onstop=e.onstop?[{fn:e.onstop}]:[],n._onmute=e.onmute?[{fn:e.onmute}]:[],n._onvolume=e.onvolume?[{fn:e.onvolume}]:[],n._onrate=e.onrate?[{fn:e.onrate}]:[],n._onseek=e.onseek?[{fn:e.onseek}]:[],n._onunlock=e.onunlock?[{fn:e.onunlock}]:[],n._onresume=[],n._webAudio=t.usingWebAudio&&!n._html5,void 0!==t.ctx&&t.ctx&&t.autoUnlock&&t._unlockAudio(),t._howls.push(n),n._autoplay&&n._queue.push({event:"play",action:function(){n.play()}}),n._preload&&"none"!==n._preload&&n.load(),n},load:function(){var e=this,n=null;if(t.noAudio)e._emit("loaderror",null,"No audio support.");else{"string"==typeof e._src&&(e._src=[e._src]);for(var i=0;i<e._src.length;i++){var a,s;if(e._format&&e._format[i])a=e._format[i];else{if("string"!=typeof(s=e._src[i])){e._emit("loaderror",null,"Non-string found in selected audio sources - ignoring.");continue}(a=/^data:audio\/([^;,]+);/i.exec(s))||(a=/\.([^.]+)$/.exec(s.split("?",1)[0])),a&&(a=a[1].toLowerCase())}if(a||console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),a&&t.codecs(a)){n=e._src[i];break}}if(n)return e._src=n,e._state="loading","https:"===window.location.protocol&&"http:"===n.slice(0,5)&&(e._html5=!0,e._webAudio=!1),new r(e),e._webAudio&&o(e),e;e._emit("loaderror",null,"No codec support for selected audio sources.")}},play:function(e,n){var i=this,r=null;if("number"==typeof e)r=e,e=null;else{if("string"==typeof e&&"loaded"===i._state&&!i._sprite[e])return null;if(void 0===e&&(e="__default",!i._playLock)){for(var a=0,o=0;o<i._sounds.length;o++)i._sounds[o]._paused&&!i._sounds[o]._ended&&(a++,r=i._sounds[o]._id);1===a?e=null:r=null}}var s=r?i._soundById(r):i._inactiveSound();if(!s)return null;if(r&&!e&&(e=s._sprite||"__default"),"loaded"!==i._state){s._sprite=e,s._ended=!1;var l=s._id;return i._queue.push({event:"play",action:function(){i.play(l)}}),l}if(r&&!s._paused)return n||i._loadQueue("play"),s._id;i._webAudio&&t._autoResume();var u=Math.max(0,s._seek>0?s._seek:i._sprite[e][0]/1e3),c=Math.max(0,(i._sprite[e][0]+i._sprite[e][1])/1e3-u),h=1e3*c/Math.abs(s._rate),d=i._sprite[e][0]/1e3,f=(i._sprite[e][0]+i._sprite[e][1])/1e3;s._sprite=e,s._ended=!1;var p=function(){s._paused=!1,s._seek=u,s._start=d,s._stop=f,s._loop=!(!s._loop&&!i._sprite[e][2])};if(!(u>=f)){var m=s._node;if(i._webAudio){var v=function(){i._playLock=!1,p(),i._refreshBuffer(s);var e=s._muted||i._muted?0:s._volume;m.gain.setValueAtTime(e,t.ctx.currentTime),s._playStart=t.ctx.currentTime,void 0===m.bufferSource.start?s._loop?m.bufferSource.noteGrainOn(0,u,86400):m.bufferSource.noteGrainOn(0,u,c):s._loop?m.bufferSource.start(0,u,86400):m.bufferSource.start(0,u,c),h!==1/0&&(i._endTimers[s._id]=setTimeout(i._ended.bind(i,s),h)),n||setTimeout((function(){i._emit("play",s._id),i._loadQueue()}),0)};"running"===t.state&&"interrupted"!==t.ctx.state?v():(i._playLock=!0,i.once("resume",v),i._clearTimer(s._id))}else{var g=function(){m.currentTime=u,m.muted=s._muted||i._muted||t._muted||m.muted,m.volume=s._volume*t.volume(),m.playbackRate=s._rate;try{var r=m.play();if(r&&"undefined"!=typeof Promise&&(r instanceof Promise||"function"==typeof r.then)?(i._playLock=!0,p(),r.then((function(){i._playLock=!1,m._unlocked=!0,n?i._loadQueue():i._emit("play",s._id)})).catch((function(){i._playLock=!1,i._emit("playerror",s._id,"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."),s._ended=!0,s._paused=!0}))):n||(i._playLock=!1,p(),i._emit("play",s._id)),m.playbackRate=s._rate,m.paused)return void i._emit("playerror",s._id,"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");"__default"!==e||s._loop?i._endTimers[s._id]=setTimeout(i._ended.bind(i,s),h):(i._endTimers[s._id]=function(){i._ended(s),m.removeEventListener("ended",i._endTimers[s._id],!1)},m.addEventListener("ended",i._endTimers[s._id],!1))}catch(e){i._emit("playerror",s._id,e)}};"data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"===m.src&&(m.src=i._src,m.load());var _=window&&window.ejecta||!m.readyState&&t._navigator.isCocoonJS;if(m.readyState>=3||_)g();else{i._playLock=!0,i._state="loading";var y=function(){i._state="loaded",g(),m.removeEventListener(t._canPlayEvent,y,!1)};m.addEventListener(t._canPlayEvent,y,!1),i._clearTimer(s._id)}}return s._id}i._ended(s)},pause:function(e){var t=this;if("loaded"!==t._state||t._playLock)return t._queue.push({event:"pause",action:function(){t.pause(e)}}),t;for(var n=t._getSoundIds(e),i=0;i<n.length;i++){t._clearTimer(n[i]);var r=t._soundById(n[i]);if(r&&!r._paused&&(r._seek=t.seek(n[i]),r._rateSeek=0,r._paused=!0,t._stopFade(n[i]),r._node))if(t._webAudio){if(!r._node.bufferSource)continue;void 0===r._node.bufferSource.stop?r._node.bufferSource.noteOff(0):r._node.bufferSource.stop(0),t._cleanBuffer(r._node)}else isNaN(r._node.duration)&&r._node.duration!==1/0||r._node.pause();arguments[1]||t._emit("pause",r?r._id:null)}return t},stop:function(e,t){var n=this;if("loaded"!==n._state||n._playLock)return n._queue.push({event:"stop",action:function(){n.stop(e)}}),n;for(var i=n._getSoundIds(e),r=0;r<i.length;r++){n._clearTimer(i[r]);var a=n._soundById(i[r]);a&&(a._seek=a._start||0,a._rateSeek=0,a._paused=!0,a._ended=!0,n._stopFade(i[r]),a._node&&(n._webAudio?a._node.bufferSource&&(void 0===a._node.bufferSource.stop?a._node.bufferSource.noteOff(0):a._node.bufferSource.stop(0),n._cleanBuffer(a._node)):isNaN(a._node.duration)&&a._node.duration!==1/0||(a._node.currentTime=a._start||0,a._node.pause(),a._node.duration===1/0&&n._clearSound(a._node))),t||n._emit("stop",a._id))}return n},mute:function(e,n){var i=this;if("loaded"!==i._state||i._playLock)return i._queue.push({event:"mute",action:function(){i.mute(e,n)}}),i;if(void 0===n){if("boolean"!=typeof e)return i._muted;i._muted=e}for(var r=i._getSoundIds(n),a=0;a<r.length;a++){var o=i._soundById(r[a]);o&&(o._muted=e,o._interval&&i._stopFade(o._id),i._webAudio&&o._node?o._node.gain.setValueAtTime(e?0:o._volume,t.ctx.currentTime):o._node&&(o._node.muted=!!t._muted||e),i._emit("mute",o._id))}return i},volume:function(){var e,n,i,r=this,a=arguments;if(0===a.length)return r._volume;if(1===a.length||2===a.length&&void 0===a[1]){var o=r._getSoundIds(),s=o.indexOf(a[0]);s>=0?n=parseInt(a[0],10):e=parseFloat(a[0])}else a.length>=2&&(e=parseFloat(a[0]),n=parseInt(a[1],10));if(!(void 0!==e&&e>=0&&e<=1))return(i=n?r._soundById(n):r._sounds[0])?i._volume:0;if("loaded"!==r._state||r._playLock)return r._queue.push({event:"volume",action:function(){r.volume.apply(r,a)}}),r;void 0===n&&(r._volume=e),n=r._getSoundIds(n);for(var l=0;l<n.length;l++)(i=r._soundById(n[l]))&&(i._volume=e,a[2]||r._stopFade(n[l]),r._webAudio&&i._node&&!i._muted?i._node.gain.setValueAtTime(e,t.ctx.currentTime):i._node&&!i._muted&&(i._node.volume=e*t.volume()),r._emit("volume",i._id));return r},fade:function(e,n,i,r){var a=this;if("loaded"!==a._state||a._playLock)return a._queue.push({event:"fade",action:function(){a.fade(e,n,i,r)}}),a;e=Math.min(Math.max(0,parseFloat(e)),1),n=Math.min(Math.max(0,parseFloat(n)),1),i=parseFloat(i),a.volume(e,r);for(var o=a._getSoundIds(r),s=0;s<o.length;s++){var l=a._soundById(o[s]);if(l){if(r||a._stopFade(o[s]),a._webAudio&&!l._muted){var u=t.ctx.currentTime,c=u+i/1e3;l._volume=e,l._node.gain.setValueAtTime(e,u),l._node.gain.linearRampToValueAtTime(n,c)}a._startFadeInterval(l,e,n,i,o[s],void 0===r)}}return a},_startFadeInterval:function(e,t,n,i,r,a){var o=this,s=t,l=n-t,u=Math.abs(l/.01),c=Math.max(4,u>0?i/u:i),h=Date.now();e._fadeTo=n,e._interval=setInterval((function(){var r=(Date.now()-h)/i;h=Date.now(),s+=l*r,s=Math.round(100*s)/100,s=l<0?Math.max(n,s):Math.min(n,s),o._webAudio?e._volume=s:o.volume(s,e._id,!0),a&&(o._volume=s),(n<t&&s<=n||n>t&&s>=n)&&(clearInterval(e._interval),e._interval=null,e._fadeTo=null,o.volume(n,e._id),o._emit("fade",e._id))}),c)},_stopFade:function(e){var n=this,i=n._soundById(e);return i&&i._interval&&(n._webAudio&&i._node.gain.cancelScheduledValues(t.ctx.currentTime),clearInterval(i._interval),i._interval=null,n.volume(i._fadeTo,e),i._fadeTo=null,n._emit("fade",e)),n},loop:function(){var e,t,n,i=this,r=arguments;if(0===r.length)return i._loop;if(1===r.length){if("boolean"!=typeof r[0])return!!(n=i._soundById(parseInt(r[0],10)))&&n._loop;e=r[0],i._loop=e}else 2===r.length&&(e=r[0],t=parseInt(r[1],10));for(var a=i._getSoundIds(t),o=0;o<a.length;o++)(n=i._soundById(a[o]))&&(n._loop=e,i._webAudio&&n._node&&n._node.bufferSource&&(n._node.bufferSource.loop=e,e&&(n._node.bufferSource.loopStart=n._start||0,n._node.bufferSource.loopEnd=n._stop,i.playing(a[o])&&(i.pause(a[o],!0),i.play(a[o],!0)))));return i},rate:function(){var e,n,i,r=this,a=arguments;if(0===a.length)n=r._sounds[0]._id;else if(1===a.length){var o=r._getSoundIds(),s=o.indexOf(a[0]);s>=0?n=parseInt(a[0],10):e=parseFloat(a[0])}else 2===a.length&&(e=parseFloat(a[0]),n=parseInt(a[1],10));if("number"!=typeof e)return(i=r._soundById(n))?i._rate:r._rate;if("loaded"!==r._state||r._playLock)return r._queue.push({event:"rate",action:function(){r.rate.apply(r,a)}}),r;void 0===n&&(r._rate=e),n=r._getSoundIds(n);for(var l=0;l<n.length;l++)if(i=r._soundById(n[l])){r.playing(n[l])&&(i._rateSeek=r.seek(n[l]),i._playStart=r._webAudio?t.ctx.currentTime:i._playStart),i._rate=e,r._webAudio&&i._node&&i._node.bufferSource?i._node.bufferSource.playbackRate.setValueAtTime(e,t.ctx.currentTime):i._node&&(i._node.playbackRate=e);var u=r.seek(n[l]),c=(r._sprite[i._sprite][0]+r._sprite[i._sprite][1])/1e3-u,h=1e3*c/Math.abs(i._rate);!r._endTimers[n[l]]&&i._paused||(r._clearTimer(n[l]),r._endTimers[n[l]]=setTimeout(r._ended.bind(r,i),h)),r._emit("rate",i._id)}return r},seek:function(){var e,n,i=this,r=arguments;if(0===r.length)i._sounds.length&&(n=i._sounds[0]._id);else if(1===r.length){var a=i._getSoundIds(),o=a.indexOf(r[0]);o>=0?n=parseInt(r[0],10):i._sounds.length&&(n=i._sounds[0]._id,e=parseFloat(r[0]))}else 2===r.length&&(e=parseFloat(r[0]),n=parseInt(r[1],10));if(void 0===n)return 0;if("number"==typeof e&&("loaded"!==i._state||i._playLock))return i._queue.push({event:"seek",action:function(){i.seek.apply(i,r)}}),i;var s=i._soundById(n);if(s){if(!("number"==typeof e&&e>=0)){if(i._webAudio){var l=i.playing(n)?t.ctx.currentTime-s._playStart:0,u=s._rateSeek?s._rateSeek-s._seek:0;return s._seek+(u+l*Math.abs(s._rate))}return s._node.currentTime}var c=i.playing(n);c&&i.pause(n,!0),s._seek=e,s._ended=!1,i._clearTimer(n),i._webAudio||!s._node||isNaN(s._node.duration)||(s._node.currentTime=e);var h=function(){c&&i.play(n,!0),i._emit("seek",n)};if(c&&!i._webAudio){var d=function(){i._playLock?setTimeout(d,0):h()};setTimeout(d,0)}else h()}return i},playing:function(e){var t=this;if("number"==typeof e){var n=t._soundById(e);return!!n&&!n._paused}for(var i=0;i<t._sounds.length;i++)if(!t._sounds[i]._paused)return!0;return!1},duration:function(e){var t=this,n=t._duration,i=t._soundById(e);return i&&(n=t._sprite[i._sprite][1]/1e3),n},state:function(){return this._state},unload:function(){for(var e=this,n=e._sounds,i=0;i<n.length;i++)n[i]._paused||e.stop(n[i]._id),e._webAudio||(e._clearSound(n[i]._node),n[i]._node.removeEventListener("error",n[i]._errorFn,!1),n[i]._node.removeEventListener(t._canPlayEvent,n[i]._loadFn,!1),n[i]._node.removeEventListener("ended",n[i]._endFn,!1),t._releaseHtml5Audio(n[i]._node)),delete n[i]._node,e._clearTimer(n[i]._id);var r=t._howls.indexOf(e);r>=0&&t._howls.splice(r,1);var o=!0;for(i=0;i<t._howls.length;i++)if(t._howls[i]._src===e._src||e._src.indexOf(t._howls[i]._src)>=0){o=!1;break}return a&&o&&delete a[e._src],t.noAudio=!1,e._state="unloaded",e._sounds=[],e=null,null},on:function(e,t,n,i){var r=this["_on"+e];return"function"==typeof t&&r.push(i?{id:n,fn:t,once:i}:{id:n,fn:t}),this},off:function(e,t,n){var i=this,r=i["_on"+e],a=0;if("number"==typeof t&&(n=t,t=null),t||n)for(a=0;a<r.length;a++){var o=n===r[a].id;if(t===r[a].fn&&o||!t&&o){r.splice(a,1);break}}else if(e)i["_on"+e]=[];else{var s=Object.keys(i);for(a=0;a<s.length;a++)0===s[a].indexOf("_on")&&Array.isArray(i[s[a]])&&(i[s[a]]=[])}return i},once:function(e,t,n){return this.on(e,t,n,1),this},_emit:function(e,t,n){for(var i=this,r=i["_on"+e],a=r.length-1;a>=0;a--)r[a].id&&r[a].id!==t&&"load"!==e||(setTimeout(function(e){e.call(this,t,n)}.bind(i,r[a].fn),0),r[a].once&&i.off(e,r[a].fn,r[a].id));return i._loadQueue(e),i},_loadQueue:function(e){var t=this;if(t._queue.length>0){var n=t._queue[0];n.event===e&&(t._queue.shift(),t._loadQueue()),e||n.action()}return t},_ended:function(e){var n=this,i=e._sprite;if(!n._webAudio&&e._node&&!e._node.paused&&!e._node.ended&&e._node.currentTime<e._stop)return setTimeout(n._ended.bind(n,e),100),n;var r=!(!e._loop&&!n._sprite[i][2]);if(n._emit("end",e._id),!n._webAudio&&r&&n.stop(e._id,!0).play(e._id),n._webAudio&&r){n._emit("play",e._id),e._seek=e._start||0,e._rateSeek=0,e._playStart=t.ctx.currentTime;var a=1e3*(e._stop-e._start)/Math.abs(e._rate);n._endTimers[e._id]=setTimeout(n._ended.bind(n,e),a)}return n._webAudio&&!r&&(e._paused=!0,e._ended=!0,e._seek=e._start||0,e._rateSeek=0,n._clearTimer(e._id),n._cleanBuffer(e._node),t._autoSuspend()),n._webAudio||r||n.stop(e._id,!0),n},_clearTimer:function(e){var t=this;if(t._endTimers[e]){if("function"!=typeof t._endTimers[e])clearTimeout(t._endTimers[e]);else{var n=t._soundById(e);n&&n._node&&n._node.removeEventListener("ended",t._endTimers[e],!1)}delete t._endTimers[e]}return t},_soundById:function(e){for(var t=this,n=0;n<t._sounds.length;n++)if(e===t._sounds[n]._id)return t._sounds[n];return null},_inactiveSound:function(){var e=this;e._drain();for(var t=0;t<e._sounds.length;t++)if(e._sounds[t]._ended)return e._sounds[t].reset();return new r(e)},_drain:function(){var e=this,t=e._pool,n=0,i=0;if(!(e._sounds.length<t)){for(i=0;i<e._sounds.length;i++)e._sounds[i]._ended&&n++;for(i=e._sounds.length-1;i>=0;i--){if(n<=t)return;e._sounds[i]._ended&&(e._webAudio&&e._sounds[i]._node&&e._sounds[i]._node.disconnect(0),e._sounds.splice(i,1),n--)}}},_getSoundIds:function(e){if(void 0===e){for(var t=[],n=0;n<this._sounds.length;n++)t.push(this._sounds[n]._id);return t}return[e]},_refreshBuffer:function(e){return e._node.bufferSource=t.ctx.createBufferSource(),e._node.bufferSource.buffer=a[this._src],e._panner?e._node.bufferSource.connect(e._panner):e._node.bufferSource.connect(e._node),e._node.bufferSource.loop=e._loop,e._loop&&(e._node.bufferSource.loopStart=e._start||0,e._node.bufferSource.loopEnd=e._stop||0),e._node.bufferSource.playbackRate.setValueAtTime(e._rate,t.ctx.currentTime),this},_cleanBuffer:function(e){var n=t._navigator&&t._navigator.vendor.indexOf("Apple")>=0;if(t._scratchBuffer&&e.bufferSource&&(e.bufferSource.onended=null,e.bufferSource.disconnect(0),n))try{e.bufferSource.buffer=t._scratchBuffer}catch(e){}return e.bufferSource=null,this},_clearSound:function(e){/MSIE |Trident\//.test(t._navigator&&t._navigator.userAgent)||(e.src="data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA")}};var r=function(e){this._parent=e,this.init()};r.prototype={init:function(){var e=this,n=e._parent;return e._muted=n._muted,e._loop=n._loop,e._volume=n._volume,e._rate=n._rate,e._seek=0,e._paused=!0,e._ended=!0,e._sprite="__default",e._id=++t._counter,n._sounds.push(e),e.create(),e},create:function(){var e=this,n=e._parent,i=t._muted||e._muted||e._parent._muted?0:e._volume;return n._webAudio?(e._node=void 0===t.ctx.createGain?t.ctx.createGainNode():t.ctx.createGain(),e._node.gain.setValueAtTime(i,t.ctx.currentTime),e._node.paused=!0,e._node.connect(t.masterGain)):t.noAudio||(e._node=t._obtainHtml5Audio(),e._errorFn=e._errorListener.bind(e),e._node.addEventListener("error",e._errorFn,!1),e._loadFn=e._loadListener.bind(e),e._node.addEventListener(t._canPlayEvent,e._loadFn,!1),e._endFn=e._endListener.bind(e),e._node.addEventListener("ended",e._endFn,!1),e._node.src=n._src,e._node.preload=!0===n._preload?"auto":n._preload,e._node.volume=i*t.volume(),e._node.load()),e},reset:function(){var e=this,n=e._parent;return e._muted=n._muted,e._loop=n._loop,e._volume=n._volume,e._rate=n._rate,e._seek=0,e._rateSeek=0,e._paused=!0,e._ended=!0,e._sprite="__default",e._id=++t._counter,e},_errorListener:function(){var e=this;e._parent._emit("loaderror",e._id,e._node.error?e._node.error.code:0),e._node.removeEventListener("error",e._errorFn,!1)},_loadListener:function(){var e=this,n=e._parent;n._duration=Math.ceil(10*e._node.duration)/10,0===Object.keys(n._sprite).length&&(n._sprite={__default:[0,1e3*n._duration]}),"loaded"!==n._state&&(n._state="loaded",n._emit("load"),n._loadQueue()),e._node.removeEventListener(t._canPlayEvent,e._loadFn,!1)},_endListener:function(){var e=this,t=e._parent;t._duration===1/0&&(t._duration=Math.ceil(10*e._node.duration)/10,t._sprite.__default[1]===1/0&&(t._sprite.__default[1]=1e3*t._duration),t._ended(e)),e._node.removeEventListener("ended",e._endFn,!1)}};var a={},o=function(e){var t=e._src;if(a[t])return e._duration=a[t].duration,void u(e);if(/^data:[^;]+;base64,/.test(t)){for(var n=atob(t.split(",")[1]),i=new Uint8Array(n.length),r=0;r<n.length;++r)i[r]=n.charCodeAt(r);l(i.buffer,e)}else{var o=new XMLHttpRequest;o.open(e._xhr.method,t,!0),o.withCredentials=e._xhr.withCredentials,o.responseType="arraybuffer",e._xhr.headers&&Object.keys(e._xhr.headers).forEach((function(t){o.setRequestHeader(t,e._xhr.headers[t])})),o.onload=function(){var t=(o.status+"")[0];"0"===t||"2"===t||"3"===t?l(o.response,e):e._emit("loaderror",null,"Failed loading audio file with status: "+o.status+".")},o.onerror=function(){e._webAudio&&(e._html5=!0,e._webAudio=!1,e._sounds=[],delete a[t],e.load())},s(o)}},s=function(e){try{e.send()}catch(t){e.onerror()}},l=function(e,n){var i=function(){n._emit("loaderror",null,"Decoding audio data failed.")},r=function(e){e&&n._sounds.length>0?(a[n._src]=e,u(n,e)):i()};"undefined"!=typeof Promise&&1===t.ctx.decodeAudioData.length?t.ctx.decodeAudioData(e).then(r).catch(i):t.ctx.decodeAudioData(e,r,i)},u=function(e,t){t&&!e._duration&&(e._duration=t.duration),0===Object.keys(e._sprite).length&&(e._sprite={__default:[0,1e3*e._duration]}),"loaded"!==e._state&&(e._state="loaded",e._emit("load"),e._loadQueue())},c=function(){if(t.usingWebAudio){try{"undefined"!=typeof AudioContext?t.ctx=new AudioContext:"undefined"!=typeof webkitAudioContext?t.ctx=new webkitAudioContext:t.usingWebAudio=!1}catch(e){t.usingWebAudio=!1}t.ctx||(t.usingWebAudio=!1);var e=/iP(hone|od|ad)/.test(t._navigator&&t._navigator.platform),n=t._navigator&&t._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),i=n?parseInt(n[1],10):null;if(e&&i&&i<9){var r=/safari/.test(t._navigator&&t._navigator.userAgent.toLowerCase());t._navigator&&!r&&(t.usingWebAudio=!1)}t.usingWebAudio&&(t.masterGain=void 0===t.ctx.createGain?t.ctx.createGainNode():t.ctx.createGain(),t.masterGain.gain.setValueAtTime(t._muted?0:t._volume,t.ctx.currentTime),t.masterGain.connect(t.ctx.destination)),t._setup()}};"function"==typeof define&&define.amd&&define([],(function(){return{Howler:t,Howl:i}})),Ts=t,As=i,void 0!==n?(n.HowlerGlobal=e,n.Howler=t,n.Howl=i,n.Sound=r):"undefined"!=typeof window&&(window.HowlerGlobal=e,window.Howler=t,window.Howl=i,window.Sound=r)}(),
/*!
 *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.
 *  
 *  howler.js v2.2.3
 *  howlerjs.com
 *
 *  (c) 2013-2020, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */
function(){"use strict";var e;HowlerGlobal.prototype._pos=[0,0,0],HowlerGlobal.prototype._orientation=[0,0,-1,0,1,0],HowlerGlobal.prototype.stereo=function(e){var t=this;if(!t.ctx||!t.ctx.listener)return t;for(var n=t._howls.length-1;n>=0;n--)t._howls[n].stereo(e);return t},HowlerGlobal.prototype.pos=function(e,t,n){var i=this;return i.ctx&&i.ctx.listener?(t="number"!=typeof t?i._pos[1]:t,n="number"!=typeof n?i._pos[2]:n,"number"!=typeof e?i._pos:(i._pos=[e,t,n],void 0!==i.ctx.listener.positionX?(i.ctx.listener.positionX.setTargetAtTime(i._pos[0],Howler.ctx.currentTime,.1),i.ctx.listener.positionY.setTargetAtTime(i._pos[1],Howler.ctx.currentTime,.1),i.ctx.listener.positionZ.setTargetAtTime(i._pos[2],Howler.ctx.currentTime,.1)):i.ctx.listener.setPosition(i._pos[0],i._pos[1],i._pos[2]),i)):i},HowlerGlobal.prototype.orientation=function(e,t,n,i,r,a){var o=this;if(!o.ctx||!o.ctx.listener)return o;var s=o._orientation;return t="number"!=typeof t?s[1]:t,n="number"!=typeof n?s[2]:n,i="number"!=typeof i?s[3]:i,r="number"!=typeof r?s[4]:r,a="number"!=typeof a?s[5]:a,"number"!=typeof e?s:(o._orientation=[e,t,n,i,r,a],void 0!==o.ctx.listener.forwardX?(o.ctx.listener.forwardX.setTargetAtTime(e,Howler.ctx.currentTime,.1),o.ctx.listener.forwardY.setTargetAtTime(t,Howler.ctx.currentTime,.1),o.ctx.listener.forwardZ.setTargetAtTime(n,Howler.ctx.currentTime,.1),o.ctx.listener.upX.setTargetAtTime(i,Howler.ctx.currentTime,.1),o.ctx.listener.upY.setTargetAtTime(r,Howler.ctx.currentTime,.1),o.ctx.listener.upZ.setTargetAtTime(a,Howler.ctx.currentTime,.1)):o.ctx.listener.setOrientation(e,t,n,i,r,a),o)},Howl.prototype.init=(e=Howl.prototype.init,function(t){var n=this;return n._orientation=t.orientation||[1,0,0],n._stereo=t.stereo||null,n._pos=t.pos||null,n._pannerAttr={coneInnerAngle:void 0!==t.coneInnerAngle?t.coneInnerAngle:360,coneOuterAngle:void 0!==t.coneOuterAngle?t.coneOuterAngle:360,coneOuterGain:void 0!==t.coneOuterGain?t.coneOuterGain:0,distanceModel:void 0!==t.distanceModel?t.distanceModel:"inverse",maxDistance:void 0!==t.maxDistance?t.maxDistance:1e4,panningModel:void 0!==t.panningModel?t.panningModel:"HRTF",refDistance:void 0!==t.refDistance?t.refDistance:1,rolloffFactor:void 0!==t.rolloffFactor?t.rolloffFactor:1},n._onstereo=t.onstereo?[{fn:t.onstereo}]:[],n._onpos=t.onpos?[{fn:t.onpos}]:[],n._onorientation=t.onorientation?[{fn:t.onorientation}]:[],e.call(this,t)}),Howl.prototype.stereo=function(e,n){var i=this;if(!i._webAudio)return i;if("loaded"!==i._state)return i._queue.push({event:"stereo",action:function(){i.stereo(e,n)}}),i;var r=void 0===Howler.ctx.createStereoPanner?"spatial":"stereo";if(void 0===n){if("number"!=typeof e)return i._stereo;i._stereo=e,i._pos=[e,0,0]}for(var a=i._getSoundIds(n),o=0;o<a.length;o++){var s=i._soundById(a[o]);if(s){if("number"!=typeof e)return s._stereo;s._stereo=e,s._pos=[e,0,0],s._node&&(s._pannerAttr.panningModel="equalpower",s._panner&&s._panner.pan||t(s,r),"spatial"===r?void 0!==s._panner.positionX?(s._panner.positionX.setValueAtTime(e,Howler.ctx.currentTime),s._panner.positionY.setValueAtTime(0,Howler.ctx.currentTime),s._panner.positionZ.setValueAtTime(0,Howler.ctx.currentTime)):s._panner.setPosition(e,0,0):s._panner.pan.setValueAtTime(e,Howler.ctx.currentTime)),i._emit("stereo",s._id)}}return i},Howl.prototype.pos=function(e,n,i,r){var a=this;if(!a._webAudio)return a;if("loaded"!==a._state)return a._queue.push({event:"pos",action:function(){a.pos(e,n,i,r)}}),a;if(n="number"!=typeof n?0:n,i="number"!=typeof i?-.5:i,void 0===r){if("number"!=typeof e)return a._pos;a._pos=[e,n,i]}for(var o=a._getSoundIds(r),s=0;s<o.length;s++){var l=a._soundById(o[s]);if(l){if("number"!=typeof e)return l._pos;l._pos=[e,n,i],l._node&&(l._panner&&!l._panner.pan||t(l,"spatial"),void 0!==l._panner.positionX?(l._panner.positionX.setValueAtTime(e,Howler.ctx.currentTime),l._panner.positionY.setValueAtTime(n,Howler.ctx.currentTime),l._panner.positionZ.setValueAtTime(i,Howler.ctx.currentTime)):l._panner.setPosition(e,n,i)),a._emit("pos",l._id)}}return a},Howl.prototype.orientation=function(e,n,i,r){var a=this;if(!a._webAudio)return a;if("loaded"!==a._state)return a._queue.push({event:"orientation",action:function(){a.orientation(e,n,i,r)}}),a;if(n="number"!=typeof n?a._orientation[1]:n,i="number"!=typeof i?a._orientation[2]:i,void 0===r){if("number"!=typeof e)return a._orientation;a._orientation=[e,n,i]}for(var o=a._getSoundIds(r),s=0;s<o.length;s++){var l=a._soundById(o[s]);if(l){if("number"!=typeof e)return l._orientation;l._orientation=[e,n,i],l._node&&(l._panner||(l._pos||(l._pos=a._pos||[0,0,-.5]),t(l,"spatial")),void 0!==l._panner.orientationX?(l._panner.orientationX.setValueAtTime(e,Howler.ctx.currentTime),l._panner.orientationY.setValueAtTime(n,Howler.ctx.currentTime),l._panner.orientationZ.setValueAtTime(i,Howler.ctx.currentTime)):l._panner.setOrientation(e,n,i)),a._emit("orientation",l._id)}}return a},Howl.prototype.pannerAttr=function(){var e,n,i,r=this,a=arguments;if(!r._webAudio)return r;if(0===a.length)return r._pannerAttr;if(1===a.length){if("object"!=typeof a[0])return(i=r._soundById(parseInt(a[0],10)))?i._pannerAttr:r._pannerAttr;e=a[0],void 0===n&&(e.pannerAttr||(e.pannerAttr={coneInnerAngle:e.coneInnerAngle,coneOuterAngle:e.coneOuterAngle,coneOuterGain:e.coneOuterGain,distanceModel:e.distanceModel,maxDistance:e.maxDistance,refDistance:e.refDistance,rolloffFactor:e.rolloffFactor,panningModel:e.panningModel}),r._pannerAttr={coneInnerAngle:void 0!==e.pannerAttr.coneInnerAngle?e.pannerAttr.coneInnerAngle:r._coneInnerAngle,coneOuterAngle:void 0!==e.pannerAttr.coneOuterAngle?e.pannerAttr.coneOuterAngle:r._coneOuterAngle,coneOuterGain:void 0!==e.pannerAttr.coneOuterGain?e.pannerAttr.coneOuterGain:r._coneOuterGain,distanceModel:void 0!==e.pannerAttr.distanceModel?e.pannerAttr.distanceModel:r._distanceModel,maxDistance:void 0!==e.pannerAttr.maxDistance?e.pannerAttr.maxDistance:r._maxDistance,refDistance:void 0!==e.pannerAttr.refDistance?e.pannerAttr.refDistance:r._refDistance,rolloffFactor:void 0!==e.pannerAttr.rolloffFactor?e.pannerAttr.rolloffFactor:r._rolloffFactor,panningModel:void 0!==e.pannerAttr.panningModel?e.pannerAttr.panningModel:r._panningModel})}else 2===a.length&&(e=a[0],n=parseInt(a[1],10));for(var o=r._getSoundIds(n),s=0;s<o.length;s++)if(i=r._soundById(o[s])){var l=i._pannerAttr;l={coneInnerAngle:void 0!==e.coneInnerAngle?e.coneInnerAngle:l.coneInnerAngle,coneOuterAngle:void 0!==e.coneOuterAngle?e.coneOuterAngle:l.coneOuterAngle,coneOuterGain:void 0!==e.coneOuterGain?e.coneOuterGain:l.coneOuterGain,distanceModel:void 0!==e.distanceModel?e.distanceModel:l.distanceModel,maxDistance:void 0!==e.maxDistance?e.maxDistance:l.maxDistance,refDistance:void 0!==e.refDistance?e.refDistance:l.refDistance,rolloffFactor:void 0!==e.rolloffFactor?e.rolloffFactor:l.rolloffFactor,panningModel:void 0!==e.panningModel?e.panningModel:l.panningModel};var u=i._panner;u?(u.coneInnerAngle=l.coneInnerAngle,u.coneOuterAngle=l.coneOuterAngle,u.coneOuterGain=l.coneOuterGain,u.distanceModel=l.distanceModel,u.maxDistance=l.maxDistance,u.refDistance=l.refDistance,u.rolloffFactor=l.rolloffFactor,u.panningModel=l.panningModel):(i._pos||(i._pos=r._pos||[0,0,-.5]),t(i,"spatial"))}return r},Sound.prototype.init=function(e){return function(){var t=this,n=t._parent;t._orientation=n._orientation,t._stereo=n._stereo,t._pos=n._pos,t._pannerAttr=n._pannerAttr,e.call(this),t._stereo?n.stereo(t._stereo):t._pos&&n.pos(t._pos[0],t._pos[1],t._pos[2],t._id)}}(Sound.prototype.init),Sound.prototype.reset=function(e){return function(){var t=this,n=t._parent;return t._orientation=n._orientation,t._stereo=n._stereo,t._pos=n._pos,t._pannerAttr=n._pannerAttr,t._stereo?n.stereo(t._stereo):t._pos?n.pos(t._pos[0],t._pos[1],t._pos[2],t._id):t._panner&&(t._panner.disconnect(0),t._panner=void 0,n._refreshBuffer(t)),e.call(this)}}(Sound.prototype.reset);var t=function(e,t){"spatial"===(t=t||"spatial")?(e._panner=Howler.ctx.createPanner(),e._panner.coneInnerAngle=e._pannerAttr.coneInnerAngle,e._panner.coneOuterAngle=e._pannerAttr.coneOuterAngle,e._panner.coneOuterGain=e._pannerAttr.coneOuterGain,e._panner.distanceModel=e._pannerAttr.distanceModel,e._panner.maxDistance=e._pannerAttr.maxDistance,e._panner.refDistance=e._pannerAttr.refDistance,e._panner.rolloffFactor=e._pannerAttr.rolloffFactor,e._panner.panningModel=e._pannerAttr.panningModel,void 0!==e._panner.positionX?(e._panner.positionX.setValueAtTime(e._pos[0],Howler.ctx.currentTime),e._panner.positionY.setValueAtTime(e._pos[1],Howler.ctx.currentTime),e._panner.positionZ.setValueAtTime(e._pos[2],Howler.ctx.currentTime)):e._panner.setPosition(e._pos[0],e._pos[1],e._pos[2]),void 0!==e._panner.orientationX?(e._panner.orientationX.setValueAtTime(e._orientation[0],Howler.ctx.currentTime),e._panner.orientationY.setValueAtTime(e._orientation[1],Howler.ctx.currentTime),e._panner.orientationZ.setValueAtTime(e._orientation[2],Howler.ctx.currentTime)):e._panner.setOrientation(e._orientation[0],e._orientation[1],e._orientation[2])):(e._panner=Howler.ctx.createStereoPanner(),e._panner.pan.setValueAtTime(e._stereo,Howler.ctx.currentTime)),e._panner.connect(e._node),e._paused||e._parent.pause(e._id,!0).play(e._id,!0)}}();
/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.17.0
 * @author George Michael Brower
 * @license MIT
 */
var Cs=function(){"use strict";function e(t,n,i,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"div";o(this,e),this.parent=t,this.object=n,this.property=i,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement("div"),this.domElement.classList.add("controller"),this.domElement.classList.add(r),this.$name=document.createElement("div"),this.$name.classList.add("name"),e.nextNameID=e.nextNameID||0,this.$name.id="lil-gui-name-".concat(++e.nextNameID),this.$widget=document.createElement(a),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(i)}return l(e,[{key:"name",value:function(e){return this._name=e,this.$name.innerHTML=e,this}},{key:"onChange",value:function(e){return this._onChange=e,this}},{key:"_callOnChange",value:function(){this.parent._callOnChange(this),void 0!==this._onChange&&this._onChange.call(this,this.getValue()),this._changed=!0}},{key:"onFinishChange",value:function(e){return this._onFinishChange=e,this}},{key:"_callOnFinishChange",value:function(){this._changed&&(this.parent._callOnFinishChange(this),void 0!==this._onFinishChange&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}},{key:"reset",value:function(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}},{key:"enable",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this.disable(!e)}},{key:"disable",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return e===this._disabled||(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e)),this}},{key:"show",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}},{key:"hide",value:function(){return this.show(!1)}},{key:"options",value:function(e){var t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}},{key:"min",value:function(e){return this}},{key:"max",value:function(e){return this}},{key:"step",value:function(e){return this}},{key:"decimals",value:function(e){return this}},{key:"listen",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this._listening=e,void 0!==this._listenCallbackID&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}},{key:"_listenCallback",value:function(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);var e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}},{key:"getValue",value:function(){return this.object[this.property]}},{key:"setValue",value:function(e){return this.object[this.property]=e,this._callOnChange(),this.updateDisplay(),this}},{key:"updateDisplay",value:function(){return this}},{key:"load",value:function(e){return this.setValue(e),this._callOnFinishChange(),this}},{key:"save",value:function(){return this.getValue()}},{key:"destroy",value:function(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}]),e}(),Ls=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r){var a;return o(this,n),(a=t.call(this,e,i,r,"boolean","label")).$input=document.createElement("input"),a.$input.setAttribute("type","checkbox"),a.$input.setAttribute("aria-labelledby",a.$name.id),a.$widget.appendChild(a.$input),a.$input.addEventListener("change",(function(){a.setValue(a.$input.checked),a._callOnFinishChange()})),a.$disable=a.$input,a.updateDisplay(),a}return l(n,[{key:"updateDisplay",value:function(){return this.$input.checked=this.getValue(),this}}]),n}(Cs);function Ps(e){var t,n;return(t=e.match(/(#|0x)?([a-f0-9]{6})/i))?n=t[2]:(t=e.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?n=parseInt(t[1]).toString(16).padStart(2,0)+parseInt(t[2]).toString(16).padStart(2,0)+parseInt(t[3]).toString(16).padStart(2,0):(t=e.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(n=t[1]+t[1]+t[2]+t[2]+t[3]+t[3]),!!n&&"#"+n}var Ds={isPrimitive:!0,match:function(e){return"string"==typeof e},fromHexString:Ps,toHexString:Ps},Rs={isPrimitive:!0,match:function(e){return"number"==typeof e},fromHexString:function(e){return parseInt(e.substring(1),16)},toHexString:function(e){return"#"+e.toString(16).padStart(6,0)}},Is={isPrimitive:!1,match:Array.isArray,fromHexString:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=Rs.fromHexString(e);t[0]=(i>>16&255)/255*n,t[1]=(i>>8&255)/255*n,t[2]=(255&i)/255*n},toHexString:function(e){var t=A(e,3),n=t[0],i=t[1],r=t[2],a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=n*(a=255/a)<<16^i*a<<8^r*a<<0;return Rs.toHexString(o)}},Os={isPrimitive:!1,match:function(e){return Object(e)===e},fromHexString:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=Rs.fromHexString(e);t.r=(i>>16&255)/255*n,t.g=(i>>8&255)/255*n,t.b=(255&i)/255*n},toHexString:function(e){var t=e.r,n=e.g,i=e.b,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=t*(r=255/r)<<16^n*r<<8^i*r<<0;return Rs.toHexString(a)}},Ns=[Ds,Rs,Is,Os];var zs=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a){var s,l;return o(this,n),(s=t.call(this,e,i,r,"color")).$input=document.createElement("input"),s.$input.setAttribute("type","color"),s.$input.setAttribute("tabindex",-1),s.$input.setAttribute("aria-labelledby",s.$name.id),s.$text=document.createElement("input"),s.$text.setAttribute("type","text"),s.$text.setAttribute("spellcheck","false"),s.$text.setAttribute("aria-labelledby",s.$name.id),s.$display=document.createElement("div"),s.$display.classList.add("display"),s.$display.appendChild(s.$input),s.$widget.appendChild(s.$display),s.$widget.appendChild(s.$text),s._format=(l=s.initialValue,Ns.find((function(e){return e.match(l)}))),s._rgbScale=a,s._initialValueHexString=s.save(),s._textFocused=!1,s.$input.addEventListener("input",(function(){s._setValueFromHexString(s.$input.value)})),s.$input.addEventListener("blur",(function(){s._callOnFinishChange()})),s.$text.addEventListener("input",(function(){var e=Ps(s.$text.value);e&&s._setValueFromHexString(e)})),s.$text.addEventListener("focus",(function(){s._textFocused=!0,s.$text.select()})),s.$text.addEventListener("blur",(function(){s._textFocused=!1,s.updateDisplay(),s._callOnFinishChange()})),s.$disable=s.$text,s.updateDisplay(),s}return l(n,[{key:"reset",value:function(){return this._setValueFromHexString(this._initialValueHexString),this}},{key:"_setValueFromHexString",value:function(e){if(this._format.isPrimitive){var t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}},{key:"save",value:function(){return this._format.toHexString(this.getValue(),this._rgbScale)}},{key:"load",value:function(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}},{key:"updateDisplay",value:function(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}]),n}(Cs),Us=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r){var a;return o(this,n),(a=t.call(this,e,i,r,"function")).$button=document.createElement("button"),a.$button.appendChild(a.$name),a.$widget.appendChild(a.$button),a.$button.addEventListener("click",(function(e){e.preventDefault(),a.getValue().call(a.object)})),a.$button.addEventListener("touchstart",(function(){}),{passive:!0}),a.$disable=a.$button,a}return n}(Cs),Fs=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a,s,l){var u;o(this,n),(u=t.call(this,e,i,r,"number"))._initInput(),u.min(a),u.max(s);var c=void 0!==l;return u.step(c?l:u._getImplicitStep(),c),u.updateDisplay(),u}return l(n,[{key:"decimals",value:function(e){return this._decimals=e,this.updateDisplay(),this}},{key:"min",value:function(e){return this._min=e,this._onUpdateMinMax(),this}},{key:"max",value:function(e){return this._max=e,this._onUpdateMinMax(),this}},{key:"step",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return this._step=e,this._stepExplicit=t,this}},{key:"updateDisplay",value:function(){var e=this.getValue();if(this._hasSlider){var t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=100*t+"%"}return this._inputFocused||(this.$input.value=void 0===this._decimals?e:e.toFixed(this._decimals)),this}},{key:"_initInput",value:function(){var e=this;this.$input=document.createElement("input"),this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$disable=this.$input;var t,n,i,r,a,o=function(t){var n=parseFloat(e.$input.value);isNaN(n)||(e._snapClampSetValue(n+t),e.$input.value=e.getValue())},s=!1,l=function(o){if(s){var l=o.clientX-t,c=o.clientY-n;Math.abs(c)>5?(o.preventDefault(),e.$input.blur(),s=!1,e._setDraggingStyle(!0,"vertical")):Math.abs(l)>5&&u()}if(!s){var h=o.clientY-i;a-=h*e._step*e._arrowKeyMultiplier(o),r+a>e._max?a=e._max-r:r+a<e._min&&(a=e._min-r),e._snapClampSetValue(r+a)}i=o.clientY},u=function(){e._setDraggingStyle(!1,"vertical"),e._callOnFinishChange(),window.removeEventListener("mousemove",l),window.removeEventListener("mouseup",u)};this.$input.addEventListener("input",(function(){var t=parseFloat(e.$input.value);isNaN(t)||(e._stepExplicit&&(t=e._snap(t)),e.setValue(e._clamp(t)))})),this.$input.addEventListener("keydown",(function(t){"Enter"===t.code&&e.$input.blur(),"ArrowUp"===t.code&&(t.preventDefault(),o(e._step*e._arrowKeyMultiplier(t))),"ArrowDown"===t.code&&(t.preventDefault(),o(e._step*e._arrowKeyMultiplier(t)*-1))})),this.$input.addEventListener("wheel",(function(t){e._inputFocused&&(t.preventDefault(),o(e._step*e._normalizeMouseWheel(t)))}),{passive:!1}),this.$input.addEventListener("mousedown",(function(o){t=o.clientX,n=i=o.clientY,s=!0,r=e.getValue(),a=0,window.addEventListener("mousemove",l),window.addEventListener("mouseup",u)})),this.$input.addEventListener("focus",(function(){e._inputFocused=!0})),this.$input.addEventListener("blur",(function(){e._inputFocused=!1,e.updateDisplay(),e._callOnFinishChange()}))}},{key:"_initSlider",value:function(){var e=this;this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");var t,n,i,r=function(t){var n,i,r,a,o,s=e.$slider.getBoundingClientRect(),l=(n=t,i=s.left,r=s.right,a=e._min,o=e._max,(n-i)/(r-i)*(o-a)+a);e._snapClampSetValue(l)},a=function(e){r(e.clientX)},o=function(){e._callOnFinishChange(),e._setDraggingStyle(!1),window.removeEventListener("mousemove",a),window.removeEventListener("mouseup",o)},s=!1,l=function(t){t.preventDefault(),e._setDraggingStyle(!0),r(t.touches[0].clientX),s=!1},u=function(e){if(s){var i=e.touches[0].clientX-t,a=e.touches[0].clientY-n;Math.abs(i)>Math.abs(a)?l(e):(window.removeEventListener("touchmove",u),window.removeEventListener("touchend",c))}else e.preventDefault(),r(e.touches[0].clientX)},c=function(){e._callOnFinishChange(),e._setDraggingStyle(!1),window.removeEventListener("touchmove",u),window.removeEventListener("touchend",c)},h=this._callOnFinishChange.bind(this);this.$slider.addEventListener("mousedown",(function(t){e._setDraggingStyle(!0),r(t.clientX),window.addEventListener("mousemove",a),window.addEventListener("mouseup",o)})),this.$slider.addEventListener("touchstart",(function(i){i.touches.length>1||(e._hasScrollBar?(t=i.touches[0].clientX,n=i.touches[0].clientY,s=!0):l(i),window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("touchend",c))}),{passive:!1}),this.$slider.addEventListener("wheel",(function(t){if(!(Math.abs(t.deltaX)<Math.abs(t.deltaY))||!e._hasScrollBar){t.preventDefault();var n=e._normalizeMouseWheel(t)*e._step;e._snapClampSetValue(e.getValue()+n),e.$input.value=e.getValue(),clearTimeout(i),i=setTimeout(h,400)}}),{passive:!1})}},{key:"_setDraggingStyle",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"horizontal";this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle("lil-gui-".concat(t),e)}},{key:"_getImplicitStep",value:function(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}},{key:"_onUpdateMinMax",value:function(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}},{key:"_normalizeMouseWheel",value:function(e){var t=e.deltaX,n=e.deltaY;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,n=-e.wheelDelta/120,n*=this._stepExplicit?1:10),t+-n}},{key:"_arrowKeyMultiplier",value:function(e){var t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}},{key:"_snap",value:function(e){var t=Math.round(e/this._step)*this._step;return parseFloat(t.toPrecision(15))}},{key:"_clamp",value:function(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}},{key:"_snapClampSetValue",value:function(e){this.setValue(this._clamp(this._snap(e)))}},{key:"_hasScrollBar",get:function(){var e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}},{key:"_hasMin",get:function(){return void 0!==this._min}},{key:"_hasMax",get:function(){return void 0!==this._max}}]),n}(Cs),Bs=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a){var s;return o(this,n),(s=t.call(this,e,i,r,"option")).$select=document.createElement("select"),s.$select.setAttribute("aria-labelledby",s.$name.id),s.$display=document.createElement("div"),s.$display.classList.add("display"),s._values=Array.isArray(a)?a:Object.values(a),s._names=Array.isArray(a)?a:Object.keys(a),s._names.forEach((function(e){var t=document.createElement("option");t.innerHTML=e,s.$select.appendChild(t)})),s.$select.addEventListener("change",(function(){s.setValue(s._values[s.$select.selectedIndex]),s._callOnFinishChange()})),s.$select.addEventListener("focus",(function(){s.$display.classList.add("focus")})),s.$select.addEventListener("blur",(function(){s.$display.classList.remove("focus")})),s.$widget.appendChild(s.$select),s.$widget.appendChild(s.$display),s.$disable=s.$select,s.updateDisplay(),s}return l(n,[{key:"updateDisplay",value:function(){var e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.innerHTML=-1===t?e:this._names[t],this}}]),n}(Cs),Vs=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r){var a;return o(this,n),(a=t.call(this,e,i,r,"string")).$input=document.createElement("input"),a.$input.setAttribute("type","text"),a.$input.setAttribute("aria-labelledby",a.$name.id),a.$input.addEventListener("input",(function(){a.setValue(a.$input.value)})),a.$input.addEventListener("keydown",(function(e){"Enter"===e.code&&a.$input.blur()})),a.$input.addEventListener("blur",(function(){a._callOnFinishChange()})),a.$widget.appendChild(a.$input),a.$disable=a.$input,a.updateDisplay(),a}return l(n,[{key:"updateDisplay",value:function(){return this.$input.value=this.getValue(),this}}]),n}(Cs),Hs='.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  background-color: var(--background-color);\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean .widget {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: " ";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: "lil-gui";\n  content: "↕";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background-color: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background-color: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background-color: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: "lil-gui";\n  content: "▾";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: "▸";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: "Empty";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui input {\n  -webkit-tap-highlight-color: transparent;\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input::-webkit-outer-spin-button,\n.lil-gui input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.lil-gui input[type=number] {\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  -webkit-appearance: none;\n  height: var(--checkbox-size);\n  width: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: "lil-gui";\n  content: "✓";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: 1px solid var(--widget-color);\n  text-align: center;\n  line-height: calc(var(--widget-height) - 4px);\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n    border-color: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    border-color: var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: "lil-gui";\n  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");\n}';function Gs(e){var t=document.createElement("style");t.innerHTML=e;var n=document.querySelector("head link[rel=stylesheet], head style");n?document.head.insertBefore(t,n):document.head.appendChild(t)}var Ws=!1,js=function(){"use strict";function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.parent,i=t.autoPlace,r=void 0===i?void 0===n:i,a=t.container,s=t.width,l=t.title,u=void 0===l?"Controls":l,c=t.injectStyles,h=void 0===c||c,d=t.touchStyles,f=void 0===d||d,p=this;if(o(this,e),this.parent=n,this.root=n?n.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",(function(){return p.openAnimated(p._closed)})),this.$title.addEventListener("keydown",(function(e){"Enter"!==e.code&&"Space"!==e.code||(e.preventDefault(),p.$title.click())})),this.$title.addEventListener("touchstart",(function(){}),{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(u),f&&this.domElement.classList.add("allow-touch-styles"),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),!Ws&&h&&(Gs(Hs),Ws=!0),a?a.appendChild(this.domElement):r&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),s&&this.domElement.style.setProperty("--width",s+"px"),this.domElement.addEventListener("keydown",(function(e){return e.stopPropagation()})),this.domElement.addEventListener("keyup",(function(e){return e.stopPropagation()}))}return l(e,[{key:"add",value:function(e,t,n,i,r){if(Object(n)===n)return new Bs(this,e,t,n);var a=e[t];switch(void 0===a?"undefined":R(a)){case"number":return new Fs(this,e,t,n,i,r);case"boolean":return new Ls(this,e,t);case"string":return new Vs(this,e,t);case"function":return new Us(this,e,t)}console.error("gui.add failed\n\tproperty:",t,"\n\tobject:",e,"\n\tvalue:",a)}},{key:"addColor",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return new zs(this,e,t,n)}},{key:"addFolder",value:function(t){return new e({parent:this,title:t})}},{key:"load",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.controllers&&this.controllers.forEach((function(t){t instanceof Us||t._name in e.controllers&&t.load(e.controllers[t._name])})),t&&e.folders&&this.folders.forEach((function(t){t._title in e.folders&&t.load(e.folders[t._title])})),this}},{key:"save",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t={controllers:{},folders:{}};return this.controllers.forEach((function(e){if(!(e instanceof Us)){if(e._name in t.controllers)throw new Error('Cannot save GUI with duplicate property "'.concat(e._name,'"'));t.controllers[e._name]=e.save()}})),e&&this.folders.forEach((function(e){if(e._title in t.folders)throw new Error('Cannot save GUI with duplicate folder "'.concat(e._title,'"'));t.folders[e._title]=e.save()})),t}},{key:"open",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}},{key:"close",value:function(){return this.open(!1)}},{key:"show",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}},{key:"hide",value:function(){return this.show(!1)}},{key:"openAnimated",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=this;return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame((function(){var n=t.$children.clientHeight;t.$children.style.height=n+"px",t.domElement.classList.add("transition");var i=function(e){e.target===t.$children&&(t.$children.style.height="",t.domElement.classList.remove("transition"),t.$children.removeEventListener("transitionend",i))};t.$children.addEventListener("transitionend",i);var r=e?t.$children.scrollHeight:0;t.domElement.classList.toggle("closed",!e),requestAnimationFrame((function(){t.$children.style.height=r+"px"}))})),this}},{key:"title",value:function(e){return this._title=e,this.$title.innerHTML=e,this}},{key:"reset",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=e?this.controllersRecursive():this.controllers;return t.forEach((function(e){return e.reset()})),this}},{key:"onChange",value:function(e){return this._onChange=e,this}},{key:"_callOnChange",value:function(e){this.parent&&this.parent._callOnChange(e),void 0!==this._onChange&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}},{key:"onFinishChange",value:function(e){return this._onFinishChange=e,this}},{key:"_callOnFinishChange",value:function(e){this.parent&&this.parent._callOnFinishChange(e),void 0!==this._onFinishChange&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}},{key:"destroy",value:function(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach((function(e){return e.destroy()}))}},{key:"controllersRecursive",value:function(){var e=Array.from(this.controllers);return this.folders.forEach((function(t){e=e.concat(t.controllersRecursive())})),e}},{key:"foldersRecursive",value:function(){var e=Array.from(this.folders);return this.folders.forEach((function(t){e=e.concat(t.foldersRecursive())})),e}}]),e}(),Xs=js;function qs(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ys(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}
/*!
 * GSAP 3.11.3
 * https://greensock.com
 *
 * @license Copyright 2008-2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var $s,Zs,Js,Ks,Qs,el,tl,nl,il,rl,al,ol,sl,ll,ul,cl,hl,dl,fl,pl,ml,vl,gl,_l,yl,xl,bl,wl,Ml,Sl,Tl={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},Al={duration:.5,overwrite:!1,delay:0},El=1e8,kl=1e-8,Cl=2*Math.PI,Ll=Cl/4,Pl=0,Dl=Math.sqrt,Rl=Math.cos,Il=Math.sin,Ol=function(e){return"string"==typeof e},Nl=function(e){return"function"==typeof e},zl=function(e){return"number"==typeof e},Ul=function(e){return void 0===e},Fl=function(e){return"object"==typeof e},Bl=function(e){return!1!==e},Vl=function(){return"undefined"!=typeof window},Hl=function(e){return Nl(e)||Ol(e)},Gl="function"==typeof ArrayBuffer&&ArrayBuffer.isView||function(){},Wl=Array.isArray,jl=/(?:-?\.?\d|\.)+/gi,Xl=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,ql=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Yl=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,$l=/[+-]=-?[.\d]+/,Zl=/[^,'"\[\]\s]+/gi,Jl=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,Kl={},Ql={},eu=function(e){return(Ql=Cu(e,Kl))&&kh},tu=function(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},nu=function(e,t){return!t&&console.warn(e)},iu=function(e,t){return e&&(Kl[e]=t)&&Ql&&(Ql[e]=t)||Kl},ru=function(){return 0},au={suppressEvents:!0,isStart:!0,kill:!1},ou={suppressEvents:!0,kill:!1},su={suppressEvents:!0},lu={},uu=[],cu={},hu={},du={},fu=30,pu=[],mu="",vu=function(e){var t,n,i=e[0];if(Fl(i)||Nl(i)||(e=[e]),!(t=(i._gsap||{}).harness)){for(n=pu.length;n--&&!pu[n].targetTest(i););t=pu[n]}for(n=e.length;n--;)e[n]&&(e[n]._gsap||(e[n]._gsap=new Gc(e[n],t)))||e.splice(n,1);return e},gu=function(e){return e._gsap||vu(sc(e))[0]._gsap},_u=function(e,t,n){return(n=e[t])&&Nl(n)?e[t]():Ul(n)&&e.getAttribute&&e.getAttribute(t)||n},yu=function(e,t){return(e=e.split(",")).forEach(t)||e},xu=function(e){return Math.round(1e5*e)/1e5||0},bu=function(e){return Math.round(1e7*e)/1e7||0},wu=function(e,t){var n=t.charAt(0),i=parseFloat(t.substr(2));return e=parseFloat(e),"+"===n?e+i:"-"===n?e-i:"*"===n?e*i:e/i},Mu=function(e,t){for(var n=t.length,i=0;e.indexOf(t[i])<0&&++i<n;);return i<n},Su=function(){var e,t,n=uu.length,i=uu.slice(0);for(cu={},uu.length=0,e=0;e<n;e++)(t=i[e])&&t._lazy&&(t.render(t._lazy[0],t._lazy[1],!0)._lazy=0)},Tu=function(e,t,n,i){uu.length&&Su(),e.render(t,n,i||Zs&&t<0&&(e._initted||e._startAt)),uu.length&&Su()},Au=function(e){var t=parseFloat(e);return(t||0===t)&&(e+"").match(Zl).length<2?t:Ol(e)?e.trim():e},Eu=function(e){return e},ku=function(e,t){for(var n in t)n in e||(e[n]=t[n]);return e},Cu=function(e,t){for(var n in t)e[n]=t[n];return e},Lu=function e(t,n){for(var i in n)"__proto__"!==i&&"constructor"!==i&&"prototype"!==i&&(t[i]=Fl(n[i])?e(t[i]||(t[i]={}),n[i]):n[i]);return t},Pu=function(e,t){var n,i={};for(n in e)n in t||(i[n]=e[n]);return i},Du=function(e){var t,n=e.parent||Ks,i=e.keyframes?(t=Wl(e.keyframes),function(e,n){for(var i in n)i in e||"duration"===i&&t||"ease"===i||(e[i]=n[i])}):ku;if(Bl(e.inherit))for(;n;)i(e,n.vars.defaults),n=n.parent||n._dp;return e},Ru=function(e,t,n,i,r){void 0===n&&(n="_first"),void 0===i&&(i="_last");var a,o=e[i];if(r)for(a=t[r];o&&o[r]>a;)o=o._prev;return o?(t._next=o._next,o._next=t):(t._next=e[n],e[n]=t),t._next?t._next._prev=t:e[i]=t,t._prev=o,t.parent=t._dp=e,t},Iu=function(e,t,n,i){void 0===n&&(n="_first"),void 0===i&&(i="_last");var r=t._prev,a=t._next;r?r._next=a:e[n]===t&&(e[n]=a),a?a._prev=r:e[i]===t&&(e[i]=r),t._next=t._prev=t.parent=null},Ou=function(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove(e),e._act=0},Nu=function(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var n=e;n;)n._dirty=1,n=n.parent;return e},zu=function(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},Uu=function(e,t,n,i){return e._startAt&&(Zs?e._startAt.revert(ou):e.vars.immediateRender&&!e.vars.autoRevert||e._startAt.render(t,!0,i))},Fu=function e(t){return!t||t._ts&&e(t.parent)},Bu=function(e){return e._repeat?Vu(e._tTime,e=e.duration()+e._rDelay)*e:0},Vu=function(e,t){var n=Math.floor(e/=t);return e&&n===e?n-1:n},Hu=function(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},Gu=function(e){return e._end=bu(e._start+(e._tDur/Math.abs(e._ts||e._rts||kl)||0))},Wu=function(e,t){var n=e._dp;return n&&n.smoothChildTiming&&e._ts&&(e._start=bu(n._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),Gu(e),n._dirty||Nu(n,e)),e},ju=function(e,t){var n;if((t._time||t._initted&&!t._dur)&&(n=Hu(e.rawTime(),t),(!t._dur||ic(0,t.totalDuration(),n)-t._tTime>kl)&&t.render(n,!0)),Nu(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(n=e;n._dp;)n.rawTime()>=0&&n.totalTime(n._tTime),n=n._dp;e._zTime=-1e-8}},Xu=function(e,t,n,i){return t.parent&&Ou(t),t._start=bu((zl(n)?n:n||e!==Ks?ec(e,n,t):e._time)+t._delay),t._end=bu(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),Ru(e,t,"_first","_last",e._sort?"_start":0),Zu(t)||(e._recent=t),i||ju(e,t),e._ts<0&&Wu(e,e._tTime),e},qu=function(e,t){return(Kl.ScrollTrigger||tu("scrollTrigger",t))&&Kl.ScrollTrigger.create(t,e)},Yu=function(e,t,n,i,r){return Jc(e,t,r),e._initted?!n&&e._pt&&!Zs&&(e._dur&&!1!==e.vars.lazy||!e._dur&&e.vars.lazy)&&il!==Lc.frame?(uu.push(e),e._lazy=[r,i],1):void 0:1},$u=function e(t){var n=t.parent;return n&&n._ts&&n._initted&&!n._lock&&(n.rawTime()<0||e(n))},Zu=function(e){var t=e.data;return"isFromStart"===t||"isStart"===t},Ju=function(e,t,n,i){var r=e._repeat,a=bu(t)||0,o=e._tTime/e._tDur;return o&&!i&&(e._time*=a/e._dur),e._dur=a,e._tDur=r?r<0?1e10:bu(a*(r+1)+e._rDelay*r):a,o>0&&!i&&Wu(e,e._tTime=e._tDur*o),e.parent&&Gu(e),n||Nu(e.parent,e),e},Ku=function(e){return e instanceof jc?Nu(e):Ju(e,e._dur)},Qu={_start:0,endTime:ru,totalDuration:ru},ec=function e(t,n,i){var r,a,o,s=t.labels,l=t._recent||Qu,u=t.duration()>=El?l.endTime(!1):t._dur;return Ol(n)&&(isNaN(n)||n in s)?(a=n.charAt(0),o="%"===n.substr(-1),r=n.indexOf("="),"<"===a||">"===a?(r>=0&&(n=n.replace(/=/,"")),("<"===a?l._start:l.endTime(l._repeat>=0))+(parseFloat(n.substr(1))||0)*(o?(r<0?l:i).totalDuration()/100:1)):r<0?(n in s||(s[n]=u),s[n]):(a=parseFloat(n.charAt(r-1)+n.substr(r+1)),o&&i&&(a=a/100*(Wl(i)?i[0]:i).totalDuration()),r>1?e(t,n.substr(0,r-1),i)+a:u+a)):null==n?u:+n},tc=function(e,t,n){var i,r,a=zl(t[1]),o=(a?2:1)+(e<2?0:1),s=t[o];if(a&&(s.duration=t[1]),s.parent=n,e){for(i=s,r=n;r&&!("immediateRender"in i);)i=r.vars.defaults||{},r=Bl(r.vars.inherit)&&r.parent;s.immediateRender=Bl(i.immediateRender),e<2?s.runBackwards=1:s.startAt=t[o-1]}return new nh(t[0],s,t[o+1])},nc=function(e,t){return e||0===e?t(e):t},ic=function(e,t,n){return n<e?e:n>t?t:n},rc=function(e,t){return Ol(e)&&(t=Jl.exec(e))?t[1]:""},ac=[].slice,oc=function(e,t){return e&&Fl(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&Fl(e[0]))&&!e.nodeType&&e!==Qs},sc=function(e,t,n){return Js&&!t&&Js.selector?Js.selector(e):!Ol(e)||n||!el&&Pc()?Wl(e)?function(e,t,n){return void 0===n&&(n=[]),e.forEach((function(e){var i;return Ol(e)&&!t||oc(e,1)?(i=n).push.apply(i,sc(e)):n.push(e)}))||n}(e,n):oc(e)?ac.call(e,0):e?[e]:[]:ac.call((t||tl).querySelectorAll(e),0)},lc=function(e){return e=sc(e)[0]||nu("Invalid scope")||{},function(t){var n=e.current||e.nativeElement||e;return sc(t,n.querySelectorAll?n:n===e?nu("Invalid scope")||tl.createElement("div"):e)}},uc=function(e){return e.sort((function(){return.5-Math.random()}))},cc=function(e){if(Nl(e))return e;var t=Fl(e)?e:{each:e},n=Uc(t.ease),i=t.from||0,r=parseFloat(t.base)||0,a={},o=i>0&&i<1,s=isNaN(i)||o,l=t.axis,u=i,c=i;return Ol(i)?u=c={center:.5,edges:.5,end:1}[i]||0:!o&&s&&(u=i[0],c=i[1]),function(e,o,h){var d,f,p,m,v,g,_,y,x,b=(h||t).length,w=a[b];if(!w){if(!(x="auto"===t.grid?0:(t.grid||[1,El])[1])){for(_=-1e8;_<(_=h[x++].getBoundingClientRect().left)&&x<b;);x--}for(w=a[b]=[],d=s?Math.min(x,b)*u-.5:i%x,f=x===El?0:s?b*c/x-.5:i/x|0,_=0,y=El,g=0;g<b;g++)p=g%x-d,m=f-(g/x|0),w[g]=v=l?Math.abs("y"===l?m:p):Dl(p*p+m*m),v>_&&(_=v),v<y&&(y=v);"random"===i&&uc(w),w.max=_-y,w.min=y,w.v=b=(parseFloat(t.amount)||parseFloat(t.each)*(x>b?b-1:l?"y"===l?b/x:x:Math.max(x,b/x))||0)*("edges"===i?-1:1),w.b=b<0?r-b:r,w.u=rc(t.amount||t.each)||0,n=n&&b<0?Nc(n):n}return b=(w[e]-w.min)/w.max||0,bu(w.b+(n?n(b):b)*w.v)+w.u}},hc=function(e){var t=Math.pow(10,((e+"").split(".")[1]||"").length);return function(n){var i=bu(Math.round(parseFloat(n)/e)*e*t);return(i-i%1)/t+(zl(n)?0:rc(n))}},dc=function(e,t){var n,i,r=Wl(e);return!r&&Fl(e)&&(n=r=e.radius||El,e.values?(e=sc(e.values),(i=!zl(e[0]))&&(n*=n)):e=hc(e.increment)),nc(t,r?Nl(e)?function(t){return i=e(t),Math.abs(i-t)<=n?i:t}:function(t){for(var r,a,o=parseFloat(i?t.x:t),s=parseFloat(i?t.y:0),l=El,u=0,c=e.length;c--;)(r=i?(r=e[c].x-o)*r+(a=e[c].y-s)*a:Math.abs(e[c]-o))<l&&(l=r,u=c);return u=!n||l<=n?e[u]:t,i||u===t||zl(t)?u:u+rc(t)}:hc(e))},fc=function(e,t,n,i){return nc(Wl(e)?!t:!0===n?(n=0,!1):!i,(function(){return Wl(e)?e[~~(Math.random()*e.length)]:(i=(n=n||1e-5)<1?Math.pow(10,(n+"").length-2):1)&&Math.floor(Math.round((e-n/2+Math.random()*(t-e+.99*n))/n)*n*i)/i}))},pc=function(e,t,n){return nc(n,(function(n){return e[~~t(n)]}))},mc=function(e){for(var t,n,i,r,a=0,o="";~(t=e.indexOf("random(",a));)i=e.indexOf(")",t),r="["===e.charAt(t+7),n=e.substr(t+7,i-t-7).match(r?Zl:jl),o+=e.substr(a,t-a)+fc(r?n:+n[0],r?0:+n[1],+n[2]||1e-5),a=i+1;return o+e.substr(a,e.length-a)},vc=function(e,t,n,i,r){var a=t-e,o=i-n;return nc(r,(function(t){return n+((t-e)/a*o||0)}))},gc=function(e,t,n){var i,r,a,o=e.labels,s=El;for(i in o)(r=o[i]-t)<0==!!n&&r&&s>(r=Math.abs(r))&&(a=i,s=r);return a},_c=function(e,t,n){var i,r,a,o=e.vars,s=o[t],l=Js,u=e._ctx;if(s)return i=o[t+"Params"],r=o.callbackScope||e,n&&uu.length&&Su(),u&&(Js=u),a=i?s.apply(r,i):s.call(r),Js=l,a},yc=function(e){return Ou(e),e.scrollTrigger&&e.scrollTrigger.kill(!!Zs),e.progress()<1&&_c(e,"onInterrupt"),e},xc=function(e){var t=(e=!e.name&&e.default||e).name,n=Nl(e),i=t&&!n&&e.init?function(){this._props=[]}:e,r={init:ru,render:hh,add:$c,kill:fh,modifier:dh,rawVars:0},a={targetTest:0,get:0,getSetter:sh,aliases:{},register:0};if(Pc(),e!==i){if(hu[t])return;ku(i,ku(Pu(e,r),a)),Cu(i.prototype,Cu(r,Pu(e,a))),hu[i.prop=t]=i,e.targetTest&&(pu.push(i),lu[t]=1),t=("css"===t?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}iu(t,i),e.register&&e.register(kh,i,vh)},bc=255,wc={aqua:[0,bc,bc],lime:[0,bc,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,bc],navy:[0,0,128],white:[bc,bc,bc],olive:[128,128,0],yellow:[bc,bc,0],orange:[bc,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[bc,0,0],pink:[bc,192,203],cyan:[0,bc,bc],transparent:[bc,bc,bc,0]},Mc=function(e,t,n){return(6*(e+=e<0?1:e>1?-1:0)<1?t+(n-t)*e*6:e<.5?n:3*e<2?t+(n-t)*(2/3-e)*6:t)*bc+.5|0},Sc=function(e,t,n){var i,r,a,o,s,l,u,c,h,d,f=e?zl(e)?[e>>16,e>>8&bc,e&bc]:0:wc.black;if(!f){if(","===e.substr(-1)&&(e=e.substr(0,e.length-1)),wc[e])f=wc[e];else if("#"===e.charAt(0)){if(e.length<6&&(i=e.charAt(1),r=e.charAt(2),a=e.charAt(3),e="#"+i+i+r+r+a+a+(5===e.length?e.charAt(4)+e.charAt(4):"")),9===e.length)return[(f=parseInt(e.substr(1,6),16))>>16,f>>8&bc,f&bc,parseInt(e.substr(7),16)/255];f=[(e=parseInt(e.substr(1),16))>>16,e>>8&bc,e&bc]}else if("hsl"===e.substr(0,3))if(f=d=e.match(jl),t){if(~e.indexOf("="))return f=e.match(Xl),n&&f.length<4&&(f[3]=1),f}else o=+f[0]%360/360,s=+f[1]/100,i=2*(l=+f[2]/100)-(r=l<=.5?l*(s+1):l+s-l*s),f.length>3&&(f[3]*=1),f[0]=Mc(o+1/3,i,r),f[1]=Mc(o,i,r),f[2]=Mc(o-1/3,i,r);else f=e.match(jl)||wc.transparent;f=f.map(Number)}return t&&!d&&(i=f[0]/bc,r=f[1]/bc,a=f[2]/bc,l=((u=Math.max(i,r,a))+(c=Math.min(i,r,a)))/2,u===c?o=s=0:(h=u-c,s=l>.5?h/(2-u-c):h/(u+c),o=u===i?(r-a)/h+(r<a?6:0):u===r?(a-i)/h+2:(i-r)/h+4,o*=60),f[0]=~~(o+.5),f[1]=~~(100*s+.5),f[2]=~~(100*l+.5)),n&&f.length<4&&(f[3]=1),f},Tc=function(e){var t=[],n=[],i=-1;return e.split(Ec).forEach((function(e){var r=e.match(ql)||[];t.push.apply(t,r),n.push(i+=r.length+1)})),t.c=n,t},Ac=function(e,t,n){var i,r,a,o,s="",l=(e+s).match(Ec),u=t?"hsla(":"rgba(",c=0;if(!l)return e;if(l=l.map((function(e){return(e=Sc(e,t,1))&&u+(t?e[0]+","+e[1]+"%,"+e[2]+"%,"+e[3]:e.join(","))+")"})),n&&(a=Tc(e),(i=n.c).join(s)!==a.c.join(s)))for(o=(r=e.replace(Ec,"1").split(ql)).length-1;c<o;c++)s+=r[c]+(~i.indexOf(c)?l.shift()||u+"0,0,0,0)":(a.length?a:l.length?l:n).shift());if(!r)for(o=(r=e.split(Ec)).length-1;c<o;c++)s+=r[c]+l[c];return s+r[o]},Ec=function(){var e,t="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";for(e in wc)t+="|"+e+"\\b";return new RegExp(t+")","gi")}(),kc=/hsl[a]?\(/,Cc=function(e){var t,n=e.join(" ");if(Ec.lastIndex=0,Ec.test(n))return t=kc.test(n),e[1]=Ac(e[1],t),e[0]=Ac(e[0],t,Tc(e[1])),!0},Lc=(dl=Date.now,fl=500,pl=33,ml=dl(),vl=ml,_l=gl=1e3/240,xl=function e(t){var n,i,r,a,o=dl()-vl,s=!0===t;if(o>fl&&(ml+=o-pl),((n=(r=(vl+=o)-ml)-_l)>0||s)&&(a=++ul.frame,cl=r-1e3*ul.time,ul.time=r/=1e3,_l+=n+(n>=gl?4:gl-n),i=1),s||(ol=sl(e)),i)for(hl=0;hl<yl.length;hl++)yl[hl](r,cl,a,t)},ul={time:0,frame:0,tick:function(){xl(!0)},deltaRatio:function(e){return cl/(1e3/(e||60))},wake:function(){nl&&(!el&&Vl()&&(Qs=el=window,tl=Qs.document||{},Kl.gsap=kh,(Qs.gsapVersions||(Qs.gsapVersions=[])).push(kh.version),eu(Ql||Qs.GreenSockGlobals||!Qs.gsap&&Qs||{}),ll=Qs.requestAnimationFrame),ol&&ul.sleep(),sl=ll||function(e){return setTimeout(e,_l-1e3*ul.time+1|0)},al=1,xl(2))},sleep:function(){(ll?Qs.cancelAnimationFrame:clearTimeout)(ol),al=0,sl=ru},lagSmoothing:function(e,t){fl=e||1e8,pl=Math.min(t,fl,0)},fps:function(e){gl=1e3/(e||240),_l=1e3*ul.time+gl},add:function(e,t,n){var i=t?function(t,n,r,a){e(t,n,r,a),ul.remove(i)}:e;return ul.remove(e),yl[n?"unshift":"push"](i),Pc(),i},remove:function(e,t){~(t=yl.indexOf(e))&&yl.splice(t,1)&&hl>=t&&hl--},_listeners:yl=[]}),Pc=function(){return!al&&Lc.wake()},Dc={},Rc=/^[\d.\-M][\d.\-,\s]/,Ic=/["']/g,Oc=function(e){for(var t,n,i,r={},a=e.substr(1,e.length-3).split(":"),o=a[0],s=1,l=a.length;s<l;s++)n=a[s],t=s!==l-1?n.lastIndexOf(","):n.length,i=n.substr(0,t),r[o]=isNaN(i)?i.replace(Ic,"").trim():+i,o=n.substr(t+1).trim();return r},Nc=function(e){return function(t){return 1-e(1-t)}},zc=function e(t,n){for(var i,r=t._first;r;)r instanceof jc?e(r,n):!r.vars.yoyoEase||r._yoyo&&r._repeat||r._yoyo===n||(r.timeline?e(r.timeline,n):(i=r._ease,r._ease=r._yEase,r._yEase=i,r._yoyo=n)),r=r._next},Uc=function(e,t){return e&&(Nl(e)?e:Dc[e]||function(e){var t,n,i,r,a=(e+"").split("("),o=Dc[a[0]];return o&&a.length>1&&o.config?o.config.apply(null,~e.indexOf("{")?[Oc(a[1])]:(t=e,n=t.indexOf("(")+1,i=t.indexOf(")"),r=t.indexOf("(",n),t.substring(n,~r&&r<i?t.indexOf(")",i+1):i)).split(",").map(Au)):Dc._CE&&Rc.test(e)?Dc._CE("",e):o}(e))||t},Fc=function(e,t,n,i){void 0===n&&(n=function(e){return 1-t(1-e)}),void 0===i&&(i=function(e){return e<.5?t(2*e)/2:1-t(2*(1-e))/2});var r,a={easeIn:t,easeOut:n,easeInOut:i};return yu(e,(function(e){for(var t in Dc[e]=Kl[e]=a,Dc[r=e.toLowerCase()]=n,a)Dc[r+("easeIn"===t?".in":"easeOut"===t?".out":".inOut")]=Dc[e+"."+t]=a[t]})),a},Bc=function(e){return function(t){return t<.5?(1-e(1-2*t))/2:.5+e(2*(t-.5))/2}},Vc=function e(t,n,i){var r=n>=1?n:1,a=(i||(t?.3:.45))/(n<1?n:1),o=a/Cl*(Math.asin(1/r)||0),s=function(e){return 1===e?1:r*Math.pow(2,-10*e)*Il((e-o)*a)+1},l="out"===t?s:"in"===t?function(e){return 1-s(1-e)}:Bc(s);return a=Cl/a,l.config=function(n,i){return e(t,n,i)},l},Hc=function e(t,n){void 0===n&&(n=1.70158);var i=function(e){return e?--e*e*((n+1)*e+n)+1:0},r="out"===t?i:"in"===t?function(e){return 1-i(1-e)}:Bc(i);return r.config=function(n){return e(t,n)},r};yu("Linear,Quad,Cubic,Quart,Quint,Strong",(function(e,t){var n=t<5?t+1:t;Fc(e+",Power"+(n-1),t?function(e){return Math.pow(e,n)}:function(e){return e},(function(e){return 1-Math.pow(1-e,n)}),(function(e){return e<.5?Math.pow(2*e,n)/2:1-Math.pow(2*(1-e),n)/2}))})),Dc.Linear.easeNone=Dc.none=Dc.Linear.easeIn,Fc("Elastic",Vc("in"),Vc("out"),Vc()),bl=7.5625,Ml=1/(wl=2.75),Fc("Bounce",(function(e){return 1-Sl(1-e)}),Sl=function(e){return e<Ml?bl*e*e:e<.7272727272727273?bl*Math.pow(e-1.5/wl,2)+.75:e<.9090909090909092?bl*(e-=2.25/wl)*e+.9375:bl*Math.pow(e-2.625/wl,2)+.984375}),Fc("Expo",(function(e){return e?Math.pow(2,10*(e-1)):0})),Fc("Circ",(function(e){return-(Dl(1-e*e)-1)})),Fc("Sine",(function(e){return 1===e?1:1-Rl(e*Ll)})),Fc("Back",Hc("in"),Hc("out"),Hc()),Dc.SteppedEase=Dc.steps=Kl.SteppedEase={config:function(e,t){void 0===e&&(e=1);var n=1/e,i=e+(t?0:1),r=t?1:0;return function(e){return((i*ic(0,.99999999,e)|0)+r)*n}}},Al.ease=Dc["quad.out"],yu("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",(function(e){return mu+=e+","+e+"Params,"}));var Gc=function(e,t){this.id=Pl++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:_u,this.set=t?t.getSetter:sh},Wc=function(){var e=function(e){this.vars=e,this._delay=+e.delay||0,(this._repeat=e.repeat===1/0?-2:e.repeat||0)&&(this._rDelay=e.repeatDelay||0,this._yoyo=!!e.yoyo||!!e.yoyoEase),this._ts=1,Ju(this,+e.duration,1,1),this.data=e.data,Js&&(this._ctx=Js,Js.data.push(this)),al||Lc.wake()},t=e.prototype;return t.delay=function(e){return e||0===e?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+e-this._delay),this._delay=e,this):this._delay},t.duration=function(e){return arguments.length?this.totalDuration(this._repeat>0?e+(e+this._rDelay)*this._repeat:e):this.totalDuration()&&this._dur},t.totalDuration=function(e){return arguments.length?(this._dirty=0,Ju(this,this._repeat<0?e:(e-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},t.totalTime=function(e,t){if(Pc(),!arguments.length)return this._tTime;var n=this._dp;if(n&&n.smoothChildTiming&&this._ts){for(Wu(this,e),!n._dp||n.parent||ju(n,this);n&&n.parent;)n.parent._time!==n._start+(n._ts>=0?n._tTime/n._ts:(n.totalDuration()-n._tTime)/-n._ts)&&n.totalTime(n._tTime,!0),n=n.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&e<this._tDur||this._ts<0&&e>0||!this._tDur&&!e)&&Xu(this._dp,this,this._start-this._delay)}return(this._tTime!==e||!this._dur&&!t||this._initted&&Math.abs(this._zTime)===kl||!e&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=e),Tu(this,e,t)),this},t.time=function(e,t){return arguments.length?this.totalTime(Math.min(this.totalDuration(),e+Bu(this))%(this._dur+this._rDelay)||(e?this._dur:0),t):this._time},t.totalProgress=function(e,t){return arguments.length?this.totalTime(this.totalDuration()*e,t):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},t.progress=function(e,t){return arguments.length?this.totalTime(this.duration()*(!this._yoyo||1&this.iteration()?e:1-e)+Bu(this),t):this.duration()?Math.min(1,this._time/this._dur):this.ratio},t.iteration=function(e,t){var n=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(e-1)*n,t):this._repeat?Vu(this._tTime,n)+1:1},t.timeScale=function(e){if(!arguments.length)return-1e-8===this._rts?0:this._rts;if(this._rts===e)return this;var t=this.parent&&this._ts?Hu(this.parent._time,this):this._tTime;return this._rts=+e||0,this._ts=this._ps||-1e-8===e?0:this._rts,this.totalTime(ic(-this._delay,this._tDur,t),!0),Gu(this),zu(this)},t.paused=function(e){return arguments.length?(this._ps!==e&&(this._ps=e,e?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Pc(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,1===this.progress()&&Math.abs(this._zTime)!==kl&&(this._tTime-=kl)))),this):this._ps},t.startTime=function(e){if(arguments.length){this._start=e;var t=this.parent||this._dp;return t&&(t._sort||!this.parent)&&Xu(t,this,e-this._delay),this}return this._start},t.endTime=function(e){return this._start+(Bl(e)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},t.rawTime=function(e){var t=this.parent||this._dp;return t?e&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Hu(t.rawTime(e),this):this._tTime:this._tTime},t.revert=function(e){void 0===e&&(e=su);var t=Zs;return Zs=e,(this._initted||this._startAt)&&(this.timeline&&this.timeline.revert(e),this.totalTime(-.01,e.suppressEvents)),"nested"!==this.data&&!1!==e.kill&&this.kill(),Zs=t,this},t.globalTime=function(e){for(var t=this,n=arguments.length?e:t.rawTime();t;)n=t._start+n/(t._ts||1),t=t._dp;return!this.parent&&this.vars.immediateRender?-1:n},t.repeat=function(e){return arguments.length?(this._repeat=e===1/0?-2:e,Ku(this)):-2===this._repeat?1/0:this._repeat},t.repeatDelay=function(e){if(arguments.length){var t=this._time;return this._rDelay=e,Ku(this),t?this.time(t):this}return this._rDelay},t.yoyo=function(e){return arguments.length?(this._yoyo=e,this):this._yoyo},t.seek=function(e,t){return this.totalTime(ec(this,e),Bl(t))},t.restart=function(e,t){return this.play().totalTime(e?-this._delay:0,Bl(t))},t.play=function(e,t){return null!=e&&this.seek(e,t),this.reversed(!1).paused(!1)},t.reverse=function(e,t){return null!=e&&this.seek(e||this.totalDuration(),t),this.reversed(!0).paused(!1)},t.pause=function(e,t){return null!=e&&this.seek(e,t),this.paused(!0)},t.resume=function(){return this.paused(!1)},t.reversed=function(e){return arguments.length?(!!e!==this.reversed()&&this.timeScale(-this._rts||(e?-1e-8:0)),this):this._rts<0},t.invalidate=function(){return this._initted=this._act=0,this._zTime=-1e-8,this},t.isActive=function(){var e,t=this.parent||this._dp,n=this._start;return!(t&&!(this._ts&&this._initted&&t.isActive()&&(e=t.rawTime(!0))>=n&&e<this.endTime(!0)-kl))},t.eventCallback=function(e,t,n){var i=this.vars;return arguments.length>1?(t?(i[e]=t,n&&(i[e+"Params"]=n),"onUpdate"===e&&(this._onUpdate=t)):delete i[e],this):i[e]},t.then=function(e){var t=this;return new Promise((function(n){var i=Nl(e)?e:Eu,r=function(){var e=t.then;t.then=null,Nl(i)&&(i=i(t))&&(i.then||i===t)&&(t.then=e),n(i),t.then=e};t._initted&&1===t.totalProgress()&&t._ts>=0||!t._tTime&&t._ts<0?r():t._prom=r}))},t.kill=function(){yc(this)},e}();ku(Wc.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-1e-8,_prom:0,_ps:!1,_rts:1});var jc=function(e){var t=function(t,n){var i;return void 0===t&&(t={}),(i=e.call(this,t)||this).labels={},i.smoothChildTiming=!!t.smoothChildTiming,i.autoRemoveChildren=!!t.autoRemoveChildren,i._sort=Bl(t.sortChildren),Ks&&Xu(t.parent||Ks,qs(i),n),t.reversed&&i.reverse(),t.paused&&i.paused(!0),t.scrollTrigger&&qu(qs(i),t.scrollTrigger),i};Ys(t,e);var n=t.prototype;return n.to=function(e,t,n){return tc(0,arguments,this),this},n.from=function(e,t,n){return tc(1,arguments,this),this},n.fromTo=function(e,t,n,i){return tc(2,arguments,this),this},n.set=function(e,t,n){return t.duration=0,t.parent=this,Du(t).repeatDelay||(t.repeat=0),t.immediateRender=!!t.immediateRender,new nh(e,t,ec(this,n),1),this},n.call=function(e,t,n){return Xu(this,nh.delayedCall(0,e,t),n)},n.staggerTo=function(e,t,n,i,r,a,o){return n.duration=t,n.stagger=n.stagger||i,n.onComplete=a,n.onCompleteParams=o,n.parent=this,new nh(e,n,ec(this,r)),this},n.staggerFrom=function(e,t,n,i,r,a,o){return n.runBackwards=1,Du(n).immediateRender=Bl(n.immediateRender),this.staggerTo(e,t,n,i,r,a,o)},n.staggerFromTo=function(e,t,n,i,r,a,o,s){return i.startAt=n,Du(i).immediateRender=Bl(i.immediateRender),this.staggerTo(e,t,i,r,a,o,s)},n.render=function(e,t,n){var i,r,a,o,s,l,u,c,h,d,f,p,m=this._time,v=this._dirty?this.totalDuration():this._tDur,g=this._dur,_=e<=0?0:bu(e),y=this._zTime<0!=e<0&&(this._initted||!g);if(this!==Ks&&_>v&&e>=0&&(_=v),_!==this._tTime||n||y){if(m!==this._time&&g&&(_+=this._time-m,e+=this._time-m),i=_,h=this._start,l=!(c=this._ts),y&&(g||(m=this._zTime),(e||!t)&&(this._zTime=e)),this._repeat){if(f=this._yoyo,s=g+this._rDelay,this._repeat<-1&&e<0)return this.totalTime(100*s+e,t,n);if(i=bu(_%s),_===v?(o=this._repeat,i=g):((o=~~(_/s))&&o===_/s&&(i=g,o--),i>g&&(i=g)),d=Vu(this._tTime,s),!m&&this._tTime&&d!==o&&(d=o),f&&1&o&&(i=g-i,p=1),o!==d&&!this._lock){var x=f&&1&d,b=x===(f&&1&o);if(o<d&&(x=!x),m=x?0:g,this._lock=1,this.render(m||(p?0:bu(o*s)),t,!g)._lock=0,this._tTime=_,!t&&this.parent&&_c(this,"onRepeat"),this.vars.repeatRefresh&&!p&&(this.invalidate()._lock=1),m&&m!==this._time||l!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(g=this._dur,v=this._tDur,b&&(this._lock=2,m=x?g:-1e-4,this.render(m,!0),this.vars.repeatRefresh&&!p&&this.invalidate()),this._lock=0,!this._ts&&!l)return this;zc(this,p)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(u=function(e,t,n){var i;if(n>t)for(i=e._first;i&&i._start<=n;){if("isPause"===i.data&&i._start>t)return i;i=i._next}else for(i=e._last;i&&i._start>=n;){if("isPause"===i.data&&i._start<t)return i;i=i._prev}}(this,bu(m),bu(i)),u&&(_-=i-(i=u._start))),this._tTime=_,this._time=i,this._act=!c,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=e,m=0),!m&&i&&!t&&(_c(this,"onStart"),this._tTime!==_))return this;if(i>=m&&e>=0)for(r=this._first;r;){if(a=r._next,(r._act||i>=r._start)&&r._ts&&u!==r){if(r.parent!==this)return this.render(e,t,n);if(r.render(r._ts>0?(i-r._start)*r._ts:(r._dirty?r.totalDuration():r._tDur)+(i-r._start)*r._ts,t,n),i!==this._time||!this._ts&&!l){u=0,a&&(_+=this._zTime=-1e-8);break}}r=a}else{r=this._last;for(var w=e<0?e:i;r;){if(a=r._prev,(r._act||w<=r._end)&&r._ts&&u!==r){if(r.parent!==this)return this.render(e,t,n);if(r.render(r._ts>0?(w-r._start)*r._ts:(r._dirty?r.totalDuration():r._tDur)+(w-r._start)*r._ts,t,n||Zs&&(r._initted||r._startAt)),i!==this._time||!this._ts&&!l){u=0,a&&(_+=this._zTime=w?-1e-8:kl);break}}r=a}}if(u&&!t&&(this.pause(),u.render(i>=m?0:-1e-8)._zTime=i>=m?1:-1,this._ts))return this._start=h,Gu(this),this.render(e,t,n);this._onUpdate&&!t&&_c(this,"onUpdate",!0),(_===v&&this._tTime>=this.totalDuration()||!_&&m)&&(h!==this._start&&Math.abs(c)===Math.abs(this._ts)||this._lock||((e||!g)&&(_===v&&this._ts>0||!_&&this._ts<0)&&Ou(this,1),t||e<0&&!m||!_&&!m&&v||(_c(this,_===v&&e>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(_<v&&this.timeScale()>0)&&this._prom())))}return this},n.add=function(e,t){var n=this;if(zl(t)||(t=ec(this,t,e)),!(e instanceof Wc)){if(Wl(e))return e.forEach((function(e){return n.add(e,t)})),this;if(Ol(e))return this.addLabel(e,t);if(!Nl(e))return this;e=nh.delayedCall(0,e)}return this!==e?Xu(this,e,t):this},n.getChildren=function(e,t,n,i){void 0===e&&(e=!0),void 0===t&&(t=!0),void 0===n&&(n=!0),void 0===i&&(i=-1e8);for(var r=[],a=this._first;a;)a._start>=i&&(a instanceof nh?t&&r.push(a):(n&&r.push(a),e&&r.push.apply(r,a.getChildren(!0,t,n)))),a=a._next;return r},n.getById=function(e){for(var t=this.getChildren(1,1,1),n=t.length;n--;)if(t[n].vars.id===e)return t[n]},n.remove=function(e){return Ol(e)?this.removeLabel(e):Nl(e)?this.killTweensOf(e):(Iu(this,e),e===this._recent&&(this._recent=this._last),Nu(this))},n.totalTime=function(t,n){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=bu(Lc.time-(this._ts>0?t/this._ts:(this.totalDuration()-t)/-this._ts))),e.prototype.totalTime.call(this,t,n),this._forcing=0,this):this._tTime},n.addLabel=function(e,t){return this.labels[e]=ec(this,t),this},n.removeLabel=function(e){return delete this.labels[e],this},n.addPause=function(e,t,n){var i=nh.delayedCall(0,t||ru,n);return i.data="isPause",this._hasPause=1,Xu(this,i,ec(this,e))},n.removePause=function(e){var t=this._first;for(e=ec(this,e);t;)t._start===e&&"isPause"===t.data&&Ou(t),t=t._next},n.killTweensOf=function(e,t,n){for(var i=this.getTweensOf(e,n),r=i.length;r--;)Xc!==i[r]&&i[r].kill(e,t);return this},n.getTweensOf=function(e,t){for(var n,i=[],r=sc(e),a=this._first,o=zl(t);a;)a instanceof nh?Mu(a._targets,r)&&(o?(!Xc||a._initted&&a._ts)&&a.globalTime(0)<=t&&a.globalTime(a.totalDuration())>t:!t||a.isActive())&&i.push(a):(n=a.getTweensOf(r,t)).length&&i.push.apply(i,n),a=a._next;return i},n.tweenTo=function(e,t){t=t||{};var n,i=this,r=ec(i,e),a=t,o=a.startAt,s=a.onStart,l=a.onStartParams,u=a.immediateRender,c=nh.to(i,ku({ease:t.ease||"none",lazy:!1,immediateRender:!1,time:r,overwrite:"auto",duration:t.duration||Math.abs((r-(o&&"time"in o?o.time:i._time))/i.timeScale())||kl,onStart:function(){if(i.pause(),!n){var e=t.duration||Math.abs((r-(o&&"time"in o?o.time:i._time))/i.timeScale());c._dur!==e&&Ju(c,e,0,1).render(c._time,!0,!0),n=1}s&&s.apply(c,l||[])}},t));return u?c.render(0):c},n.tweenFromTo=function(e,t,n){return this.tweenTo(t,ku({startAt:{time:ec(this,e)}},n))},n.recent=function(){return this._recent},n.nextLabel=function(e){return void 0===e&&(e=this._time),gc(this,ec(this,e))},n.previousLabel=function(e){return void 0===e&&(e=this._time),gc(this,ec(this,e),1)},n.currentLabel=function(e){return arguments.length?this.seek(e,!0):this.previousLabel(this._time+kl)},n.shiftChildren=function(e,t,n){void 0===n&&(n=0);for(var i,r=this._first,a=this.labels;r;)r._start>=n&&(r._start+=e,r._end+=e),r=r._next;if(t)for(i in a)a[i]>=n&&(a[i]+=e);return Nu(this)},n.invalidate=function(t){var n=this._first;for(this._lock=0;n;)n.invalidate(t),n=n._next;return e.prototype.invalidate.call(this,t)},n.clear=function(e){void 0===e&&(e=!0);for(var t,n=this._first;n;)t=n._next,this.remove(n),n=t;return this._dp&&(this._time=this._tTime=this._pTime=0),e&&(this.labels={}),Nu(this)},n.totalDuration=function(e){var t,n,i,r=0,a=this,o=a._last,s=El;if(arguments.length)return a.timeScale((a._repeat<0?a.duration():a.totalDuration())/(a.reversed()?-e:e));if(a._dirty){for(i=a.parent;o;)t=o._prev,o._dirty&&o.totalDuration(),(n=o._start)>s&&a._sort&&o._ts&&!a._lock?(a._lock=1,Xu(a,o,n-o._delay,1)._lock=0):s=n,n<0&&o._ts&&(r-=n,(!i&&!a._dp||i&&i.smoothChildTiming)&&(a._start+=n/a._ts,a._time-=n,a._tTime-=n),a.shiftChildren(-n,!1,-1/0),s=0),o._end>r&&o._ts&&(r=o._end),o=t;Ju(a,a===Ks&&a._time>r?a._time:r,1,1),a._dirty=0}return a._tDur},t.updateRoot=function(e){if(Ks._ts&&(Tu(Ks,Hu(e,Ks)),il=Lc.frame),Lc.frame>=fu){fu+=Tl.autoSleep||120;var t=Ks._first;if((!t||!t._ts)&&Tl.autoSleep&&Lc._listeners.length<2){for(;t&&!t._ts;)t=t._next;t||Lc.sleep()}}},t}(Wc);ku(jc.prototype,{_lock:0,_hasPause:0,_forcing:0});var Xc,qc,Yc=function(e,t,n,i,r,a,o){var s,l,u,c,h,d,f,p,m=new vh(this._pt,e,t,0,1,ch,null,r),v=0,g=0;for(m.b=n,m.e=i,n+="",(f=~(i+="").indexOf("random("))&&(i=mc(i)),a&&(a(p=[n,i],e,t),n=p[0],i=p[1]),l=n.match(Yl)||[];s=Yl.exec(i);)c=s[0],h=i.substring(v,s.index),u?u=(u+1)%5:"rgba("===h.substr(-5)&&(u=1),c!==l[g++]&&(d=parseFloat(l[g-1])||0,m._pt={_next:m._pt,p:h||1===g?h:",",s:d,c:"="===c.charAt(1)?wu(d,c)-d:parseFloat(c)-d,m:u&&u<4?Math.round:0},v=Yl.lastIndex);return m.c=v<i.length?i.substring(v,i.length):"",m.fp=o,($l.test(i)||f)&&(m.e=0),this._pt=m,m},$c=function(e,t,n,i,r,a,o,s,l,u){Nl(i)&&(i=i(r||0,e,a));var c,h=e[t],d="get"!==n?n:Nl(h)?l?e[t.indexOf("set")||!Nl(e["get"+t.substr(3)])?t:"get"+t.substr(3)](l):e[t]():h,f=Nl(h)?l?ah:rh:ih;if(Ol(i)&&(~i.indexOf("random(")&&(i=mc(i)),"="===i.charAt(1)&&((c=wu(d,i)+(rc(d)||0))||0===c)&&(i=c)),!u||d!==i||qc)return isNaN(d*i)||""===i?(!h&&!(t in e)&&tu(t,i),Yc.call(this,e,t,d,i,f,s||Tl.stringFilter,l)):(c=new vh(this._pt,e,t,+d||0,i-(d||0),"boolean"==typeof h?uh:lh,0,f),l&&(c.fp=l),o&&c.modifier(o,this,e),this._pt=c)},Zc=function(e,t,n,i,r,a){var o,s,l,u;if(hu[e]&&!1!==(o=new hu[e]).init(r,o.rawVars?t[e]:function(e,t,n,i,r){if(Nl(e)&&(e=Qc(e,r,t,n,i)),!Fl(e)||e.style&&e.nodeType||Wl(e)||Gl(e))return Ol(e)?Qc(e,r,t,n,i):e;var a,o={};for(a in e)o[a]=Qc(e[a],r,t,n,i);return o}(t[e],i,r,a,n),n,i,a)&&(n._pt=s=new vh(n._pt,r,e,0,1,o.render,o,0,o.priority),n!==rl))for(l=n._ptLookup[n._targets.indexOf(r)],u=o._props.length;u--;)l[o._props[u]]=s;return o},Jc=function e(t,n,i){var r,a,o,s,l,u,c,h,d,f,p,m,v,g=t.vars,_=g.ease,y=g.startAt,x=g.immediateRender,b=g.lazy,w=g.onUpdate,M=g.onUpdateParams,S=g.callbackScope,T=g.runBackwards,A=g.yoyoEase,E=g.keyframes,k=g.autoRevert,C=t._dur,L=t._startAt,P=t._targets,D=t.parent,R=D&&"nested"===D.data?D.vars.targets:P,I="auto"===t._overwrite&&!$s,O=t.timeline;if(O&&(!E||!_)&&(_="none"),t._ease=Uc(_,Al.ease),t._yEase=A?Nc(Uc(!0===A?_:A,Al.ease)):0,A&&t._yoyo&&!t._repeat&&(A=t._yEase,t._yEase=t._ease,t._ease=A),t._from=!O&&!!g.runBackwards,!O||E&&!g.stagger){if(m=(h=P[0]?gu(P[0]).harness:0)&&g[h.prop],r=Pu(g,lu),L&&(L._zTime<0&&L.progress(1),n<0&&T&&x&&!k?L.render(-1,!0):L.revert(T&&C?ou:au),L._lazy=0),y){if(Ou(t._startAt=nh.set(P,ku({data:"isStart",overwrite:!1,parent:D,immediateRender:!0,lazy:Bl(b),startAt:null,delay:0,onUpdate:w,onUpdateParams:M,callbackScope:S,stagger:0},y))),t._startAt._dp=0,n<0&&(Zs||!x&&!k)&&t._startAt.revert(ou),x&&C&&n<=0&&i<=0)return void(n&&(t._zTime=n))}else if(T&&C&&!L)if(n&&(x=!1),o=ku({overwrite:!1,data:"isFromStart",lazy:x&&Bl(b),immediateRender:x,stagger:0,parent:D},r),m&&(o[h.prop]=m),Ou(t._startAt=nh.set(P,o)),t._startAt._dp=0,n<0&&(Zs?t._startAt.revert(ou):t._startAt.render(-1,!0)),t._zTime=n,x){if(!n)return}else e(t._startAt,kl,kl);for(t._pt=t._ptCache=0,b=C&&Bl(b)||b&&!C,a=0;a<P.length;a++){if(c=(l=P[a])._gsap||vu(P)[a]._gsap,t._ptLookup[a]=f={},cu[c.id]&&uu.length&&Su(),p=R===P?a:R.indexOf(l),h&&!1!==(d=new h).init(l,m||r,t,p,R)&&(t._pt=s=new vh(t._pt,l,d.name,0,1,d.render,d,0,d.priority),d._props.forEach((function(e){f[e]=s})),d.priority&&(u=1)),!h||m)for(o in r)hu[o]&&(d=Zc(o,r,t,p,l,R))?d.priority&&(u=1):f[o]=s=$c.call(t,l,o,"get",r[o],p,R,0,g.stringFilter);t._op&&t._op[a]&&t.kill(l,t._op[a]),I&&t._pt&&(Xc=t,Ks.killTweensOf(l,f,t.globalTime(n)),v=!t.parent,Xc=0),t._pt&&b&&(cu[c.id]=1)}u&&mh(t),t._onInit&&t._onInit(t)}t._onUpdate=w,t._initted=(!t._op||t._pt)&&!v,E&&n<=0&&O.render(El,!0,!0)},Kc=function(e,t,n,i){var r,a,o=t.ease||i||"power1.inOut";if(Wl(t))a=n[e]||(n[e]=[]),t.forEach((function(e,n){return a.push({t:n/(t.length-1)*100,v:e,e:o})}));else for(r in t)a=n[r]||(n[r]=[]),"ease"===r||a.push({t:parseFloat(e),v:t[r],e:o})},Qc=function(e,t,n,i,r){return Nl(e)?e.call(t,n,i,r):Ol(e)&&~e.indexOf("random(")?mc(e):e},eh=mu+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",th={};yu(eh+",id,stagger,delay,duration,paused,scrollTrigger",(function(e){return th[e]=1}));var nh=function(e){var t=function(t,n,i,r){var a;"number"==typeof n&&(i.duration=n,n=i,i=null);var o,s,l,u,c,h,d,f,p=(a=e.call(this,r?n:Du(n))||this).vars,m=p.duration,v=p.delay,g=p.immediateRender,_=p.stagger,y=p.overwrite,x=p.keyframes,b=p.defaults,w=p.scrollTrigger,M=p.yoyoEase,S=n.parent||Ks,T=(Wl(t)||Gl(t)?zl(t[0]):"length"in n)?[t]:sc(t);if(a._targets=T.length?vu(T):nu("GSAP target "+t+" not found. https://greensock.com",!Tl.nullTargetWarn)||[],a._ptLookup=[],a._overwrite=y,x||_||Hl(m)||Hl(v)){if(n=a.vars,(o=a.timeline=new jc({data:"nested",defaults:b||{},targets:S&&"nested"===S.data?S.vars.targets:T})).kill(),o.parent=o._dp=qs(a),o._start=0,_||Hl(m)||Hl(v)){if(u=T.length,d=_&&cc(_),Fl(_))for(c in _)~eh.indexOf(c)&&(f||(f={}),f[c]=_[c]);for(s=0;s<u;s++)(l=Pu(n,th)).stagger=0,M&&(l.yoyoEase=M),f&&Cu(l,f),h=T[s],l.duration=+Qc(m,qs(a),s,h,T),l.delay=(+Qc(v,qs(a),s,h,T)||0)-a._delay,!_&&1===u&&l.delay&&(a._delay=v=l.delay,a._start+=v,l.delay=0),o.to(h,l,d?d(s,h,T):0),o._ease=Dc.none;o.duration()?m=v=0:a.timeline=0}else if(x){Du(ku(o.vars.defaults,{ease:"none"})),o._ease=Uc(x.ease||n.ease||"none");var A,E,k,C=0;if(Wl(x))x.forEach((function(e){return o.to(T,e,">")})),o.duration();else{for(c in l={},x)"ease"===c||"easeEach"===c||Kc(c,x[c],l,x.easeEach);for(c in l)for(A=l[c].sort((function(e,t){return e.t-t.t})),C=0,s=0;s<A.length;s++)(k={ease:(E=A[s]).e,duration:(E.t-(s?A[s-1].t:0))/100*m})[c]=E.v,o.to(T,k,C),C+=k.duration;o.duration()<m&&o.to({},{duration:m-o.duration()})}}m||a.duration(m=o.duration())}else a.timeline=0;return!0!==y||$s||(Xc=qs(a),Ks.killTweensOf(T),Xc=0),Xu(S,qs(a),i),n.reversed&&a.reverse(),n.paused&&a.paused(!0),(g||!m&&!x&&a._start===bu(S._time)&&Bl(g)&&Fu(qs(a))&&"nested"!==S.data)&&(a._tTime=-1e-8,a.render(Math.max(0,-v)||0)),w&&qu(qs(a),w),a};Ys(t,e);var n=t.prototype;return n.render=function(e,t,n){var i,r,a,o,s,l,u,c,h,d=this._time,f=this._tDur,p=this._dur,m=e<0,v=e>f-kl&&!m?f:e<kl?0:e;if(p){if(v!==this._tTime||!e||n||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==m){if(i=v,c=this.timeline,this._repeat){if(o=p+this._rDelay,this._repeat<-1&&m)return this.totalTime(100*o+e,t,n);if(i=bu(v%o),v===f?(a=this._repeat,i=p):((a=~~(v/o))&&a===v/o&&(i=p,a--),i>p&&(i=p)),(l=this._yoyo&&1&a)&&(h=this._yEase,i=p-i),s=Vu(this._tTime,o),i===d&&!n&&this._initted)return this._tTime=v,this;a!==s&&(c&&this._yEase&&zc(c,l),!this.vars.repeatRefresh||l||this._lock||(this._lock=n=1,this.render(bu(o*a),!0).invalidate()._lock=0))}if(!this._initted){if(Yu(this,m?e:i,n,t,v))return this._tTime=0,this;if(d!==this._time)return this;if(p!==this._dur)return this.render(e,t,n)}if(this._tTime=v,this._time=i,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=u=(h||this._ease)(i/p),this._from&&(this.ratio=u=1-u),i&&!d&&!t&&(_c(this,"onStart"),this._tTime!==v))return this;for(r=this._pt;r;)r.r(u,r.d),r=r._next;c&&c.render(e<0?e:!i&&l?-1e-8:c._dur*c._ease(i/this._dur),t,n)||this._startAt&&(this._zTime=e),this._onUpdate&&!t&&(m&&Uu(this,e,0,n),_c(this,"onUpdate")),this._repeat&&a!==s&&this.vars.onRepeat&&!t&&this.parent&&_c(this,"onRepeat"),v!==this._tDur&&v||this._tTime!==v||(m&&!this._onUpdate&&Uu(this,e,0,!0),(e||!p)&&(v===this._tDur&&this._ts>0||!v&&this._ts<0)&&Ou(this,1),t||m&&!d||!(v||d||l)||(_c(this,v===f?"onComplete":"onReverseComplete",!0),this._prom&&!(v<f&&this.timeScale()>0)&&this._prom()))}}else!function(e,t,n,i){var r,a,o,s=e.ratio,l=t<0||!t&&(!e._start&&$u(e)&&(e._initted||!Zu(e))||(e._ts<0||e._dp._ts<0)&&!Zu(e))?0:1,u=e._rDelay,c=0;if(u&&e._repeat&&(c=ic(0,e._tDur,t),a=Vu(c,u),e._yoyo&&1&a&&(l=1-l),a!==Vu(e._tTime,u)&&(s=1-l,e.vars.repeatRefresh&&e._initted&&e.invalidate())),l!==s||Zs||i||e._zTime===kl||!t&&e._zTime){if(!e._initted&&Yu(e,t,i,n,c))return;for(o=e._zTime,e._zTime=t||(n?kl:0),n||(n=t&&!o),e.ratio=l,e._from&&(l=1-l),e._time=0,e._tTime=c,r=e._pt;r;)r.r(l,r.d),r=r._next;t<0&&Uu(e,t,0,!0),e._onUpdate&&!n&&_c(e,"onUpdate"),c&&e._repeat&&!n&&e.parent&&_c(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===l&&(l&&Ou(e,1),n||Zs||(_c(e,l?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)}(this,e,t,n);return this},n.targets=function(){return this._targets},n.invalidate=function(t){return(!t||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(t),e.prototype.invalidate.call(this,t)},n.resetTo=function(e,t,n,i){al||Lc.wake(),this._ts||this.play();var r=Math.min(this._dur,(this._dp._time-this._start)*this._ts);return this._initted||Jc(this,r),function(e,t,n,i,r,a,o){var s,l,u,c,h=(e._pt&&e._ptCache||(e._ptCache={}))[t];if(!h)for(h=e._ptCache[t]=[],u=e._ptLookup,c=e._targets.length;c--;){if((s=u[c][t])&&s.d&&s.d._pt)for(s=s.d._pt;s&&s.p!==t&&s.fp!==t;)s=s._next;if(!s)return qc=1,e.vars[t]="+=0",Jc(e,o),qc=0,1;h.push(s)}for(c=h.length;c--;)(s=(l=h[c])._pt||l).s=!i&&0!==i||r?s.s+(i||0)+a*s.c:i,s.c=n-s.s,l.e&&(l.e=xu(n)+rc(l.e)),l.b&&(l.b=s.s+rc(l.b))}(this,e,t,n,i,this._ease(r/this._dur),r)?this.resetTo(e,t,n,i):(Wu(this,0),this.parent||Ru(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},n.kill=function(e,t){if(void 0===t&&(t="all"),!(e||t&&"all"!==t))return this._lazy=this._pt=0,this.parent?yc(this):this;if(this.timeline){var n=this.timeline.totalDuration();return this.timeline.killTweensOf(e,t,Xc&&!0!==Xc.vars.overwrite)._first||yc(this),this.parent&&n!==this.timeline.totalDuration()&&Ju(this,this._dur*this.timeline._tDur/n,0,1),this}var i,r,a,o,s,l,u,c=this._targets,h=e?sc(e):c,d=this._ptLookup,f=this._pt;if((!t||"all"===t)&&function(e,t){for(var n=e.length,i=n===t.length;i&&n--&&e[n]===t[n];);return n<0}(c,h))return"all"===t&&(this._pt=0),yc(this);for(i=this._op=this._op||[],"all"!==t&&(Ol(t)&&(s={},yu(t,(function(e){return s[e]=1})),t=s),t=function(e,t){var n,i,r,a,o=e[0]?gu(e[0]).harness:0,s=o&&o.aliases;if(!s)return t;for(i in n=Cu({},t),s)if(i in n)for(r=(a=s[i].split(",")).length;r--;)n[a[r]]=n[i];return n}(c,t)),u=c.length;u--;)if(~h.indexOf(c[u]))for(s in r=d[u],"all"===t?(i[u]=t,o=r,a={}):(a=i[u]=i[u]||{},o=t),o)(l=r&&r[s])&&("kill"in l.d&&!0!==l.d.kill(s)||Iu(this,l,"_pt"),delete r[s]),"all"!==a&&(a[s]=1);return this._initted&&!this._pt&&f&&yc(this),this},t.to=function(e,n){return new t(e,n,arguments[2])},t.from=function(e,t){return tc(1,arguments)},t.delayedCall=function(e,n,i,r){return new t(n,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:e,onComplete:n,onReverseComplete:n,onCompleteParams:i,onReverseCompleteParams:i,callbackScope:r})},t.fromTo=function(e,t,n){return tc(2,arguments)},t.set=function(e,n){return n.duration=0,n.repeatDelay||(n.repeat=0),new t(e,n)},t.killTweensOf=function(e,t,n){return Ks.killTweensOf(e,t,n)},t}(Wc);ku(nh.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0}),yu("staggerTo,staggerFrom,staggerFromTo",(function(e){nh[e]=function(){var t=new jc,n=ac.call(arguments,0);return n.splice("staggerFromTo"===e?5:4,0,0),t[e].apply(t,n)}}));var ih=function(e,t,n){return e[t]=n},rh=function(e,t,n){return e[t](n)},ah=function(e,t,n,i){return e[t](i.fp,n)},oh=function(e,t,n){return e.setAttribute(t,n)},sh=function(e,t){return Nl(e[t])?rh:Ul(e[t])&&e.setAttribute?oh:ih},lh=function(e,t){return t.set(t.t,t.p,Math.round(1e6*(t.s+t.c*e))/1e6,t)},uh=function(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},ch=function(e,t){var n=t._pt,i="";if(!e&&t.b)i=t.b;else if(1===e&&t.e)i=t.e;else{for(;n;)i=n.p+(n.m?n.m(n.s+n.c*e):Math.round(1e4*(n.s+n.c*e))/1e4)+i,n=n._next;i+=t.c}t.set(t.t,t.p,i,t)},hh=function(e,t){for(var n=t._pt;n;)n.r(e,n.d),n=n._next},dh=function(e,t,n,i){for(var r,a=this._pt;a;)r=a._next,a.p===i&&a.modifier(e,t,n),a=r},fh=function(e){for(var t,n,i=this._pt;i;)n=i._next,i.p===e&&!i.op||i.op===e?Iu(this,i,"_pt"):i.dep||(t=1),i=n;return!t},ph=function(e,t,n,i){i.mSet(e,t,i.m.call(i.tween,n,i.mt),i)},mh=function(e){for(var t,n,i,r,a=e._pt;a;){for(t=a._next,n=i;n&&n.pr>a.pr;)n=n._next;(a._prev=n?n._prev:r)?a._prev._next=a:i=a,(a._next=n)?n._prev=a:r=a,a=t}e._pt=i},vh=function(){var e=function(e,t,n,i,r,a,o,s,l){this.t=t,this.s=i,this.c=r,this.p=n,this.r=a||lh,this.d=o||this,this.set=s||ih,this.pr=l||0,this._next=e,e&&(e._prev=this)};return e.prototype.modifier=function(e,t,n){this.mSet=this.mSet||this.set,this.set=ph,this.m=e,this.mt=n,this.tween=t},e}();yu(mu+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",(function(e){return lu[e]=1})),Kl.TweenMax=Kl.TweenLite=nh,Kl.TimelineLite=Kl.TimelineMax=jc,Ks=new jc({sortChildren:!1,defaults:Al,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0}),Tl.stringFilter=Cc;var gh=[],_h={},yh=[],xh=0,bh=function(e){return(_h[e]||yh).map((function(e){return e()}))},wh=function(){var e=Date.now(),t=[];e-xh>2&&(bh("matchMediaInit"),gh.forEach((function(e){var n,i,r,a,o=e.queries,s=e.conditions;for(i in o)(n=Qs.matchMedia(o[i]).matches)&&(r=1),n!==s[i]&&(s[i]=n,a=1);a&&(e.revert(),r&&t.push(e))})),bh("matchMediaRevert"),t.forEach((function(e){return e.onMatch(e)})),xh=e,bh("matchMedia"))},Mh=function(){var e=function(e,t){this.selector=t&&lc(t),this.data=[],this._r=[],this.isReverted=!1,e&&this.add(e)},t=e.prototype;return t.add=function(e,t,n){Nl(e)&&(n=t,t=e,e=Nl);var i=this,r=function(){var e,r=Js,a=i.selector;return r&&r!==i&&r.data.push(i),n&&(i.selector=lc(n)),Js=i,e=t.apply(i,arguments),Nl(e)&&i._r.push(e),Js=r,i.selector=a,i.isReverted=!1,e};return i.last=r,e===Nl?r(i):e?i[e]=r:r},t.ignore=function(e){var t=Js;Js=null,e(this),Js=t},t.getTweens=function(){var t=[];return this.data.forEach((function(n){return n instanceof e?t.push.apply(t,n.getTweens()):n instanceof nh&&!(n.parent&&"nested"===n.parent.data)&&t.push(n)})),t},t.clear=function(){this._r.length=this.data.length=0},t.kill=function(e,t){var n=this;if(e){var i=this.getTweens();this.data.forEach((function(e){"isFlip"===e.data&&(e.revert(),e.getChildren(!0,!0,!1).forEach((function(e){return i.splice(i.indexOf(e),1)})))})),i.map((function(e){return{g:e.globalTime(0),t:e}})).sort((function(e,t){return t.g-e.g||-1})).forEach((function(t){return t.t.revert(e)})),this.data.forEach((function(t){return!(t instanceof Wc)&&t.revert&&t.revert(e)})),this._r.forEach((function(t){return t(e,n)})),this.isReverted=!0}else this.data.forEach((function(e){return e.kill&&e.kill()}));if(this.clear(),t){var r=gh.indexOf(this);~r&&gh.splice(r,1)}},t.revert=function(e){this.kill(e||{})},e}(),Sh=function(){var e=function(e){this.contexts=[],this.scope=e},t=e.prototype;return t.add=function(e,t,n){Fl(e)||(e={matches:e});var i,r,a,o=new Mh(0,n||this.scope),s=o.conditions={};for(r in this.contexts.push(o),t=o.add("onMatch",t),o.queries=e,e)"all"===r?a=1:(i=Qs.matchMedia(e[r]))&&(gh.indexOf(o)<0&&gh.push(o),(s[r]=i.matches)&&(a=1),i.addListener?i.addListener(wh):i.addEventListener("change",wh));return a&&t(o),this},t.revert=function(e){this.kill(e||{})},t.kill=function(e){this.contexts.forEach((function(t){return t.kill(e,!0)}))},e}(),Th={registerPlugin:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t.forEach((function(e){return xc(e)}))},timeline:function(e){return new jc(e)},getTweensOf:function(e,t){return Ks.getTweensOf(e,t)},getProperty:function(e,t,n,i){Ol(e)&&(e=sc(e)[0]);var r=gu(e||{}).get,a=n?Eu:Au;return"native"===n&&(n=""),e?t?a((hu[t]&&hu[t].get||r)(e,t,n,i)):function(t,n,i){return a((hu[t]&&hu[t].get||r)(e,t,n,i))}:e},quickSetter:function(e,t,n){if((e=sc(e)).length>1){var i=e.map((function(e){return kh.quickSetter(e,t,n)})),r=i.length;return function(e){for(var t=r;t--;)i[t](e)}}e=e[0]||{};var a=hu[t],o=gu(e),s=o.harness&&(o.harness.aliases||{})[t]||t,l=a?function(t){var i=new a;rl._pt=0,i.init(e,n?t+n:t,rl,0,[e]),i.render(1,i),rl._pt&&hh(1,rl)}:o.set(e,s);return a?l:function(t){return l(e,s,n?t+n:t,o,1)}},quickTo:function(e,t,n){var i,r=kh.to(e,Cu(((i={})[t]="+=0.1",i.paused=!0,i),n||{})),a=function(e,n,i){return r.resetTo(t,e,n,i)};return a.tween=r,a},isTweening:function(e){return Ks.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=Uc(e.ease,Al.ease)),Lu(Al,e||{})},config:function(e){return Lu(Tl,e||{})},registerEffect:function(e){var t=e.name,n=e.effect,i=e.plugins,r=e.defaults,a=e.extendTimeline;(i||"").split(",").forEach((function(e){return e&&!hu[e]&&!Kl[e]&&nu(t+" effect requires "+e+" plugin.")})),du[t]=function(e,t,i){return n(sc(e),ku(t||{},r),i)},a&&(jc.prototype[t]=function(e,n,i){return this.add(du[t](e,Fl(n)?n:(i=n)&&{},this),i)})},registerEase:function(e,t){Dc[e]=Uc(t)},parseEase:function(e,t){return arguments.length?Uc(e,t):Dc},getById:function(e){return Ks.getById(e)},exportRoot:function(e,t){void 0===e&&(e={});var n,i,r=new jc(e);for(r.smoothChildTiming=Bl(e.smoothChildTiming),Ks.remove(r),r._dp=0,r._time=r._tTime=Ks._time,n=Ks._first;n;)i=n._next,!t&&!n._dur&&n instanceof nh&&n.vars.onComplete===n._targets[0]||Xu(r,n,n._start-n._delay),n=i;return Xu(Ks,r,0),r},context:function(e,t){return e?new Mh(e,t):Js},matchMedia:function(e){return new Sh(e)},matchMediaRefresh:function(){return gh.forEach((function(e){var t,n,i=e.conditions;for(n in i)i[n]&&(i[n]=!1,t=1);t&&e.revert()}))||wh()},addEventListener:function(e,t){var n=_h[e]||(_h[e]=[]);~n.indexOf(t)||n.push(t)},removeEventListener:function(e,t){var n=_h[e],i=n&&n.indexOf(t);i>=0&&n.splice(i,1)},utils:{wrap:function e(t,n,i){var r=n-t;return Wl(t)?pc(t,e(0,t.length),n):nc(i,(function(e){return(r+(e-t)%r)%r+t}))},wrapYoyo:function e(t,n,i){var r=n-t,a=2*r;return Wl(t)?pc(t,e(0,t.length-1),n):nc(i,(function(e){return t+((e=(a+(e-t)%a)%a||0)>r?a-e:e)}))},distribute:cc,random:fc,snap:dc,normalize:function(e,t,n){return vc(e,t,0,1,n)},getUnit:rc,clamp:function(e,t,n){return nc(n,(function(n){return ic(e,t,n)}))},splitColor:Sc,toArray:sc,selector:lc,mapRange:vc,pipe:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return t.reduce((function(e,t){return t(e)}),e)}},unitize:function(e,t){return function(n){return e(parseFloat(n))+(t||rc(n))}},interpolate:function e(t,n,i,r){var a=isNaN(t+n)?0:function(e){return(1-e)*t+e*n};if(!a){var o,s,l,u,c,h=Ol(t),d={};if(!0===i&&(r=1)&&(i=null),h)t={p:t},n={p:n};else if(Wl(t)&&!Wl(n)){for(l=[],u=t.length,c=u-2,s=1;s<u;s++)l.push(e(t[s-1],t[s]));u--,a=function(e){e*=u;var t=Math.min(c,~~e);return l[t](e-t)},i=n}else r||(t=Cu(Wl(t)?[]:{},t));if(!l){for(o in n)$c.call(d,t,o,"get",n[o]);a=function(e){return hh(e,d)||(h?t.p:t)}}}return nc(i,a)},shuffle:uc},install:eu,effects:du,ticker:Lc,updateRoot:jc.updateRoot,plugins:hu,globalTimeline:Ks,core:{PropTween:vh,globals:iu,Tween:nh,Timeline:jc,Animation:Wc,getCache:gu,_removeLinkedListItem:Iu,reverting:function(){return Zs},context:function(e){return e&&Js&&(Js.data.push(e),e._ctx=Js),Js},suppressOverwrites:function(e){return $s=e}}};yu("to,from,fromTo,delayedCall,set,killTweensOf",(function(e){return Th[e]=nh[e]})),Lc.add(jc.updateRoot),rl=Th.to({},{duration:0});var Ah=function(e,t){for(var n=e._pt;n&&n.p!==t&&n.op!==t&&n.fp!==t;)n=n._next;return n},Eh=function(e,t){return{name:e,rawVars:1,init:function(e,n,i){i._onInit=function(e){var i,r;if(Ol(n)&&(i={},yu(n,(function(e){return i[e]=1})),n=i),t){for(r in i={},n)i[r]=t(n[r]);n=i}!function(e,t){var n,i,r,a=e._targets;for(n in t)for(i=a.length;i--;)(r=e._ptLookup[i][n])&&(r=r.d)&&(r._pt&&(r=Ah(r,n)),r&&r.modifier&&r.modifier(t[n],e,a[i],n))}(e,n)}}}},kh=Th.registerPlugin({name:"attr",init:function(e,t,n,i,r){var a,o,s;for(a in this.tween=n,t)s=e.getAttribute(a)||"",(o=this.add(e,"setAttribute",(s||0)+"",t[a],i,r,0,0,a)).op=a,o.b=s,this._props.push(a)},render:function(e,t){for(var n=t._pt;n;)Zs?n.set(n.t,n.p,n.b,n):n.r(e,n.d),n=n._next}},{name:"endArray",init:function(e,t){for(var n=t.length;n--;)this.add(e,n,e[n]||0,t[n],0,0,0,0,0,1)}},Eh("roundProps",hc),Eh("modifiers"),Eh("snap",dc))||Th;nh.version=jc.version=kh.version="3.11.3",nl=1,Vl()&&Pc();Dc.Power0,Dc.Power1,Dc.Power2,Dc.Power3,Dc.Power4,Dc.Linear,Dc.Quad,Dc.Cubic,Dc.Quart,Dc.Quint,Dc.Strong,Dc.Elastic,Dc.Back,Dc.SteppedEase,Dc.Bounce,Dc.Sine,Dc.Expo,Dc.Circ
/*!
 * CSSPlugin 3.11.3
 * https://greensock.com
 *
 * Copyright 2008-2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/;var Ch,Lh,Ph,Dh,Rh,Ih,Oh,Nh,zh={},Uh=180/Math.PI,Fh=Math.PI/180,Bh=Math.atan2,Vh=/([A-Z])/g,Hh=/(left|right|width|margin|padding|x)/i,Gh=/[\s,\(]\S/,Wh={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},jh=function(e,t){return t.set(t.t,t.p,Math.round(1e4*(t.s+t.c*e))/1e4+t.u,t)},Xh=function(e,t){return t.set(t.t,t.p,1===e?t.e:Math.round(1e4*(t.s+t.c*e))/1e4+t.u,t)},qh=function(e,t){return t.set(t.t,t.p,e?Math.round(1e4*(t.s+t.c*e))/1e4+t.u:t.b,t)},Yh=function(e,t){var n=t.s+t.c*e;t.set(t.t,t.p,~~(n+(n<0?-.5:.5))+t.u,t)},$h=function(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},Zh=function(e,t){return t.set(t.t,t.p,1!==e?t.b:t.e,t)},Jh=function(e,t,n){return e.style[t]=n},Kh=function(e,t,n){return e.style.setProperty(t,n)},Qh=function(e,t,n){return e._gsap[t]=n},ed=function(e,t,n){return e._gsap.scaleX=e._gsap.scaleY=n},td=function(e,t,n,i,r){var a=e._gsap;a.scaleX=a.scaleY=n,a.renderTransform(r,a)},nd=function(e,t,n,i,r){var a=e._gsap;a[t]=n,a.renderTransform(r,a)},id="transform",rd=id+"Origin",ad=function(e,t){var n=this,i=this.target,r=i.style;if(e in zh){if(this.tfm=this.tfm||{},"transform"!==e&&(~(e=Wh[e]||e).indexOf(",")?e.split(",").forEach((function(e){return n.tfm[e]=Md(i,e)})):this.tfm[e]=i._gsap.x?i._gsap[e]:Md(i,e)),this.props.indexOf(id)>=0)return;i._gsap.svg&&(this.svgo=i.getAttribute("data-svg-origin"),this.props.push(rd,t,"")),e=id}(r||t)&&this.props.push(e,t,r[e])},od=function(e){e.translate&&(e.removeProperty("translate"),e.removeProperty("scale"),e.removeProperty("rotate"))},sd=function(){var e,t,n=this.props,i=this.target,r=i.style,a=i._gsap;for(e=0;e<n.length;e+=3)n[e+1]?i[n[e]]=n[e+2]:n[e+2]?r[n[e]]=n[e+2]:r.removeProperty(n[e].replace(Vh,"-$1").toLowerCase());if(this.tfm){for(t in this.tfm)a[t]=this.tfm[t];a.svg&&(a.renderTransform(),i.setAttribute("data-svg-origin",this.svgo||"")),!(e=Oh())||e.isStart||r[id]||(od(r),a.uncache=1)}},ld=function(e,t){var n={target:e,props:[],revert:sd,save:ad};return t&&t.split(",").forEach((function(e){return n.save(e)})),n},ud=function(e,t){var n=Lh.createElementNS?Lh.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):Lh.createElement(e);return n.style?n:Lh.createElement(e)},cd=function e(t,n,i){var r=getComputedStyle(t);return r[n]||r.getPropertyValue(n.replace(Vh,"-$1").toLowerCase())||r.getPropertyValue(n)||!i&&e(t,dd(n)||n,1)||""},hd="O,Moz,ms,Ms,Webkit".split(","),dd=function(e,t,n){var i=(t||Rh).style,r=5;if(e in i&&!n)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);r--&&!(hd[r]+e in i););return r<0?null:(3===r?"ms":r>=0?hd[r]:"")+e},fd=function(){"undefined"!=typeof window&&window.document&&(Ch=window,Lh=Ch.document,Ph=Lh.documentElement,Rh=ud("div")||{style:{}},ud("div"),id=dd(id),rd=id+"Origin",Rh.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",Nh=!!dd("perspective"),Oh=kh.core.reverting,Dh=1)},pd=function e(t){var n,i=ud("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),r=this.parentNode,a=this.nextSibling,o=this.style.cssText;if(Ph.appendChild(i),i.appendChild(this),this.style.display="block",t)try{n=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=e}catch(e){}else this._gsapBBox&&(n=this._gsapBBox());return r&&(a?r.insertBefore(this,a):r.appendChild(this)),Ph.removeChild(i),this.style.cssText=o,n},md=function(e,t){for(var n=t.length;n--;)if(e.hasAttribute(t[n]))return e.getAttribute(t[n])},vd=function(e){var t;try{t=e.getBBox()}catch(n){t=pd.call(e,!0)}return t&&(t.width||t.height)||e.getBBox===pd||(t=pd.call(e,!0)),!t||t.width||t.x||t.y?t:{x:+md(e,["x","cx","x1"])||0,y:+md(e,["y","cy","y1"])||0,width:0,height:0}},gd=function(e){return!(!e.getCTM||e.parentNode&&!e.ownerSVGElement||!vd(e))},_d=function(e,t){if(t){var n=e.style;t in zh&&t!==rd&&(t=id),n.removeProperty?("ms"!==t.substr(0,2)&&"webkit"!==t.substr(0,6)||(t="-"+t),n.removeProperty(t.replace(Vh,"-$1").toLowerCase())):n.removeAttribute(t)}},yd=function(e,t,n,i,r,a){var o=new vh(e._pt,t,n,0,1,a?Zh:$h);return e._pt=o,o.b=i,o.e=r,e._props.push(n),o},xd={deg:1,rad:1,turn:1},bd={grid:1,flex:1},wd=function e(t,n,i,r){var a,o,s,l,u=parseFloat(i)||0,c=(i+"").trim().substr((u+"").length)||"px",h=Rh.style,d=Hh.test(n),f="svg"===t.tagName.toLowerCase(),p=(f?"client":"offset")+(d?"Width":"Height"),m=100,v="px"===r,g="%"===r;return r===c||!u||xd[r]||xd[c]?u:("px"!==c&&!v&&(u=e(t,n,i,"px")),l=t.getCTM&&gd(t),!g&&"%"!==c||!zh[n]&&!~n.indexOf("adius")?(h[d?"width":"height"]=m+(v?c:r),o=~n.indexOf("adius")||"em"===r&&t.appendChild&&!f?t:t.parentNode,l&&(o=(t.ownerSVGElement||{}).parentNode),o&&o!==Lh&&o.appendChild||(o=Lh.body),(s=o._gsap)&&g&&s.width&&d&&s.time===Lc.time&&!s.uncache?xu(u/s.width*m):((g||"%"===c)&&!bd[cd(o,"display")]&&(h.position=cd(t,"position")),o===t&&(h.position="static"),o.appendChild(Rh),a=Rh[p],o.removeChild(Rh),h.position="absolute",d&&g&&((s=gu(o)).time=Lc.time,s.width=o[p]),xu(v?a*u/m:a&&u?m/a*u:0))):(a=l?t.getBBox()[d?"width":"height"]:t[p],xu(g?u/a*m:u/100*a)))},Md=function(e,t,n,i){var r;return Dh||fd(),t in Wh&&"transform"!==t&&~(t=Wh[t]).indexOf(",")&&(t=t.split(",")[0]),zh[t]&&"transform"!==t?(r=Id(e,i),r="transformOrigin"!==t?r[t]:r.svg?r.origin:Od(cd(e,rd))+" "+r.zOrigin+"px"):(!(r=e.style[t])||"auto"===r||i||~(r+"").indexOf("calc("))&&(r=Ed[t]&&Ed[t](e,t,n)||cd(e,t)||_u(e,t)||("opacity"===t?1:0)),n&&!~(r+"").trim().indexOf(" ")?wd(e,t,r,n)+n:r},Sd=function(e,t,n,i){if(!n||"none"===n){var r=dd(t,e,1),a=r&&cd(e,r,1);a&&a!==n?(t=r,n=a):"borderColor"===t&&(n=cd(e,"borderTopColor"))}var o,s,l,u,c,h,d,f,p,m,v,g=new vh(this._pt,e.style,t,0,1,ch),_=0,y=0;if(g.b=n,g.e=i,n+="","auto"===(i+="")&&(e.style[t]=i,i=cd(e,t)||i,e.style[t]=n),Cc(o=[n,i]),i=o[1],l=(n=o[0]).match(ql)||[],(i.match(ql)||[]).length){for(;s=ql.exec(i);)d=s[0],p=i.substring(_,s.index),c?c=(c+1)%5:"rgba("!==p.substr(-5)&&"hsla("!==p.substr(-5)||(c=1),d!==(h=l[y++]||"")&&(u=parseFloat(h)||0,v=h.substr((u+"").length),"="===d.charAt(1)&&(d=wu(u,d)+v),f=parseFloat(d),m=d.substr((f+"").length),_=ql.lastIndex-m.length,m||(m=m||Tl.units[t]||v,_===i.length&&(i+=m,g.e+=m)),v!==m&&(u=wd(e,t,h,m)||0),g._pt={_next:g._pt,p:p||1===y?p:",",s:u,c:f-u,m:c&&c<4||"zIndex"===t?Math.round:0});g.c=_<i.length?i.substring(_,i.length):""}else g.r="display"===t&&"none"===i?Zh:$h;return $l.test(i)&&(g.e=0),this._pt=g,g},Td={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},Ad=function(e,t){if(t.tween&&t.tween._time===t.tween._dur){var n,i,r,a=t.t,o=a.style,s=t.u,l=a._gsap;if("all"===s||!0===s)o.cssText="",i=1;else for(r=(s=s.split(",")).length;--r>-1;)n=s[r],zh[n]&&(i=1,n="transformOrigin"===n?rd:id),_d(a,n);i&&(_d(a,id),l&&(l.svg&&a.removeAttribute("transform"),Id(a,1),l.uncache=1,od(o)))}},Ed={clearProps:function(e,t,n,i,r){if("isFromStart"!==r.data){var a=e._pt=new vh(e._pt,t,n,0,0,Ad);return a.u=i,a.pr=-10,a.tween=r,e._props.push(n),1}}},kd=[1,0,0,1,0,0],Cd={},Ld=function(e){return"matrix(1, 0, 0, 1, 0, 0)"===e||"none"===e||!e},Pd=function(e){var t=cd(e,id);return Ld(t)?kd:t.substr(7).match(Xl).map(xu)},Dd=function(e,t){var n,i,r,a,o=e._gsap||gu(e),s=e.style,l=Pd(e);return o.svg&&e.getAttribute("transform")?"1,0,0,1,0,0"===(l=[(r=e.transform.baseVal.consolidate().matrix).a,r.b,r.c,r.d,r.e,r.f]).join(",")?kd:l:(l!==kd||e.offsetParent||e===Ph||o.svg||(r=s.display,s.display="block",(n=e.parentNode)&&e.offsetParent||(a=1,i=e.nextElementSibling,Ph.appendChild(e)),l=Pd(e),r?s.display=r:_d(e,"display"),a&&(i?n.insertBefore(e,i):n?n.appendChild(e):Ph.removeChild(e))),t&&l.length>6?[l[0],l[1],l[4],l[5],l[12],l[13]]:l)},Rd=function(e,t,n,i,r,a){var o,s,l,u=e._gsap,c=r||Dd(e,!0),h=u.xOrigin||0,d=u.yOrigin||0,f=u.xOffset||0,p=u.yOffset||0,m=c[0],v=c[1],g=c[2],_=c[3],y=c[4],x=c[5],b=t.split(" "),w=parseFloat(b[0])||0,M=parseFloat(b[1])||0;n?c!==kd&&(s=m*_-v*g)&&(l=w*(-v/s)+M*(m/s)-(m*x-v*y)/s,w=w*(_/s)+M*(-g/s)+(g*x-_*y)/s,M=l):(w=(o=vd(e)).x+(~b[0].indexOf("%")?w/100*o.width:w),M=o.y+(~(b[1]||b[0]).indexOf("%")?M/100*o.height:M)),i||!1!==i&&u.smooth?(y=w-h,x=M-d,u.xOffset=f+(y*m+x*g)-y,u.yOffset=p+(y*v+x*_)-x):u.xOffset=u.yOffset=0,u.xOrigin=w,u.yOrigin=M,u.smooth=!!i,u.origin=t,u.originIsAbsolute=!!n,e.style[rd]="0px 0px",a&&(yd(a,u,"xOrigin",h,w),yd(a,u,"yOrigin",d,M),yd(a,u,"xOffset",f,u.xOffset),yd(a,u,"yOffset",p,u.yOffset)),e.setAttribute("data-svg-origin",w+" "+M)},Id=function(e,t){var n=e._gsap||new Gc(e);if("x"in n&&!t&&!n.uncache)return n;var i,r,a,o,s,l,u,c,h,d,f,p,m,v,g,_,y,x,b,w,M,S,T,A,E,k,C,L,P,D,R,I,O=e.style,N=n.scaleX<0,z="px",U="deg",F=getComputedStyle(e),B=cd(e,rd)||"0";return i=r=a=l=u=c=h=d=f=0,o=s=1,n.svg=!(!e.getCTM||!gd(e)),F.translate&&("none"===F.translate&&"none"===F.scale&&"none"===F.rotate||(O[id]=("none"!==F.translate?"translate3d("+(F.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+("none"!==F.rotate?"rotate("+F.rotate+") ":"")+("none"!==F.scale?"scale("+F.scale.split(" ").join(",")+") ":"")+("none"!==F[id]?F[id]:"")),O.scale=O.rotate=O.translate="none"),v=Dd(e,n.svg),n.svg&&(n.uncache?(E=e.getBBox(),B=n.xOrigin-E.x+"px "+(n.yOrigin-E.y)+"px",A=""):A=!t&&e.getAttribute("data-svg-origin"),Rd(e,A||B,!!A||n.originIsAbsolute,!1!==n.smooth,v)),p=n.xOrigin||0,m=n.yOrigin||0,v!==kd&&(x=v[0],b=v[1],w=v[2],M=v[3],i=S=v[4],r=T=v[5],6===v.length?(o=Math.sqrt(x*x+b*b),s=Math.sqrt(M*M+w*w),l=x||b?Bh(b,x)*Uh:0,(h=w||M?Bh(w,M)*Uh+l:0)&&(s*=Math.abs(Math.cos(h*Fh))),n.svg&&(i-=p-(p*x+m*w),r-=m-(p*b+m*M))):(I=v[6],D=v[7],C=v[8],L=v[9],P=v[10],R=v[11],i=v[12],r=v[13],a=v[14],u=(g=Bh(I,P))*Uh,g&&(A=S*(_=Math.cos(-g))+C*(y=Math.sin(-g)),E=T*_+L*y,k=I*_+P*y,C=S*-y+C*_,L=T*-y+L*_,P=I*-y+P*_,R=D*-y+R*_,S=A,T=E,I=k),c=(g=Bh(-w,P))*Uh,g&&(_=Math.cos(-g),R=M*(y=Math.sin(-g))+R*_,x=A=x*_-C*y,b=E=b*_-L*y,w=k=w*_-P*y),l=(g=Bh(b,x))*Uh,g&&(A=x*(_=Math.cos(g))+b*(y=Math.sin(g)),E=S*_+T*y,b=b*_-x*y,T=T*_-S*y,x=A,S=E),u&&Math.abs(u)+Math.abs(l)>359.9&&(u=l=0,c=180-c),o=xu(Math.sqrt(x*x+b*b+w*w)),s=xu(Math.sqrt(T*T+I*I)),g=Bh(S,T),h=Math.abs(g)>2e-4?g*Uh:0,f=R?1/(R<0?-R:R):0),n.svg&&(A=e.getAttribute("transform"),n.forceCSS=e.setAttribute("transform","")||!Ld(cd(e,id)),A&&e.setAttribute("transform",A))),Math.abs(h)>90&&Math.abs(h)<270&&(N?(o*=-1,h+=l<=0?180:-180,l+=l<=0?180:-180):(s*=-1,h+=h<=0?180:-180)),t=t||n.uncache,n.x=i-((n.xPercent=i&&(!t&&n.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-i)?-50:0)))?e.offsetWidth*n.xPercent/100:0)+z,n.y=r-((n.yPercent=r&&(!t&&n.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-r)?-50:0)))?e.offsetHeight*n.yPercent/100:0)+z,n.z=a+z,n.scaleX=xu(o),n.scaleY=xu(s),n.rotation=xu(l)+U,n.rotationX=xu(u)+U,n.rotationY=xu(c)+U,n.skewX=h+U,n.skewY=d+U,n.transformPerspective=f+z,(n.zOrigin=parseFloat(B.split(" ")[2])||0)&&(O[rd]=Od(B)),n.xOffset=n.yOffset=0,n.force3D=Tl.force3D,n.renderTransform=n.svg?Hd:Nh?Vd:zd,n.uncache=0,n},Od=function(e){return(e=e.split(" "))[0]+" "+e[1]},Nd=function(e,t,n){var i=rc(t);return xu(parseFloat(t)+parseFloat(wd(e,"x",n+"px",i)))+i},zd=function(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,Vd(e,t)},Ud="0deg",Fd="0px",Bd=") ",Vd=function(e,t){var n=t||this,i=n.xPercent,r=n.yPercent,a=n.x,o=n.y,s=n.z,l=n.rotation,u=n.rotationY,c=n.rotationX,h=n.skewX,d=n.skewY,f=n.scaleX,p=n.scaleY,m=n.transformPerspective,v=n.force3D,g=n.target,_=n.zOrigin,y="",x="auto"===v&&e&&1!==e||!0===v;if(_&&(c!==Ud||u!==Ud)){var b,w=parseFloat(u)*Fh,M=Math.sin(w),S=Math.cos(w);w=parseFloat(c)*Fh,b=Math.cos(w),a=Nd(g,a,M*b*-_),o=Nd(g,o,-Math.sin(w)*-_),s=Nd(g,s,S*b*-_+_)}m!==Fd&&(y+="perspective("+m+Bd),(i||r)&&(y+="translate("+i+"%, "+r+"%) "),(x||a!==Fd||o!==Fd||s!==Fd)&&(y+=s!==Fd||x?"translate3d("+a+", "+o+", "+s+") ":"translate("+a+", "+o+Bd),l!==Ud&&(y+="rotate("+l+Bd),u!==Ud&&(y+="rotateY("+u+Bd),c!==Ud&&(y+="rotateX("+c+Bd),h===Ud&&d===Ud||(y+="skew("+h+", "+d+Bd),1===f&&1===p||(y+="scale("+f+", "+p+Bd),g.style[id]=y||"translate(0, 0)"},Hd=function(e,t){var n,i,r,a,o,s=t||this,l=s.xPercent,u=s.yPercent,c=s.x,h=s.y,d=s.rotation,f=s.skewX,p=s.skewY,m=s.scaleX,v=s.scaleY,g=s.target,_=s.xOrigin,y=s.yOrigin,x=s.xOffset,b=s.yOffset,w=s.forceCSS,M=parseFloat(c),S=parseFloat(h);d=parseFloat(d),f=parseFloat(f),(p=parseFloat(p))&&(f+=p=parseFloat(p),d+=p),d||f?(d*=Fh,f*=Fh,n=Math.cos(d)*m,i=Math.sin(d)*m,r=Math.sin(d-f)*-v,a=Math.cos(d-f)*v,f&&(p*=Fh,o=Math.tan(f-p),r*=o=Math.sqrt(1+o*o),a*=o,p&&(o=Math.tan(p),n*=o=Math.sqrt(1+o*o),i*=o)),n=xu(n),i=xu(i),r=xu(r),a=xu(a)):(n=m,a=v,i=r=0),(M&&!~(c+"").indexOf("px")||S&&!~(h+"").indexOf("px"))&&(M=wd(g,"x",c,"px"),S=wd(g,"y",h,"px")),(_||y||x||b)&&(M=xu(M+_-(_*n+y*r)+x),S=xu(S+y-(_*i+y*a)+b)),(l||u)&&(o=g.getBBox(),M=xu(M+l/100*o.width),S=xu(S+u/100*o.height)),o="matrix("+n+","+i+","+r+","+a+","+M+","+S+")",g.setAttribute("transform",o),w&&(g.style[id]=o)},Gd=function(e,t,n,i,r){var a,o,s=360,l=Ol(r),u=parseFloat(r)*(l&&~r.indexOf("rad")?Uh:1)-i,c=i+u+"deg";return l&&("short"===(a=r.split("_")[1])&&(u%=s)!==u%180&&(u+=u<0?s:-360),"cw"===a&&u<0?u=(u+36e9)%s-~~(u/s)*s:"ccw"===a&&u>0&&(u=(u-36e9)%s-~~(u/s)*s)),e._pt=o=new vh(e._pt,t,n,i,u,Xh),o.e=c,o.u="deg",e._props.push(n),o},Wd=function(e,t){for(var n in t)e[n]=t[n];return e},jd=function(e,t,n){var i,r,a,o,s,l,u,c=Wd({},n._gsap),h=n.style;for(r in c.svg?(a=n.getAttribute("transform"),n.setAttribute("transform",""),h[id]=t,i=Id(n,1),_d(n,id),n.setAttribute("transform",a)):(a=getComputedStyle(n)[id],h[id]=t,i=Id(n,1),h[id]=a),zh)(a=c[r])!==(o=i[r])&&"perspective,force3D,transformOrigin,svgOrigin".indexOf(r)<0&&(s=rc(a)!==(u=rc(o))?wd(n,r,a,u):parseFloat(a),l=parseFloat(o),e._pt=new vh(e._pt,i,r,s,l-s,jh),e._pt.u=u||0,e._props.push(r));Wd(i,c)};yu("padding,margin,Width,Radius",(function(e,t){var n="Top",i="Right",r="Bottom",a="Left",o=(t<3?[n,i,r,a]:[n+a,n+i,r+i,r+a]).map((function(n){return t<2?e+n:"border"+n+e}));Ed[t>1?"border"+e:e]=function(e,t,n,i,r){var a,s;if(arguments.length<4)return a=o.map((function(t){return Md(e,t,n)})),5===(s=a.join(" ")).split(a[0]).length?a[0]:s;a=(i+"").split(" "),s={},o.forEach((function(e,t){return s[e]=a[t]=a[t]||a[(t-1)/2|0]})),e.init(t,s,r)}}));var Xd,qd,Yd,$d={name:"css",register:fd,targetTest:function(e){return e.style&&e.nodeType},init:function(e,t,n,i,r){var a,o,s,l,u,c,h,d,f,p,m,v,g,_,y,x,b,w,M,S,T=this._props,A=e.style,E=n.vars.startAt;for(h in Dh||fd(),this.styles=this.styles||ld(e),x=this.styles.props,this.tween=n,t)if("autoRound"!==h&&(o=t[h],!hu[h]||!Zc(h,t,n,i,e,r)))if(u=void 0===o?"undefined":R(o),c=Ed[h],"function"===u&&(u=void 0===(o=o.call(n,i,e,r))?"undefined":R(o)),"string"===u&&~o.indexOf("random(")&&(o=mc(o)),c)c(this,e,h,o,n)&&(y=1);else if("--"===h.substr(0,2))a=(getComputedStyle(e).getPropertyValue(h)+"").trim(),o+="",Ec.lastIndex=0,Ec.test(a)||(d=rc(a),f=rc(o)),f?d!==f&&(a=wd(e,h,a,f)+f):d&&(o+=d),this.add(A,"setProperty",a,o,i,r,0,0,h),T.push(h),x.push(h,0,A[h]);else if("undefined"!==u){if(E&&h in E?(a="function"==typeof E[h]?E[h].call(n,i,e,r):E[h],Ol(a)&&~a.indexOf("random(")&&(a=mc(a)),rc(a+"")||(a+=Tl.units[h]||rc(Md(e,h))||""),"="===(a+"").charAt(1)&&(a=Md(e,h))):a=Md(e,h),l=parseFloat(a),(p="string"===u&&"="===o.charAt(1)&&o.substr(0,2))&&(o=o.substr(2)),s=parseFloat(o),h in Wh&&("autoAlpha"===h&&(1===l&&"hidden"===Md(e,"visibility")&&s&&(l=0),x.push("visibility",0,A.visibility),yd(this,A,"visibility",l?"inherit":"hidden",s?"inherit":"hidden",!s)),"scale"!==h&&"transform"!==h&&~(h=Wh[h]).indexOf(",")&&(h=h.split(",")[0])),m=h in zh)if(this.styles.save(h),v||((g=e._gsap).renderTransform&&!t.parseTransform||Id(e,t.parseTransform),_=!1!==t.smoothOrigin&&g.smooth,(v=this._pt=new vh(this._pt,A,id,0,1,g.renderTransform,g,0,-1)).dep=1),"scale"===h)this._pt=new vh(this._pt,g,"scaleY",l,(p?wu(l,p+s):s)-l||0,jh),this._pt.u=0,T.push("scaleY",h),h+="X";else{if("transformOrigin"===h){x.push(rd,0,A[rd]),w=void 0,M=void 0,S=void 0,w=(b=o).split(" "),M=w[0],S=w[1]||"50%","top"!==M&&"bottom"!==M&&"left"!==S&&"right"!==S||(b=M,M=S,S=b),w[0]=Td[M]||M,w[1]=Td[S]||S,o=w.join(" "),g.svg?Rd(e,o,0,_,0,this):((f=parseFloat(o.split(" ")[2])||0)!==g.zOrigin&&yd(this,g,"zOrigin",g.zOrigin,f),yd(this,A,h,Od(a),Od(o)));continue}if("svgOrigin"===h){Rd(e,o,1,_,0,this);continue}if(h in Cd){Gd(this,g,h,l,p?wu(l,p+o):o);continue}if("smoothOrigin"===h){yd(this,g,"smooth",g.smooth,o);continue}if("force3D"===h){g[h]=o;continue}if("transform"===h){jd(this,o,e);continue}}else h in A||(h=dd(h)||h);if(m||(s||0===s)&&(l||0===l)&&!Gh.test(o)&&h in A)s||(s=0),(d=(a+"").substr((l+"").length))!==(f=rc(o)||(h in Tl.units?Tl.units[h]:d))&&(l=wd(e,h,a,f)),this._pt=new vh(this._pt,m?g:A,h,l,(p?wu(l,p+s):s)-l,m||"px"!==f&&"zIndex"!==h||!1===t.autoRound?jh:Yh),this._pt.u=f||0,d!==f&&"%"!==f&&(this._pt.b=a,this._pt.r=qh);else if(h in A)Sd.call(this,e,h,a,p?p+o:o);else{if(!(h in e)){tu(h,o);continue}this.add(e,h,a||e[h],p?p+o:o,i,r)}m||(h in A?x.push(h,0,A[h]):x.push(h,1,a||e[h])),T.push(h)}y&&mh(this)},render:function(e,t){if(t.tween._time||!Oh())for(var n=t._pt;n;)n.r(e,n.d),n=n._next;else t.styles.revert()},get:Md,aliases:Wh,getSetter:function(e,t,n){var i=Wh[t];return i&&i.indexOf(",")<0&&(t=i),t in zh&&t!==rd&&(e._gsap.x||Md(e,"x"))?n&&Ih===n?"scale"===t?ed:Qh:(Ih=n||{},"scale"===t?td:nd):e.style&&!Ul(e.style[t])?Jh:~t.indexOf("-")?Kh:sh(e,t)},core:{_removeProperty:_d,_getMatrix:Dd}};kh.utils.checkPrefix=dd,kh.core.getStyleSaver=ld,Yd=yu((Xd="x,y,z,scale,scaleX,scaleY,xPercent,yPercent")+","+(qd="rotation,rotationX,rotationY,skewX,skewY")+",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective",(function(e){zh[e]=1})),yu(qd,(function(e){Tl.units[e]="deg",Cd[e]=1})),Wh[Yd[13]]=Xd+","+qd,yu("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY",(function(e){var t=e.split(":");Wh[t[1]]=Yd[t[0]]})),yu("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",(function(e){Tl.units[e]="px"})),kh.registerPlugin($d);var Zd,Jd=kh.registerPlugin($d)||kh;Jd.core.Tween;Zd=a("icxnm").getBundleURL("3LtfI")+a("gdwRx").resolve("469Ve");var Kd;Kdvar Qd={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor.a *= opacity;\n\n\n\t\t}"},ef=function(){"use strict";function e(){o(this,e),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}return l(e,[{key:"setSize",value:function(){}},{key:"render",value:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}},{key:"dispose",value:function(){}}]),e}(),tf=new or(-1,1,1,-1,0,1),nf=new li;nf.setAttribute("position",new ei([-1,3,0,-1,-1,0,3,-1,0],3)),nf.setAttribute("uv",new ei([0,2,0,0,2,0],2));var rf=function(){"use strict";function e(t){o(this,e),this._mesh=new Ai(nf,t)}return l(e,[{key:"dispose",value:function(){this._mesh.geometry.dispose()}},{key:"render",value:function(e){e.render(this._mesh,tf)}},{key:"material",get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}]),e}(),af=function(e){"use strict";x(n,e);var t=O(n);function n(e,i){var r;return o(this,n),(r=t.call(this)).textureID=void 0!==i?i:"tDiffuse",e instanceof Ri?(r.uniforms=e.uniforms,r.material=e):e&&(r.uniforms=Di.clone(e.uniforms),r.material=new Ri({defines:Object.assign({},e.defines),uniforms:r.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),r.fsQuad=new rf(r.material),r}return l(n,[{key:"render",value:function(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}},{key:"dispose",value:function(){this.material.dispose(),this.fsQuad.dispose()}}]),n}(ef),of=function(e){"use strict";x(n,e);var t=O(n);function n(e,i){var r;return o(this,n),(r=t.call(this)).scene=e,r.camera=i,r.clear=!0,r.needsSwap=!1,r.inverse=!1,r}return l(n,[{key:"render",value:function(e,t,n){var i,r,a=e.getContext(),o=e.state;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0),this.inverse?(i=0,r=1):(i=1,r=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),o.buffers.stencil.setFunc(a.ALWAYS,i,4294967295),o.buffers.stencil.setClear(r),o.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(a.EQUAL,1,4294967295),o.buffers.stencil.setOp(a.KEEP,a.KEEP,a.KEEP),o.buffers.stencil.setLocked(!0)}}]),n}(ef),sf=function(e){"use strict";x(n,e);var t=O(n);function n(){var e;return o(this,n),(e=t.call(this)).needsSwap=!1,e}return l(n,[{key:"render",value:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}]),n}(ef),lf=function(){"use strict";function e(t,n){if(o(this,e),this.renderer=t,void 0===n){var i=t.getSize(new rt);this._pixelRatio=t.getPixelRatio(),this._width=i.width,this._height=i.height,(n=new kt(this._width*this._pixelRatio,this._height*this._pixelRatio)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=n.width,this._height=n.height;this.renderTarget1=n,this.renderTarget2=n.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===Qd&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===af&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new af(Qd),this.clock=new ss}return l(e,[{key:"swapBuffers",value:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}},{key:"addPass",value:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"insertPass",value:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"removePass",value:function(e){var t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}},{key:"isLastEnabledPass",value:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}},{key:"render",value:function(e){void 0===e&&(e=this.clock.getDelta());for(var t=this.renderer.getRenderTarget(),n=!1,i=0,r=this.passes.length;i<r;i++){var a=this.passes[i];if(!1!==a.enabled){if(a.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),a.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),a.needsSwap){if(n){var o=this.renderer.getContext(),s=this.renderer.state.buffers.stencil;s.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),s.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==of&&(a instanceof of?n=!0:a instanceof sf&&(n=!1))}}this.renderer.setRenderTarget(t)}},{key:"reset",value:function(e){if(void 0===e){var t=this.renderer.getSize(new rt);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}},{key:"setSize",value:function(e,t){this._width=e,this._height=t;var n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(var r=0;r<this.passes.length;r++)this.passes[r].setSize(n,i)}},{key:"setPixelRatio",value:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}},{key:"dispose",value:function(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}]),e}(),uf=(new or(-1,1,1,-1,0,1),new li);uf.setAttribute("position",new ei([-1,3,0,-1,-1,0,3,-1,0],3)),uf.setAttribute("uv",new ei([0,2,0,0,2,0],2));var cf=function(e){"use strict";x(n,e);var t=O(n);function n(e,i,r,a,s){var l;return o(this,n),(l=t.call(this)).scene=e,l.camera=i,l.overrideMaterial=r,l.clearColor=a,l.clearAlpha=void 0!==s?s:0,l.clear=!0,l.clearDepth=!1,l.needsSwap=!1,l._oldClearColor=new bt,l}return l(n,[{key:"render",value:function(e,t,n){var i,r,a=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(r=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),i=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,i),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=r),e.autoClear=a}}]),n}(ef),hf={uniforms:{tDiffuse:{value:null},distort:{value:.5},time:{value:0}},vertexShader:"varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}",fragmentShader:"uniform sampler2D tDiffuse;\n\t  uniform float distort;\n\t  uniform float time;\n\t  varying vec2 vUv;\n  \n  \n\t  const float max_distort = 1.5;\n\t  const int num_iter = 12;\n\t  const float reci_num_iter_f = 1.0 / float(num_iter);\n  \n\t  // chromatic aberration\n\t  vec2 barrelDistortion(vec2 coord, float amt) {\n\t\tvec2 cc = coord - 0.5;\n\t\tfloat dist = dot(cc, cc);\n\t\treturn coord + cc * dist * amt;\n\t  }\n  \n\t  float sat( float t )\n\t  {\n\t\treturn clamp( t, 0.0, 1.0 );\n\t  }\n  \n\t  float linterp( float t ) {\n\t\treturn sat( 1.0 - abs( 2.0*t - 1.0 ) );\n\t  }\n  \n\t  float remap( float t, float a, float b ) {\n\t\treturn sat( (t - a) / (b - a) );\n\t  }\n  \n\t  vec4 spectrum_offset( float t ) {\n\t\tvec4 ret;\n\t\tfloat lo = step(t,0.5);\n\t\tfloat hi = 1.0-lo;\n\t\tfloat w = linterp( remap( t, 1.0/6.0, 5.0/6.0 ) );\n\t\tret = vec4(lo,1.0,hi, 1.) * vec4(1.0-w, w, 1.0-w, 1.);\n  \n\t\treturn pow( ret, vec4(1.0/2.2) );\n\t  }\n  \n  \n  \n\t  void main() { \n\t\tvec2 zUV = (vUv - vec2(0.5))*0.95 + vec2(0.5);\n\t\tvec4 sumcol = vec4(0.0);\n\t\tvec4 sumw = vec4(0.0);  \n\t\tfor ( int i=0; i<num_iter;++i )\n\t\t{\n\t\t  float t = float(i) * reci_num_iter_f;\n\t\t  vec4 w = spectrum_offset( t );\n\t\t  sumw += w;\n\t\t  sumcol += w * texture2D( tDiffuse, barrelDistortion(zUV, .2 * distort*t ) );\n\t\t}\n  \n\t\tvec4 color = sumcol / sumw;\n  \n\t\tgl_FragColor = color;\n\t  }"},df=(Math.sqrt(3),Math.sqrt(3),1/3),ff=1/6,pf=(Math.sqrt(5),Math.sqrt(5),function(e){return 0|Math.floor(e)}),mf=new Float64Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]);function vf(e){for(var t=512,n=new Uint8Array(t),i=0;i<256;i++)n[i]=i;for(var r=0;r<255;r++){var a=r+~~(e()*(256-r)),o=n[r];n[r]=n[a],n[a]=o}for(var s=256;s<t;s++)n[s]=n[s-256];return n}var gf={};gf=function(){"use strict";var e=function(){return function(e){var n=0,i=0,r=0,a=1;0==e.length&&(e=[+new Date]);var o=t();n=o(" "),i=o(" "),r=o(" ");for(var s=0;s<e.length;s++)(n-=o(e[s]))<0&&(n+=1),(i-=o(e[s]))<0&&(i+=1),(r-=o(e[s]))<0&&(r+=1);o=null;var l=function(){var e=2091639*n+2.3283064365386963e-10*a;return n=i,i=r,r=e-(a=0|e)};return l.next=l,l.uint32=function(){return 4294967296*l()},l.fract53=function(){return l()+11102230246251565e-32*(2097152*l()|0)},l.version="Alea 0.9",l.args=e,l.exportState=function(){return[n,i,r,a]},l.importState=function(e){n=+e[0]||0,i=+e[1]||0,r=+e[2]||0,a=+e[3]||0},l}(Array.prototype.slice.call(arguments))},t=function(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){var i=.02519603282416938*(e+=t.charCodeAt(n));i-=e=i>>>0,e=(i*=e)>>>0,e+=4294967296*(i-=e)}return 2.3283064365386963e-10*(e>>>0)};return t.version="Mash 0.9",t};return e.importState=function(t){var n=new e;return n.importState(t),n},e}(),t(Kd).splice(0,50);var _f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Math.random,t=vf(e),n=new Float64Array(t).map((function(e){return mf[e%12*3]})),i=new Float64Array(t).map((function(e){return mf[e%12*3+1]})),r=new Float64Array(t).map((function(e){return mf[e%12*3+2]}));return function(e,a,o){var s,l,u,c,h,d,f,p,m,v,g=(e+a+o)*df,_=pf(e+g),y=pf(a+g),x=pf(o+g),b=(_+y+x)*ff,w=e-(_-b),M=a-(y-b),S=o-(x-b);w>=M?M>=S?(h=1,d=0,f=0,p=1,m=1,v=0):w>=S?(h=1,d=0,f=0,p=1,m=0,v=1):(h=0,d=0,f=1,p=1,m=0,v=1):M<S?(h=0,d=0,f=1,p=0,m=1,v=1):w<S?(h=0,d=1,f=0,p=0,m=1,v=1):(h=0,d=1,f=0,p=1,m=1,v=0);var T=w-h+ff,A=M-d+ff,E=S-f+ff,k=w-p+.3333333333333333,C=M-m+.3333333333333333,L=S-v+.3333333333333333,P=w-1+.5,D=M-1+.5,R=S-1+.5,I=255&_,O=255&y,N=255&x,z=.6-w*w-M*M-S*S;if(z<0)s=0;else{var U=I+t[O+t[N]];s=(z*=z)*z*(n[U]*w+i[U]*M+r[U]*S)}var F=.6-T*T-A*A-E*E;if(F<0)l=0;else{var B=I+h+t[O+d+t[N+f]];l=(F*=F)*F*(n[B]*T+i[B]*A+r[B]*E)}var V=.6-k*k-C*C-L*L;if(V<0)u=0;else{var H=I+p+t[O+m+t[N+v]];u=(V*=V)*V*(n[H]*k+i[H]*C+r[H]*L)}var G=.6-P*P-D*D-R*R;if(G<0)c=0;else{var W=I+1+t[O+1+t[N+1]];c=(G*=G)*G*(n[W]*P+i[W]*D+r[W]*R)}return 32*(s+l+u+c)}}(t(gf)("B")),yf=(Math.sin,Math.cos,Math.PI),xf=Math.floor,bf=Math.abs;Math.max,Math.min;function wf(e,t,n){return Math.max(t,Math.min(e,n))}function Mf(e,t,n){return Math.max(0,Math.min(1,(n-e)/(t-e)))}window.RiotAnimation=function(){"use strict";function e(n){var i=this;o(this,e),this.scene=new ko,this.saveSound=[],this.output=!1,this.soundIndex=0,this.SOUND=t(Kd),this.container=n.dom,this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer=new Ao({antialias:!0}),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.setSize(this.width,this.height),this.renderer.setClearColor(0,1),this.renderer.physicallyCorrectLights=!0,this.renderer.outputEncoding=Fe,this.raycaster=new ws,this.pointer=new rt,this.point=new Dt(0,0,0),this.container.appendChild(this.renderer.domElement),this.camera=new Oi(70,this.width/this.height,.1,10),this.mouse={x:0,y:0,prevX:0,prevY:0,vX:0,vY:0},this.camera.position.set(0,0,2),this.time=0,this.setUpsettings(),this.isPlaying=!0,this.initPost(),this.resize(),this.addObjects(),this.render(),this.setupResize(),this.runPhysics=!1,setTimeout((function(){i.runPhysics=!0}),500),this.mouseEvents(),this.STATES=[{riot:.2,otherVoices:0},{riot:.4,otherVoices:0},{riot:.6,otherVoices:.37}]}return l(e,[{key:"gotoStep",value:function(e){Jd.to(this.settings,{otherVoices:this.STATES[e].otherVoices,riot:this.STATES[e].riot})}},{key:"soundStuff",value:function(){console.log(Ts,"123"),this.sound=new As({src:track,format:["mp3"],loop:!0,volume:1}),this.sound.play();var e=Ts.ctx.createMediaStreamDestination();Ts.masterGain.connect(e),this.analyser=Ts.ctx.createAnalyser(),Ts.masterGain.connect(this.analyser),this.analyser.connect(Ts.ctx.destination),this.analyser.fftSize=128;var t=this.analyser.frequencyBinCount;this.dataArray=new Uint8Array(t),this.analyser.getByteTimeDomainData(this.dataArray)}},{key:"initPost",value:function(){this.composer=new lf(this.renderer);var e=new cf(this.scene,this.camera);this.composer.addPass(e),this.effectPass1=new af(hf),console.log(this.effectPass1),this.composer.addPass(this.effectPass1)}},{key:"setUpsettings",value:function(){var e=this;this.settings={radius:.5,relaxation:.99,power:1,movePower:0,rgbshift:!1,rgbshiftPower:.5,synthpower:1,strong:!1,speed:1,riot:.2,otherVoicesPosition:0,centralRiotWidth:.5,sideRiotWidth:.5,sideRiotPosition:20,sideRiotHeight:.5,smoothness:15,smoothnessOffset:.35,otherVoices:1,grayStart:0,grayEnd:.6,grayMin:.3,amp1:1,amp2:1,amp3:1,amp4:1,amp1Pos:0,amp2Pos:0,amp3Pos:0,amp4Pos:0,amp1Curve:.57,amp2Curve:.57,amp3Curve:.57,amp4Curve:.57},this.gui=new Xs,this.soundSettings=this.gui.addFolder("Sound"),this.other=this.gui.addFolder("VoicesPositions"),this.mouseSettings=this.gui.addFolder("Mouse").close(),this.effectSettings=this.gui.addFolder("Effects").close(),this.mouseSettings.add(this.settings,"radius",0,1,.01),this.mouseSettings.add(this.settings,"relaxation",.5,1,.01),this.mouseSettings.add(this.settings,"power",.5,5,.01),this.effectSettings.add(this.settings,"rgbshift"),this.effectSettings.add(this.settings,"rgbshiftPower",0,1,.01).onChange((function(t){e.effectPass1.uniforms.distort.value=t})),this.soundSettings.add(this.settings,"riot",0,1,.01),this.soundSettings.add(this.settings,"otherVoices",0,1,.01),this.soundSettings.add(this.settings,"sideRiotPosition",5,50,1),this.soundSettings.add(this.settings,"otherVoicesPosition",-1,1,.01),this.soundSettings.add(this.settings,"smoothness",0,30,1),this.soundSettings.add(this.settings,"smoothnessOffset",0,1,.01),this.soundSettings.add(this.settings,"grayStart",0,1,.01).onChange((function(t){e.material.uniforms.grayStart.value=t})),this.soundSettings.add(this.settings,"grayEnd",0,1,.01).onChange((function(t){e.material.uniforms.grayEnd.value=t})),this.soundSettings.add(this.settings,"grayMin",0,1,.01).onChange((function(t){e.material.uniforms.grayMin.value=t})),this.other.add(this.settings,"amp1",-5,5,.01),this.other.add(this.settings,"amp2",-5,5,.01),this.other.add(this.settings,"amp3",-5,5,.01),this.other.add(this.settings,"amp4",-5,5,.01),this.other.add(this.settings,"amp1Pos",-1,1,.01),this.other.add(this.settings,"amp2Pos",-1,1,.01),this.other.add(this.settings,"amp3Pos",-1,1,.01),this.other.add(this.settings,"amp4Pos",-1,1,.01),this.other.add(this.settings,"amp1Curve",0,3,.01),this.other.add(this.settings,"amp2Curve",0,3,.01),this.other.add(this.settings,"amp3Curve",0,3,.01),this.other.add(this.settings,"amp4Curve",0,3,.01)}},{key:"setupResize",value:function(){window.addEventListener("resize",this.resize.bind(this))}},{key:"resize",value:function(){this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer.setSize(this.width,this.height),this.composer.setSize(this.width,this.height),this.camera.aspect=this.width/this.height,this.getGeometry(),this.camera.updateProjectionMatrix()}},{key:"mouseEvents",value:function(){var e=this,t=new Ai(new Es(10,10,30,30),new Yn({color:16711680,wireframe:!0}));new Ai(new ks(.1,20,20),new Yn({color:16711680,wireframe:!0}));window.addEventListener("mousemove",(function(n){e.mouse.x=n.clientX/e.width,e.mouse.y=n.clientY/e.height,e.mouse.vX=e.mouse.x-e.mouse.prevX,e.mouse.vY=e.mouse.y-e.mouse.prevY,e.mouse.vX=wf(e.mouse.vX,-.05,.05),e.mouse.vY=wf(e.mouse.vY,-.05,.05),e.mouse.prevX=e.mouse.x,e.mouse.prevY=e.mouse.y,e.pointer.x=n.clientX/window.innerWidth*2-1,e.pointer.y=-n.clientY/window.innerHeight*2+1,e.raycaster.setFromCamera(e.pointer,e.camera);var i=e.raycaster.intersectObjects([t]);i[0]&&(e.point=i[0].point)}))}},{key:"addObjects",value:function(){this.viewportHeight=4*Math.tan(this.camera.fov/180)*this.camera.position.z,this.viewportWidth=this.camera.aspect*this.viewportHeight;this.material=new Ri({extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:2,uniforms:{time:{value:0},resolution:{value:new Et},grayStart:{value:this.settings.grayStart},grayEnd:{value:this.settings.grayEnd},grayMin:{value:this.settings.grayMin},movePower:{value:0},uTexture:{value:(new Jo).load(t(Zd))}},transparent:!0,depthTest:!1,depthWrite:!1,vertexShader:t("#define GLSLIFY 1\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nuniform vec2 pixels;\nuniform float movePower;\nfloat PI = 3.141592653589793238;\nattribute vec3 translate;\nattribute float aRotate;\nattribute float aRandom;\nattribute vec2 aMove;\nattribute float aColor;\nattribute float aInitial;\nvarying float size;\nvarying float vColor;\n\nmat4 rotationMatrix(vec3 axis, float angle) {\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n}\n\nvec3 rotate(vec3 v, vec3 axis, float angle) {\n  mat4 m = rotationMatrix(axis, angle);\n  return (m * vec4(v, 1.0)).xyz;\n}\n\nvoid main() {\n  vUv = uv;\n  vColor = aColor;\n\n  float col;\n  float rscale;\n\n  vec3 newpos = position;\n  // scale\n  float scale =  (abs(aMove.x) + abs(aMove.y))*0.5;\n\n  rscale = mix(scale,0.8,smoothstep(0.,0.7,scale));\n  col = scale;\n\n  newpos *=rscale;\n  vColor = col;\n  size = ((abs(aMove.x) + abs(aMove.y))*0.5);\n\n  // rotate\n  // newpos = rotate(newpos,vec3(0.,1.,1.),aMove.x);\n  // translate\n  newpos += translate + movePower*0.1*vec3(aMove,0);\n\n  \n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( newpos, 1.0 );\n}"),fragmentShader:t("#define GLSLIFY 1\nuniform float time;\nuniform float progress;\nuniform float grayStart;\nuniform float grayEnd;\nuniform float grayMin;\nuniform sampler2D uTexture;\nuniform vec4 resolution;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nfloat PI = 3.141592653589793238;\nvarying float size;\nvarying float vColor;\nvoid main()\t{\n\t// vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n\tvec4 c = texture2D(uTexture,vUv);\n\tgl_FragColor = c;\n\t// gl_FragColor *= (0.5 + 0.5*smoothstep(0.5,0.8,size));\n\t// gl_FragColor.rgb *= max(0.6,1. - (1.-pow(vColor,6.)));\n\tif(c.r==0.) discard;\n\n\t// gl_FragColor = vec4(1.);\n\tfloat grad = smoothstep(grayStart,grayEnd,vColor);\n\n\tgrad = max(grad,grayMin);\n\n\tgl_FragColor.a = grad;\n}"),blending:2}),this.getGeometry(),this.plane=new Ai(this.ig,this.material),this.scene.add(this.plane)}},{key:"getGeometry",value:function(){this.rows=50,this.cols=Math.floor(this.rows*this.camera.aspect),console.log(this.cols,this.camera.aspect,this.camera);var e=this.viewportHeight/this.rows,t=1.14*e,n=new $i(t,e);this.ig=new os,this.ig.attributes=n.attributes,this.ig.index=n.index;var i=this.rows*this.cols,r=new Float32Array(3*i),a=new Float32Array(i),o=new Float32Array(i),s=new Float32Array(i);this.moveArray=new Float32Array(2*i),this.mouseArray=new Float32Array(2*i),this.soundArray=new Float32Array(i),this.colorArray=new Float32Array(i),this.gridPositions=[];for(var l=0,u=0;u<this.rows;u++)for(var c=0;c<this.cols;c++){var h=0;u%2==0&&(h=t/2);var d=(c-this.cols/2)*t+h,f=(u-this.rows/2)*e;r.set([d,f,0],3*l),this.gridPositions.push({x:d,y:f}),o.set([Math.random()],l),s.set([.5-Math.abs(u-this.rows/2)/this.rows],l),s.set([0],l),this.moveArray.set([0,0],2*l),this.mouseArray.set([0,0],2*l),this.soundArray.set([0],l),this.colorArray.set([0],l),l++}console.log(r),this.ig.setAttribute("translate",new Co(r,3)),this.ig.setAttribute("aRotate",new Co(a,1)),this.ig.setAttribute("aRandom",new Co(o,1)),this.ig.setAttribute("aInitial",new Co(s,1)),this.ig.setAttribute("aMove",new Co(this.moveArray,2)),this.ig.setAttribute("aColor",new Co(this.colorArray,1)),this.plane&&(this.plane.geometry=this.ig)}},{key:"addLights",value:function(){var e=new as(16777215,.5);this.scene.add(e);var t=new rs(16777215,.5);t.position.set(.5,0,.866),this.scene.add(t)}},{key:"synth",value:function(){for(var e=0,t=bf(_f(0,0,.4*this.time)),n=(bf(_f(0,0,.4*this.time*this.settings.speed)),bf(_f(10,0,.7*this.time*this.settings.speed)),0);n<this.rows;n++)for(var i=0;i<this.cols;i++){var r,a=i/this.cols-.5,o=n/this.rows-.5,s=Math.sin((o+.5)*yf),l=.5*Mf(.035,0,bf(o))+.15*Math.pow(s,2),u=void 0;u=Mf(0,this.settings.centralRiotWidth+.1*this.settings.riot,bf(a))+1/(t+.01)*(1-this.settings.riot)*bf(o)*(1.5-bf(o)),u=Math.pow(Mf(this.settings.smoothnessOffset,this.settings.smoothnessOffset-this.settings.smoothness,u),5);var c=Mf(0,this.settings.sideRiotWidth,bf(bf(2*a)-this.settings.sideRiotPosition))+1/(t+.01)*(1-this.settings.riot)*bf(o)*(2-bf(o));c=Math.pow(Mf(this.settings.smoothnessOffset+this.settings.smoothness/2,this.settings.smoothnessOffset-this.settings.smoothness/2,c),7),r=this.settings.synthpower*(u+c)+l,this.soundArray[e]=r,this.settings.strong&&(this.soundArray[e]=100*r),e+=1}}},{key:"soundAmp",value:function(){var e=bf(_f(0,0,.4*this.time)),t=0;this.dataArray=this.SOUND[this.soundIndex],this.dataArray1=this.SOUND[(this.soundIndex+700)%this.SOUND.length],this.dataArray2=this.SOUND[(this.soundIndex+1500)%this.SOUND.length],this.dataArray3=this.SOUND[(this.soundIndex+400)%this.SOUND.length],this.dataArray4=this.SOUND[(this.soundIndex+2e3)%this.SOUND.length];for(var n=0;n<this.rows;n++)for(var i=0;i<this.cols;i++){var r=5*this.settings.riot,a=.03*r*this.dataArray[Math.floor(Math.abs(i-this.cols/2))];a+=.01*r*this.dataArray[Math.floor(Math.abs(bf(i-this.cols/2)-this.settings.sideRiotPosition))];var o=i/this.cols-.5,s=n/this.rows-.5,l=Math.sin((s+.5)*yf),u=.5*Mf(.0015,0,bf(s))+.15*Math.pow(l,2),c=Mf(a+0*this.settings.smoothness/2,a-2*this.settings.smoothness/2,Math.abs(n-this.rows/2)),h=.03*r*(this.settings.amp1*this.dataArray1[wf(xf(this.settings.amp1Curve*bf(i-this.cols/4-20*this.settings.amp1Pos)),0,this.dataArray.length-1)]+this.settings.amp2*this.dataArray2[wf(xf(this.settings.amp2Curve*bf(i-3*this.cols/4+20*this.settings.amp2Pos)),0,this.dataArray.length-1)]),d=.03*r*(this.settings.amp3*this.dataArray3[wf(xf(this.settings.amp3Curve*bf(i-this.cols/4-20*this.settings.amp3Pos)),0,this.dataArray.length-1)]+this.settings.amp4*this.dataArray4[wf(xf(this.settings.amp4Curve*bf(i-3*this.cols/4+20*this.settings.amp4Pos)),0,this.dataArray.length-1)]),f=Mf(h+this.settings.smoothness/2,h-this.settings.smoothness/2,Math.abs(n-this.rows))+Mf(d+this.settings.smoothness/2,d-this.settings.smoothness/2,n);c+=f*=this.settings.otherVoices;var p=Mf(a+this.settings.smoothness+2,a,Math.abs(n-this.rows/2)+this.settings.smoothness+2),m=Mf(0,this.settings.sideRiotWidth,bf(bf(2*o)-this.settings.sideRiotPosition))+1/(e+.01)*(1-this.settings.riot)*bf(s)*(2-bf(s));m=Mf(this.settings.smoothnessOffset,this.settings.smoothnessOffset-this.settings.smoothness,m),this.soundArray[t]=c+u+0*m,this.colorArray[t]=p+this.settings.riot*u,t+=1}}},{key:"updateGrid",value:function(){var e,t=0,n=this.settings.radius,i=Math.pow(n,2);this.soundAmp();for(var r=0;r<this.rows*this.cols*2;r++)this.moveArray[r]=0,this.mouseArray[r]*=this.settings.relaxation;for(var a=0;a<this.rows;a++)for(var o=0;o<this.cols;o++){e=this.gridPositions[t];var s=Math.pow(e.x-this.point.x,2)+Math.pow(e.y-this.point.y,2);if(s<i){var l=n/Math.sqrt(s);l=wf(l,0,10),this.mouseArray[2*t]+=this.settings.power*bf(this.mouse.vX)*l,this.mouseArray[2*t+1]-=this.settings.power*bf(this.mouse.vY)*l,this.colorArray[t]+=10.5*(this.mouseArray[2*t]-this.mouseArray[2*t+1])}this.moveArray[2*t]+=this.mouseArray[2*t]+this.soundArray[t],this.moveArray[2*t+1]+=this.mouseArray[2*t+1]-this.soundArray[t],this.moveArray[2*t+0]=wf(this.moveArray[2*t+0],-1,1),this.moveArray[2*t+1]=wf(this.moveArray[2*t+1],-1,1),t++}this.ig.attributes.aMove.array=this.moveArray,this.ig.attributes.aColor.array=this.colorArray,this.ig.attributes.aMove.needsUpdate=!0,this.ig.attributes.aColor.needsUpdate=!0,this.mouse.vX*=.9,this.mouse.vY*=.9}},{key:"render",value:function(){this.isPlaying&&(this.time+=.05*this.settings.speed,this.soundIndex+=1,this.soundIndex%=this.SOUND.length,this.updateGrid(),this.material.uniforms.time.value=this.time,requestAnimationFrame(this.render.bind(this)),this.settings.rgbshift?this.composer.render():this.renderer.render(this.scene,this.camera))}}]),e}()}();
//# sourceMappingURL=app.js.map
